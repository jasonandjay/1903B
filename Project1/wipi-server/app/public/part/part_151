C0000}-\\\\u{CFFFD}]/u,\\n  // /[\\\\u{D0000}-\\\\u{DFFFD}\\\\u{E0000-\\\\u{EFFFD}]/u\\n);\\n\\n// Valid characters for identifiers.\\nconst identifierCharacter = either(\\n  identifierHead,\\n  /\\\\d/,\\n  /[\\\\u0300-\\\\u036F\\\\u1DC0-\\\\u1DFF\\\\u20D0-\\\\u20FF\\\\uFE20-\\\\uFE2F]/\\n);\\n\\n// Valid identifier.\\nconst identifier = concat(identifierHead, identifierCharacter, '*');\\n\\n// Valid type identifier.\\nconst typeIdentifier = concat(/[A-Z]/, identifierCharacter, '*');\\n\\n// Built-in attributes, which are highlighted as keywords.\\n// @available is handled separately.\\nconst keywordAttributes = [\\n  'autoclosure',\\n  concat(/convention\\\\(/, either('swift', 'block', 'c'), /\\\\)/),\\n  'discardableResult',\\n  'dynamicCallable',\\n  'dynamicMemberLookup',\\n  'escaping',\\n  'frozen',\\n  'GKInspectable',\\n  'IBAction',\\n  'IBDesignable',\\n  'IBInspectable',\\n  'IBOutlet',\\n  'IBSegueAction',\\n  'inlinable',\\n  'main',\\n  'nonobjc',\\n  'NSApplicationMain',\\n  'NSCopying',\\n  'NSManaged',\\n  concat(/objc\\\\(/, identifier, /\\\\)/),\\n  'objc',\\n  'objcMembers',\\n  'propertyWrapper',\\n  'requires_stored_property_inits',\\n  'resultBuilder',\\n  'testable',\\n  'UIApplicationMain',\\n  'unknown',\\n  'usableFromInline'\\n];\\n\\n// Contextual keywords used in @available and #available.\\nconst availabilityKeywords = [\\n  'iOS',\\n  'iOSApplicationExtension',\\n  'macOS',\\n  'macOSApplicationExtension',\\n  'macCatalyst',\\n  'macCatalystApplicationExtension',\\n  'watchOS',\\n  'watchOSApplicationExtension',\\n  'tvOS',\\n  'tvOSApplicationExtension',\\n  'swift'\\n];\\n\\n/*\\nLanguage: Swift\\nDescription: Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.\\nAuthor: Steven Van Impe <steven.vanimpe@icloud.com>\\nContributors: Chris Eidhof <chris@eidhof.nl>, Nate Cook <natecook@gmail.com>, Alexander Lichter <manniL@gmx.net>, Richard Gibson <gibson042@github>\\nWebsite: https://swift.org\\nCategory: common, system\\n*/\\n\\n/** @type LanguageFn */\\nfunction swift(hljs) {\\n  const WHITESPACE = {\\n    match: /\\\\s+/,\\n    relevance: 0\\n  };\\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID411\\n  const BLOCK_COMMENT = hljs.COMMENT(\\n    '/\\\\\\\\*',\\n    '\\\\\\\\*/',\\n    {\\n      contains: [ 'self' ]\\n    }\\n  );\\n  const COMMENTS = [\\n    hljs.C_LINE_COMMENT_MODE,\\n    BLOCK_COMMENT\\n  ];\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID413\\n  // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html\\n  const DOT_KEYWORD = {\\n    match: [\\n      /\\\\./,\\n      either(...dotKeywords, ...optionalDotKeywords)\\n    ],\\n    className: {\\n      2: \\\"keyword\\\"\\n    }\\n  };\\n  const KEYWORD_GUARD = {\\n    // Consume .keyword to prevent highlighting properties and methods as keywords.\\n    match: concat(/\\\\./, either(...keywords)),\\n    relevance: 0\\n  };\\n  const PLAIN_KEYWORDS = keywords\\n    .filter(kw => typeof kw === 'string')\\n    .concat([ \\\"_|0\\\" ]); // seems common, so 0 relevance\\n  const REGEX_KEYWORDS = keywords\\n    .filter(kw => typeof kw !== 'string') // find regex\\n    .concat(keywordTypes)\\n    .map(keywordWrapper);\\n  const KEYWORD = {\\n    variants: [\\n      {\\n        className: 'keyword',\\n        match: either(...REGEX_KEYWORDS, ...optionalDotKeywords)\\n      }\\n    ]\\n  };\\n  // find all the regular keywords\\n  const KEYWORDS = {\\n    $pattern: either(\\n      /\\\\b\\\\w+/, // regular keywords\\n      /#\\\\w+/ // number keywords\\n    ),\\n    keyword: PLAIN_KEYWORDS\\n      .concat(numberSignKeywords),\\n    literal: literals\\n  };\\n  const KEYWORD_MODES = [\\n    DOT_KEYWORD,\\n    KEYWORD_GUARD,\\n    KEYWORD\\n  ];\\n\\n  // https://github.com/apple/swift/tree/main/stdlib/public/core\\n  const BUILT_IN_GUARD = {\\n    // Consume .built_in to prevent highlighting properties and methods.\\n    match: concat(/\\\\./, either(...builtIns)),\\n    relevance: 0\\n  };\\n  const BUILT_IN = {\\n    className: 'built_in',\\n    match: concat(/\\\\b/, either(...builtIns), /(?=\\\\()/)\\n  };\\n  const BUILT_INS = [\\n    BUILT_IN_GUARD,\\n    BUILT_IN\\n  ];\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID418\\n  const OPERATOR_GUARD = {\\n    // Prevent -> from being highlighting as an operator.\\n    match: /->/,\\n    relevance: 0\\n  };\\n  const OPERATOR = {\\n    className: 'operator',\\n    relevance: 0,\\n    variants: [\\n      {\\n        match: operator\\n      },\\n      {\\n        // dot-operator: only operators that start with a dot are allowed to use dots as\\n        // characters (..., ...<, .*, etc). So there rule here is: a dot followed by one or more\\n        // characters that may also include dots.\\n        match: `\\\\\\\\.(\\\\\\\\.|${operatorCharacter})+`\\n      }\\n    ]\\n  };\\n  const OPERATORS = [\\n    OPERATOR_GUARD,\\n    OPERATOR\\n  ];\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_numeric-literal\\n  // TODO: Update for leading `-` after lookbehind is supported everywhere\\n  const decimalDigits = '([0-9]_*)+';\\n  const hexDigits = '([0-9a-fA-F]_*)+';\\n  const NUMBER = {\\n    className: 'number',\\n    relevance: 0,\\n    variants: [\\n      // decimal floating-point-literal (subsumes decimal-literal)\\n      {\\n        match: `\\\\\\\\b(${decimalDigits})(\\\\\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\\\\\b`\\n      },\\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\\n      {\\n        match: `\\\\\\\\b0x(${hexDigits})(\\\\\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\\\\\b`\\n      },\\n      // octal-literal\\n      {\\n        match: /\\\\b0o([0-7]_*)+\\\\b/\\n      },\\n      // binary-literal\\n      {\\n        match: /\\\\b0b([01]_*)+\\\\b/\\n      }\\n    ]\\n  };\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#grammar_string-literal\\n  const ESCAPED_CHARACTER = (rawDelimiter = \\\"\\\") => ({\\n    className: 'subst',\\n    variants: [\\n      {\\n        match: concat(/\\\\\\\\/, rawDelimiter, /[0\\\\\\\\tnr\\\"']/)\\n      },\\n      {\\n        match: concat(/\\\\\\\\/, rawDelimiter, /u\\\\{[0-9a-fA-F]{1,8}\\\\}/)\\n      }\\n    ]\\n  });\\n  const ESCAPED_NEWLINE = (rawDelimiter = \\\"\\\") => ({\\n    className: 'subst',\\n    match: concat(/\\\\\\\\/, rawDelimiter, /[\\\\t ]*(?:[\\\\r\\\\n]|\\\\r\\\\n)/)\\n  });\\n  const INTERPOLATION = (rawDelimiter = \\\"\\\") => ({\\n    className: 'subst',\\n    label: \\\"interpol\\\",\\n    begin: concat(/\\\\\\\\/, rawDelimiter, /\\\\(/),\\n    end: /\\\\)/\\n  });\\n  const MULTILINE_STRING = (rawDelimiter = \\\"\\\") => ({\\n    begin: concat(rawDelimiter, /\\\"\\\"\\\"/),\\n    end: concat(/\\\"\\\"\\\"/, rawDelimiter),\\n    contains: [\\n      ESCAPED_CHARACTER(rawDelimiter),\\n      ESCAPED_NEWLINE(rawDelimiter),\\n      INTERPOLATION(rawDelimiter)\\n    ]\\n  });\\n  const SINGLE_LINE_STRING = (rawDelimiter = \\\"\\\") => ({\\n    begin: concat(rawDelimiter, /\\\"/),\\n    end: concat(/\\\"/, rawDelimiter),\\n    contains: [\\n      ESCAPED_CHARACTER(rawDelimiter),\\n      INTERPOLATION(rawDelimiter)\\n    ]\\n  });\\n  const STRING = {\\n    className: 'string',\\n    variants: [\\n      MULTILINE_STRING(),\\n      MULTILINE_STRING(\\\"#\\\"),\\n      MULTILINE_STRING(\\\"##\\\"),\\n      MULTILINE_STRING(\\\"###\\\"),\\n      SINGLE_LINE_STRING(),\\n      SINGLE_LINE_STRING(\\\"#\\\"),\\n      SINGLE_LINE_STRING(\\\"##\\\"),\\n      SINGLE_LINE_STRING(\\\"###\\\")\\n    ]\\n  };\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/LexicalStructure.html#ID412\\n  const QUOTED_IDENTIFIER = {\\n    match: concat(/`/, identifier, /`/)\\n  };\\n  const IMPLICIT_PARAMETER = {\\n    className: 'variable',\\n    match: /\\\\$\\\\d+/\\n  };\\n  const PROPERTY_WRAPPER_PROJECTION = {\\n    className: 'variable',\\n    match: `\\\\\\\\$${identifierCharacter}+`\\n  };\\n  const IDENTIFIERS = [\\n    QUOTED_IDENTIFIER,\\n    IMPLICIT_PARAMETER,\\n    PROPERTY_WRAPPER_PROJECTION\\n  ];\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/Attributes.html\\n  const AVAILABLE_ATTRIBUTE = {\\n    match: /(@|#)available/,\\n    className: \\\"keyword\\\",\\n    starts: {\\n      contains: [\\n        {\\n          begin: /\\\\(/,\\n          end: /\\\\)/,\\n          keywords: availabilityKeywords,\\n          contains: [\\n            ...OPERATORS,\\n            NUMBER,\\n            STRING\\n          ]\\n        }\\n      ]\\n    }\\n  };\\n  const KEYWORD_ATTRIBUTE = {\\n    className: 'keyword',\\n    match: concat(/@/, either(...keywordAttributes))\\n  };\\n  const USER_DEFINED_ATTRIBUTE = {\\n    className: 'meta',\\n    match: concat(/@/, identifier)\\n  };\\n  const ATTRIBUTES = [\\n    AVAILABLE_ATTRIBUTE,\\n    KEYWORD_ATTRIBUTE,\\n    USER_DEFINED_ATTRIBUTE\\n  ];\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/Types.html\\n  const TYPE = {\\n    match: lookahead(/\\\\b[A-Z]/),\\n    relevance: 0,\\n    contains: [\\n      { // Common Apple frameworks, for relevance boost\\n        className: 'type',\\n        match: concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, identifierCharacter, '+')\\n      },\\n      { // Type identifier\\n        className: 'type',\\n        match: typeIdentifier,\\n        relevance: 0\\n      },\\n      { // Optional type\\n        match: /[?!]+/,\\n        relevance: 0\\n      },\\n      { // Variadic parameter\\n        match: /\\\\.\\\\.\\\\./,\\n        relevance: 0\\n      },\\n      { // Protocol composition\\n        match: concat(/\\\\s+&\\\\s+/, lookahead(typeIdentifier)),\\n        relevance: 0\\n      }\\n    ]\\n  };\\n  const GENERIC_ARGUMENTS = {\\n    begin: /</,\\n    end: />/,\\n    keywords: KEYWORDS,\\n    contains: [\\n      ...COMMENTS,\\n      ...KEYWORD_MODES,\\n      ...ATTRIBUTES,\\n      OPERATOR_GUARD,\\n      TYPE\\n    ]\\n  };\\n  TYPE.contains.push(GENERIC_ARGUMENTS);\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/Expressions.html#ID552\\n  // Prevents element names from being highlighted as keywords.\\n  const TUPLE_ELEMENT_NAME = {\\n    match: concat(identifier, /\\\\s*:/),\\n    keywords: \\\"_|0\\\",\\n    relevance: 0\\n  };\\n  // Matches tuples as well as the parameter list of a function type.\\n  const TUPLE = {\\n    begin: /\\\\(/,\\n    end: /\\\\)/,\\n    relevance: 0,\\n    keywords: KEYWORDS,\\n    contains: [\\n      'self',\\n      TUPLE_ELEMENT_NAME,\\n      ...COMMENTS,\\n      ...KEYWORD_MODES,\\n      ...BUILT_INS,\\n      ...OPERATORS,\\n      NUMBER,\\n      STRING,\\n      ...IDENTIFIERS,\\n      ...ATTRIBUTES,\\n      TYPE\\n    ]\\n  };\\n\\n  const GENERIC_PARAMETERS = {\\n    begin: /</,\\n    end: />/,\\n    contains: [\\n      ...COMMENTS,\\n      TYPE\\n    ]\\n  };\\n  const FUNCTION_PARAMETER_NAME = {\\n    begin: either(\\n      lookahead(concat(identifier, /\\\\s*:/)),\\n      lookahead(concat(identifier, /\\\\s+/, identifier, /\\\\s*:/))\\n    ),\\n    end: /:/,\\n    relevance: 0,\\n    contains: [\\n      {\\n        className: 'keyword',\\n        match: /\\\\b_\\\\b/\\n      },\\n      {\\n        className: 'params',\\n        match: identifier\\n      }\\n    ]\\n  };\\n  const FUNCTION_PARAMETERS = {\\n    begin: /\\\\(/,\\n    end: /\\\\)/,\\n    keywords: KEYWORDS,\\n    contains: [\\n      FUNCTION_PARAMETER_NAME,\\n      ...COMMENTS,\\n      ...KEYWORD_MODES,\\n      ...OPERATORS,\\n      NUMBER,\\n      STRING,\\n      ...ATTRIBUTES,\\n      TYPE,\\n      TUPLE\\n    ],\\n    endsParent: true,\\n    illegal: /[\\\"']/\\n  };\\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID362\\n  const FUNCTION = {\\n    match: [\\n      /func/,\\n      /\\\\s+/,\\n      either(QUOTED_IDENTIFIER.match, identifier, operator)\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    contains: [\\n      GENERIC_PARAMETERS,\\n      FUNCTION_PARAMETERS,\\n      WHITESPACE\\n    ],\\n    illegal: [\\n      /\\\\[/,\\n      /%/\\n    ]\\n  };\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID375\\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID379\\n  const INIT_SUBSCRIPT = {\\n    match: [\\n      /\\\\b(?:subscript|init[?!]?)/,\\n      /\\\\s*(?=[<(])/,\\n    ],\\n    className: {\\n      1: \\\"keyword\\\"\\n    },\\n    contains: [\\n      GENERIC_PARAMETERS,\\n      FUNCTION_PARAMETERS,\\n      WHITESPACE\\n    ],\\n    illegal: /\\\\[|%/\\n  };\\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID380\\n  const OPERATOR_DECLARATION = {\\n    match: [\\n      /operator/,\\n      /\\\\s+/,\\n      operator\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title\\\"\\n    }\\n  };\\n\\n  // https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID550\\n  const PRECEDENCEGROUP = {\\n    begin: [\\n      /precedencegroup/,\\n      /\\\\s+/,\\n      typeIdentifier\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title\\\"\\n    },\\n    contains: [ TYPE ],\\n    keywords: [\\n      ...precedencegroupKeywords,\\n      ...literals\\n    ],\\n    end: /}/\\n  };\\n\\n  // Add supported submodes to string interpolation.\\n  for (const variant of STRING.variants) {\\n    const interpolation = variant.contains.find(mode => mode.label === \\\"interpol\\\");\\n    // TODO: Interpolation can contain any expression, so there's room for improvement here.\\n    interpolation.keywords = KEYWORDS;\\n    const submodes = [\\n      ...KEYWORD_MODES,\\n      ...BUILT_INS,\\n      ...OPERATORS,\\n      NUMBER,\\n      STRING,\\n      ...IDENTIFIERS\\n    ];\\n    interpolation.contains = [\\n      ...submodes,\\n      {\\n        begin: /\\\\(/,\\n        end: /\\\\)/,\\n        contains: [\\n          'self',\\n          ...submodes\\n        ]\\n      }\\n    ];\\n  }\\n\\n  return {\\n    name: 'Swift',\\n    keywords: KEYWORDS,\\n    contains: [\\n      ...COMMENTS,\\n      FUNCTION,\\n      INIT_SUBSCRIPT,\\n      {\\n        beginKeywords: 'struct protocol class extension enum actor',\\n        end: '\\\\\\\\{',\\n        excludeEnd: true,\\n        keywords: KEYWORDS,\\n        contains: [\\n          hljs.inherit(hljs.TITLE_MODE, {\\n            className: \\\"title.class\\\",\\n            begin: /[A-Za-z$_][\\\\u00C0-\\\\u02B80-9A-Za-z$_]*/\\n          }),\\n          ...KEYWORD_MODES\\n        ]\\n      },\\n      OPERATOR_DECLARATION,\\n      PRECEDENCEGROUP,\\n      {\\n        beginKeywords: 'import',\\n        end: /$/,\\n        contains: [ ...COMMENTS ],\\n        relevance: 0\\n      },\\n      ...KEYWORD_MODES,\\n      ...BUILT_INS,\\n      ...OPERATORS,\\n      NUMBER,\\n      STRING,\\n      ...IDENTIFIERS,\\n      ...ATTRIBUTES,\\n      TYPE,\\n      TUPLE\\n    ]\\n  };\\n}\\n\\nmodule.exports = swift;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/swift.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/taggerscript.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/taggerscript.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Tagger Script\\nAuthor: Philipp Wolfer <ph.wolfer@gmail.com>\\nDescription: Syntax Highlighting for the Tagger Script as used by MusicBrainz Picard.\\nWebsite: https://picard.musicbrainz.org\\n */\\nfunction taggerscript(hljs) {\\n  const NOOP = {\\n    className: 'comment',\\n    begin: /\\\\$noop\\\\(/,\\n    end: /\\\\)/,\\n    contains: [{\\n      begin: /\\\\\\\\[()]/\\n    }, {\\n      begin: /\\\\(/,\\n      end: /\\\\)/,\\n      contains: [{\\n        begin: /\\\\\\\\[()]/\\n      }, 'self']\\n    } ],\\n    relevance: 10\\n  };\\n\\n  const FUNCTION = {\\n    className: 'keyword',\\n    begin: /\\\\$[_a-zA-Z0-9]+(?=\\\\()/\\n  };\\n\\n  const VARIABLE = {\\n    className: 'variable',\\n    begin: /%[_a-zA-Z0-9:]+%/\\n  };\\n\\n  const ESCAPE_SEQUENCE_UNICODE = {\\n    className: 'symbol',\\n    begin: /\\\\\\\\u[a-fA-F0-9]{4}/\\n  };\\n\\n  const ESCAPE_SEQUENCE = {\\n    className: 'symbol',\\n    begin: /\\\\\\\\[\\\\\\\\nt$%,()]/\\n  };\\n\\n  return {\\n    name: 'Tagger Script',\\n    contains: [\\n      NOOP,\\n      FUNCTION,\\n      VARIABLE,\\n      ESCAPE_SEQUENCE,\\n      ESCAPE_SEQUENCE_UNICODE\\n    ]\\n  };\\n}\\n\\nmodule.exports = taggerscript;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdGFnZ2Vyc2NyaXB0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpZ2hsaWdodC5qcy9saWIvbGFuZ3VhZ2VzL3RhZ2dlcnNjcmlwdC5qcz8yNDY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5MYW5ndWFnZTogVGFnZ2VyIFNjcmlwdFxuQXV0aG9yOiBQaGlsaXBwIFdvbGZlciA8cGgud29sZmVyQGdtYWlsLmNvbT5cbkRlc2NyaXB0aW9uOiBTeW50YXggSGlnaGxpZ2h0aW5nIGZvciB0aGUgVGFnZ2VyIFNjcmlwdCBhcyB1c2VkIGJ5IE11c2ljQnJhaW56IFBpY2FyZC5cbldlYnNpdGU6IGh0dHBzOi8vcGljYXJkLm11c2ljYnJhaW56Lm9yZ1xuICovXG5mdW5jdGlvbiB0YWdnZXJzY3JpcHQoaGxqcykge1xuICBjb25zdCBOT09QID0ge1xuICAgIGNsYXNzTmFtZTogJ2NvbW1lbnQnLFxuICAgIGJlZ2luOiAvXFwkbm9vcFxcKC8sXG4gICAgZW5kOiAvXFwpLyxcbiAgICBjb250YWluczogW3tcbiAgICAgIGJlZ2luOiAvXFxcXFsoKV0vXG4gICAgfSwge1xuICAgICAgYmVnaW46IC9cXCgvLFxuICAgICAgZW5kOiAvXFwpLyxcbiAgICAgIGNvbnRhaW5zOiBbe1xuICAgICAgICBiZWdpbjogL1xcXFxbKCldL1xuICAgICAgfSwgJ3NlbGYnXVxuICAgIH0gXSxcbiAgICByZWxldmFuY2U6IDEwXG4gIH07XG5cbiAgY29uc3QgRlVOQ1RJT04gPSB7XG4gICAgY2xhc3NOYW1lOiAna2V5d29yZCcsXG4gICAgYmVnaW46IC9cXCRbX2EtekEtWjAtOV0rKD89XFwoKS9cbiAgfTtcblxuICBjb25zdCBWQVJJQUJMRSA9IHtcbiAgICBjbGFzc05hbWU6ICd2YXJpYWJsZScsXG4gICAgYmVnaW46IC8lW19hLXpBLVowLTk6XSslL1xuICB9O1xuXG4gIGNvbnN0IEVTQ0FQRV9TRVFVRU5DRV9VTklDT0RFID0ge1xuICAgIGNsYXNzTmFtZTogJ3N5bWJvbCcsXG4gICAgYmVnaW46IC9cXFxcdVthLWZBLUYwLTldezR9L1xuICB9O1xuXG4gIGNvbnN0IEVTQ0FQRV9TRVFVRU5DRSA9IHtcbiAgICBjbGFzc05hbWU6ICdzeW1ib2wnLFxuICAgIGJlZ2luOiAvXFxcXFtcXFxcbnQkJSwoKV0vXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnVGFnZ2VyIFNjcmlwdCcsXG4gICAgY29udGFpbnM6IFtcbiAgICAgIE5PT1AsXG4gICAgICBGVU5DVElPTixcbiAgICAgIFZBUklBQkxFLFxuICAgICAgRVNDQVBFX1NFUVVFTkNFLFxuICAgICAgRVNDQVBFX1NFUVVFTkNFX1VOSUNPREVcbiAgICBdXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdGFnZ2Vyc2NyaXB0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/taggerscript.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/tap.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/tap.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Test Anything Protocol\\nDescription: TAP, the Test Anything Protocol, is a simple text-based interface between testing modules in a test harness.\\nRequires: yaml.js\\nAuthor: Sergey Bronnikov <sergeyb@bronevichok.ru>\\nWebsite: https://testanything.org\\n*/\\n\\nfunction tap(hljs) {\\n  return {\\n    name: 'Test Anything Protocol',\\n    case_insensitive: true,\\n    contains: [\\n      hljs.HASH_COMMENT_MODE,\\n      // version of format and total amount of testcases\\n      {\\n        className: 'meta',\\n        variants: [\\n          {\\n            begin: '^TAP version (\\\\\\\\d+)$'\\n          },\\n          {\\n            begin: '^1\\\\\\\\.\\\\\\\\.(\\\\\\\\d+)$'\\n          }\\n        ]\\n      },\\n      // YAML block\\n      {\\n        begin: /---$/,\\n        end: '\\\\\\\\.\\\\\\\\.\\\\\\\\.$',\\n        subLanguage: 'yaml',\\n        relevance: 0\\n      },\\n      // testcase number\\n      {\\n        className: 'number',\\n        begin: ' (\\\\\\\\d+) '\\n      },\\n      // testcase status and description\\n      {\\n        className: 'symbol',\\n        variants: [\\n          {\\n            begin: '^ok'\\n          },\\n          {\\n            begin: '^not ok'\\n          }\\n        ]\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = tap;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdGFwLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpZ2hsaWdodC5qcy9saWIvbGFuZ3VhZ2VzL3RhcC5qcz8wNmI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5MYW5ndWFnZTogVGVzdCBBbnl0aGluZyBQcm90b2NvbFxuRGVzY3JpcHRpb246IFRBUCwgdGhlIFRlc3QgQW55dGhpbmcgUHJvdG9jb2wsIGlzIGEgc2ltcGxlIHRleHQtYmFzZWQgaW50ZXJmYWNlIGJldHdlZW4gdGVzdGluZyBtb2R1bGVzIGluIGEgdGVzdCBoYXJuZXNzLlxuUmVxdWlyZXM6IHlhbWwuanNcbkF1dGhvcjogU2VyZ2V5IEJyb25uaWtvdiA8c2VyZ2V5YkBicm9uZXZpY2hvay5ydT5cbldlYnNpdGU6IGh0dHBzOi8vdGVzdGFueXRoaW5nLm9yZ1xuKi9cblxuZnVuY3Rpb24gdGFwKGhsanMpIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnVGVzdCBBbnl0aGluZyBQcm90b2NvbCcsXG4gICAgY2FzZV9pbnNlbnNpdGl2ZTogdHJ1ZSxcbiAgICBjb250YWluczogW1xuICAgICAgaGxqcy5IQVNIX0NPTU1FTlRfTU9ERSxcbiAgICAgIC8vIHZlcnNpb24gb2YgZm9ybWF0IGFuZCB0b3RhbCBhbW91bnQgb2YgdGVzdGNhc2VzXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ21ldGEnLFxuICAgICAgICB2YXJpYW50czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGJlZ2luOiAnXlRBUCB2ZXJzaW9uIChcXFxcZCspJCdcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGJlZ2luOiAnXjFcXFxcLlxcXFwuKFxcXFxkKykkJ1xuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIC8vIFlBTUwgYmxvY2tcbiAgICAgIHtcbiAgICAgICAgYmVnaW46IC8tLS0kLyxcbiAgICAgICAgZW5kOiAnXFxcXC5cXFxcLlxcXFwuJCcsXG4gICAgICAgIHN1Ykxhbmd1YWdlOiAneWFtbCcsXG4gICAgICAgIHJlbGV2YW5jZTogMFxuICAgICAgfSxcbiAgICAgIC8vIHRlc3RjYXNlIG51bWJlclxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICdudW1iZXInLFxuICAgICAgICBiZWdpbjogJyAoXFxcXGQrKSAnXG4gICAgICB9LFxuICAgICAgLy8gdGVzdGNhc2Ugc3RhdHVzIGFuZCBkZXNjcmlwdGlvblxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICdzeW1ib2wnLFxuICAgICAgICB2YXJpYW50czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGJlZ2luOiAnXm9rJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYmVnaW46ICdebm90IG9rJ1xuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIF1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0YXA7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/tap.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/tcl.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/tcl.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Tcl\\nDescription: Tcl is a very simple programming language.\\nAuthor: Radek Liska <radekliska@gmail.com>\\nWebsite: https://www.tcl.tk/about/language.html\\n*/\\n\\nfunction tcl(hljs) {\\n  const regex = hljs.regex;\\n  const TCL_IDENT = /[a-zA-Z_][a-zA-Z0-9_]*/;\\n\\n  const NUMBER = {\\n    className: 'number',\\n    variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\\n  };\\n\\n  const KEYWORDS = [\\n    \\\"after\\\",\\n    \\\"append\\\",\\n    \\\"apply\\\",\\n    \\\"array\\\",\\n    \\\"auto_execok\\\",\\n    \\\"auto_import\\\",\\n    \\\"auto_load\\\",\\n    \\\"auto_mkindex\\\",\\n    \\\"auto_mkindex_old\\\",\\n    \\\"auto_qualify\\\",\\n    \\\"auto_reset\\\",\\n    \\\"bgerror\\\",\\n    \\\"binary\\\",\\n    \\\"break\\\",\\n    \\\"catch\\\",\\n    \\\"cd\\\",\\n    \\\"chan\\\",\\n    \\\"clock\\\",\\n    \\\"close\\\",\\n    \\\"concat\\\",\\n    \\\"continue\\\",\\n    \\\"dde\\\",\\n    \\\"dict\\\",\\n    \\\"encoding\\\",\\n    \\\"eof\\\",\\n    \\\"error\\\",\\n    \\\"eval\\\",\\n    \\\"exec\\\",\\n    \\\"exit\\\",\\n    \\\"expr\\\",\\n    \\\"fblocked\\\",\\n    \\\"fconfigure\\\",\\n    \\\"fcopy\\\",\\n    \\\"file\\\",\\n    \\\"fileevent\\\",\\n    \\\"filename\\\",\\n    \\\"flush\\\",\\n    \\\"for\\\",\\n    \\\"foreach\\\",\\n    \\\"format\\\",\\n    \\\"gets\\\",\\n    \\\"glob\\\",\\n    \\\"global\\\",\\n    \\\"history\\\",\\n    \\\"http\\\",\\n    \\\"if\\\",\\n    \\\"incr\\\",\\n    \\\"info\\\",\\n    \\\"interp\\\",\\n    \\\"join\\\",\\n    \\\"lappend|10\\\",\\n    \\\"lassign|10\\\",\\n    \\\"lindex|10\\\",\\n    \\\"linsert|10\\\",\\n    \\\"list\\\",\\n    \\\"llength|10\\\",\\n    \\\"load\\\",\\n    \\\"lrange|10\\\",\\n    \\\"lrepeat|10\\\",\\n    \\\"lreplace|10\\\",\\n    \\\"lreverse|10\\\",\\n    \\\"lsearch|10\\\",\\n    \\\"lset|10\\\",\\n    \\\"lsort|10\\\",\\n    \\\"mathfunc\\\",\\n    \\\"mathop\\\",\\n    \\\"memory\\\",\\n    \\\"msgcat\\\",\\n    \\\"namespace\\\",\\n    \\\"open\\\",\\n    \\\"package\\\",\\n    \\\"parray\\\",\\n    \\\"pid\\\",\\n    \\\"pkg::create\\\",\\n    \\\"pkg_mkIndex\\\",\\n    \\\"platform\\\",\\n    \\\"platform::shell\\\",\\n    \\\"proc\\\",\\n    \\\"puts\\\",\\n    \\\"pwd\\\",\\n    \\\"read\\\",\\n    \\\"refchan\\\",\\n    \\\"regexp\\\",\\n    \\\"registry\\\",\\n    \\\"regsub|10\\\",\\n    \\\"rename\\\",\\n    \\\"return\\\",\\n    \\\"safe\\\",\\n    \\\"scan\\\",\\n    \\\"seek\\\",\\n    \\\"set\\\",\\n    \\\"socket\\\",\\n    \\\"source\\\",\\n    \\\"split\\\",\\n    \\\"string\\\",\\n    \\\"subst\\\",\\n    \\\"switch\\\",\\n    \\\"tcl_endOfWord\\\",\\n    \\\"tcl_findLibrary\\\",\\n    \\\"tcl_startOfNextWord\\\",\\n    \\\"tcl_startOfPreviousWord\\\",\\n    \\\"tcl_wordBreakAfter\\\",\\n    \\\"tcl_wordBreakBefore\\\",\\n    \\\"tcltest\\\",\\n    \\\"tclvars\\\",\\n    \\\"tell\\\",\\n    \\\"time\\\",\\n    \\\"tm\\\",\\n    \\\"trace\\\",\\n    \\\"unknown\\\",\\n    \\\"unload\\\",\\n    \\\"unset\\\",\\n    \\\"update\\\",\\n    \\\"uplevel\\\",\\n    \\\"upvar\\\",\\n    \\\"variable\\\",\\n    \\\"vwait\\\",\\n    \\\"while\\\"\\n  ];\\n\\n  return {\\n    name: 'Tcl',\\n    aliases: ['tk'],\\n    keywords: KEYWORDS,\\n    contains: [\\n      hljs.COMMENT(';[ \\\\\\\\t]*#', '$'),\\n      hljs.COMMENT('^[ \\\\\\\\t]*#', '$'),\\n      {\\n        beginKeywords: 'proc',\\n        end: '[\\\\\\\\{]',\\n        excludeEnd: true,\\n        contains: [\\n          {\\n            className: 'title',\\n            begin: '[ \\\\\\\\t\\\\\\\\n\\\\\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\\n            end: '[ \\\\\\\\t\\\\\\\\n\\\\\\\\r]',\\n            endsWithParent: true,\\n            excludeEnd: true\\n          }\\n        ]\\n      },\\n      {\\n        className: \\\"variable\\\",\\n        variants: [\\n          {\\n            begin: regex.concat(\\n              /\\\\$/,\\n              regex.optional(/::/),\\n              TCL_IDENT,\\n              '(::',\\n              TCL_IDENT,\\n              ')*'\\n            )\\n          },\\n          {\\n            begin: '\\\\\\\\$\\\\\\\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\\n            end: '\\\\\\\\}',\\n            contains: [\\n              NUMBER\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        className: 'string',\\n        contains: [hljs.BACKSLASH_ESCAPE],\\n        variants: [\\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\\n        ]\\n      },\\n      NUMBER\\n    ]\\n  }\\n}\\n\\nmodule.exports = tcl;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdGNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpZ2hsaWdodC5qcy9saWIvbGFuZ3VhZ2VzL3RjbC5qcz9hMjdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5MYW5ndWFnZTogVGNsXG5EZXNjcmlwdGlvbjogVGNsIGlzIGEgdmVyeSBzaW1wbGUgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UuXG5BdXRob3I6IFJhZGVrIExpc2thIDxyYWRla2xpc2thQGdtYWlsLmNvbT5cbldlYnNpdGU6IGh0dHBzOi8vd3d3LnRjbC50ay9hYm91dC9sYW5ndWFnZS5odG1sXG4qL1xuXG5mdW5jdGlvbiB0Y2woaGxqcykge1xuICBjb25zdCByZWdleCA9IGhsanMucmVnZXg7XG4gIGNvbnN0IFRDTF9JREVOVCA9IC9bYS16QS1aX11bYS16QS1aMC05X10qLztcblxuICBjb25zdCBOVU1CRVIgPSB7XG4gICAgY2xhc3NOYW1lOiAnbnVtYmVyJyxcbiAgICB2YXJpYW50czogW2hsanMuQklOQVJZX05VTUJFUl9NT0RFLCBobGpzLkNfTlVNQkVSX01PREVdXG4gIH07XG5cbiAgY29uc3QgS0VZV09SRFMgPSBbXG4gICAgXCJhZnRlclwiLFxuICAgIFwiYXBwZW5kXCIsXG4gICAgXCJhcHBseVwiLFxuICAgIFwiYXJyYXlcIixcbiAgICBcImF1dG9fZXhlY29rXCIsXG4gICAgXCJhdXRvX2ltcG9ydFwiLFxuICAgIFwiYXV0b19sb2FkXCIsXG4gICAgXCJhdXRvX21raW5kZXhcIixcbiAgICBcImF1dG9fbWtpbmRleF9vbGRcIixcbiAgICBcImF1dG9fcXVhbGlmeVwiLFxuICAgIFwiYXV0b19yZXNldFwiLFxuICAgIFwiYmdlcnJvclwiLFxuICAgIFwiYmluYXJ5XCIsXG4gICAgXCJicmVha1wiLFxuICAgIFwiY2F0Y2hcIixcbiAgICBcImNkXCIsXG4gICAgXCJjaGFuXCIsXG4gICAgXCJjbG9ja1wiLFxuICAgIFwiY2xvc2VcIixcbiAgICBcImNvbmNhdFwiLFxuICAgIFwiY29udGludWVcIixcbiAgICBcImRkZVwiLFxuICAgIFwiZGljdFwiLFxuICAgIFwiZW5jb2RpbmdcIixcbiAgICBcImVvZlwiLFxuICAgIFwiZXJyb3JcIixcbiAgICBcImV2YWxcIixcbiAgICBcImV4ZWNcIixcbiAgICBcImV4aXRcIixcbiAgICBcImV4cHJcIixcbiAgICBcImZibG9ja2VkXCIsXG4gICAgXCJmY29uZmlndXJlXCIsXG4gICAgXCJmY29weVwiLFxuICAgIFwiZmlsZVwiLFxuICAgIFwiZmlsZWV2ZW50XCIsXG4gICAgXCJmaWxlbmFtZVwiLFxuICAgIFwiZmx1c2hcIixcbiAgICBcImZvclwiLFxuICAgIFwiZm9yZWFjaFwiLFxuICAgIFwiZm9ybWF0XCIsXG4gICAgXCJnZXRzXCIsXG4gICAgXCJnbG9iXCIsXG4gICAgXCJnbG9iYWxcIixcbiAgICBcImhpc3RvcnlcIixcbiAgICBcImh0dHBcIixcbiAgICBcImlmXCIsXG4gICAgXCJpbmNyXCIsXG4gICAgXCJpbmZvXCIsXG4gICAgXCJpbnRlcnBcIixcbiAgICBcImpvaW5cIixcbiAgICBcImxhcHBlbmR8MTBcIixcbiAgICBcImxhc3NpZ258MTBcIixcbiAgICBcImxpbmRleHwxMFwiLFxuICAgIFwibGluc2VydHwxMFwiLFxuICAgIFwibGlzdFwiLFxuICAgIFwibGxlbmd0aHwxMFwiLFxuICAgIFwibG9hZFwiLFxuICAgIFwibHJhbmdlfDEwXCIsXG4gICAgXCJscmVwZWF0fDEwXCIsXG4gICAgXCJscmVwbGFjZXwxMFwiLFxuICAgIFwibHJldmVyc2V8MTBcIixcbiAgICBcImxzZWFyY2h8MTBcIixcbiAgICBcImxzZXR8MTBcIixcbiAgICBcImxzb3J0fDEwXCIsXG4gICAgXCJtYXRoZnVuY1wiLFxuICAgIFwibWF0aG9wXCIsXG4gICAgXCJtZW1vcnlcIixcbiAgICBcIm1zZ2NhdFwiLFxuICAgIFwibmFtZXNwYWNlXCIsXG4gICAgXCJvcGVuXCIsXG4gICAgXCJwYWNrYWdlXCIsXG4gICAgXCJwYXJyYXlcIixcbiAgICBcInBpZFwiLFxuICAgIFwicGtnOjpjcmVhdGVcIixcbiAgICBcInBrZ19ta0luZGV4XCIsXG4gICAgXCJwbGF0Zm9ybVwiLFxuICAgIFwicGxhdGZvcm06OnNoZWxsXCIsXG4gICAgXCJwcm9jXCIsXG4gICAgXCJwdXRzXCIsXG4gICAgXCJwd2RcIixcbiAgICBcInJlYWRcIixcbiAgICBcInJlZmNoYW5cIixcbiAgICBcInJlZ2V4cFwiLFxuICAgIFwicmVnaXN0cnlcIixcbiAgICBcInJlZ3N1YnwxMFwiLFxuICAgIFwicmVuYW1lXCIsXG4gICAgXCJyZXR1cm5cIixcbiAgICBcInNhZmVcIixcbiAgICBcInNjYW5cIixcbiAgICBcInNlZWtcIixcbiAgICBcInNldFwiLFxuICAgIFwic29ja2V0XCIsXG4gICAgXCJzb3VyY2VcIixcbiAgICBcInNwbGl0XCIsXG4gICAgXCJzdHJpbmdcIixcbiAgICBcInN1YnN0XCIsXG4gICAgXCJzd2l0Y2hcIixcbiAgICBcInRjbF9lbmRPZldvcmRcIixcbiAgICBcInRjbF9maW5kTGlicmFyeVwiLFxuICAgIFwidGNsX3N0YXJ0T2ZOZXh0V29yZFwiLFxuICAgIFwidGNsX3N0YXJ0T2ZQcmV2aW91c1dvcmRcIixcbiAgICBcInRjbF93b3JkQnJlYWtBZnRlclwiLFxuICAgIFwidGNsX3dvcmRCcmVha0JlZm9yZVwiLFxuICAgIFwidGNsdGVzdFwiLFxuICAgIFwidGNsdmFyc1wiLFxuICAgIFwidGVsbFwiLFxuICAgIFwidGltZVwiLFxuICAgIFwidG1cIixcbiAgICBcInRyYWNlXCIsXG4gICAgXCJ1bmtub3duXCIsXG4gICAgXCJ1bmxvYWRcIixcbiAgICBcInVuc2V0XCIsXG4gICAgXCJ1cGRhdGVcIixcbiAgICBcInVwbGV2ZWxcIixcbiAgICBcInVwdmFyXCIsXG4gICAgXCJ2YXJpYWJsZVwiLFxuICAgIFwidndhaXRcIixcbiAgICBcIndoaWxlXCJcbiAgXTtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6ICdUY2wnLFxuICAgIGFsaWFzZXM6IFsndGsnXSxcbiAgICBrZXl3b3JkczogS0VZV09SRFMsXG4gICAgY29udGFpbnM6IFtcbiAgICAgIGhsanMuQ09NTUVOVCgnO1sgXFxcXHRdKiMnLCAnJCcpLFxuICAgICAgaGxqcy5DT01NRU5UKCdeWyBcXFxcdF0qIycsICckJyksXG4gICAgICB7XG4gICAgICAgIGJlZ2luS2V5d29yZHM6ICdwcm9jJyxcbiAgICAgICAgZW5kOiAnW1xcXFx7XScsXG4gICAgICAgIGV4Y2x1ZGVFbmQ6IHRydWUsXG4gICAgICAgIGNvbnRhaW5zOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiAndGl0bGUnLFxuICAgICAgICAgICAgYmVnaW46ICdbIFxcXFx0XFxcXG5cXFxccl0rKDo6KT9bYS16QS1aX10oKDo6KT9bYS16QS1aMC05X10pKicsXG4gICAgICAgICAgICBlbmQ6ICdbIFxcXFx0XFxcXG5cXFxccl0nLFxuICAgICAgICAgICAgZW5kc1dpdGhQYXJlbnQ6IHRydWUsXG4gICAgICAgICAgICBleGNsdWRlRW5kOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6IFwidmFyaWFibGVcIixcbiAgICAgICAgdmFyaWFudHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBiZWdpbjogcmVnZXguY29uY2F0KFxuICAgICAgICAgICAgICAvXFwkLyxcbiAgICAgICAgICAgICAgcmVnZXgub3B0aW9uYWwoLzo6LyksXG4gICAgICAgICAgICAgIFRDTF9JREVOVCxcbiAgICAgICAgICAgICAgJyg6OicsXG4gICAgICAgICAgICAgIFRDTF9JREVOVCxcbiAgICAgICAgICAgICAgJykqJ1xuICAgICAgICAgICAgKVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYmVnaW46ICdcXFxcJFxcXFx7KDo6KT9bYS16QS1aX10oKDo6KT9bYS16QS1aMC05X10pKicsXG4gICAgICAgICAgICBlbmQ6ICdcXFxcfScsXG4gICAgICAgICAgICBjb250YWluczogW1xuICAgICAgICAgICAgICBOVU1CRVJcbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3N0cmluZycsXG4gICAgICAgIGNvbnRhaW5zOiBbaGxqcy5CQUNLU0xBU0hfRVNDQVBFXSxcbiAgICAgICAgdmFyaWFudHM6IFtcbiAgICAgICAgICBobGpzLmluaGVyaXQoaGxqcy5RVU9URV9TVFJJTkdfTU9ERSwge2lsbGVnYWw6IG51bGx9KVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAgTlVNQkVSXG4gICAgXVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdGNsO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/tcl.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/thrift.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/thrift.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Thrift\\nAuthor: Oleg Efimov <efimovov@gmail.com>\\nDescription: Thrift message definition format\\nWebsite: https://thrift.apache.org\\nCategory: protocols\\n*/\\n\\nfunction thrift(hljs) {\\n  const TYPES = [\\n    \\\"bool\\\",\\n    \\\"byte\\\",\\n    \\\"i16\\\",\\n    \\\"i32\\\",\\n    \\\"i64\\\",\\n    \\\"double\\\",\\n    \\\"string\\\",\\n    \\\"binary\\\"\\n  ];\\n  const KEYWORDS = [\\n    \\\"namespace\\\",\\n    \\\"const\\\",\\n    \\\"typedef\\\",\\n    \\\"struct\\\",\\n    \\\"enum\\\",\\n    \\\"service\\\",\\n    \\\"exception\\\",\\n    \\\"void\\\",\\n    \\\"oneway\\\",\\n    \\\"set\\\",\\n    \\\"list\\\",\\n    \\\"map\\\",\\n    \\\"required\\\",\\n    \\\"optional\\\"\\n  ];\\n  return {\\n    name: 'Thrift',\\n    keywords: {\\n      keyword: KEYWORDS,\\n      type: TYPES,\\n      literal: 'true false'\\n    },\\n    contains: [\\n      hljs.QUOTE_STRING_MODE,\\n      hljs.NUMBER_MODE,\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      {\\n        className: 'class',\\n        beginKeywords: 'struct enum service exception',\\n        end: /\\\\{/,\\n        illegal: /\\\\n/,\\n        contains: [\\n          hljs.inherit(hljs.TITLE_MODE, {\\n            // hack: eating everything after the first title\\n            starts: {\\n              endsWithParent: true,\\n              excludeEnd: true\\n            }\\n          })\\n        ]\\n      },\\n      {\\n        begin: '\\\\\\\\b(set|list|map)\\\\\\\\s*<',\\n        keywords: {\\n          type: [...TYPES, \\\"set\\\", \\\"list\\\", \\\"map\\\"]\\n        },\\n        end: '>',\\n        contains: [ 'self' ]\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = thrift;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdGhyaWZ0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpZ2hsaWdodC5qcy9saWIvbGFuZ3VhZ2VzL3RocmlmdC5qcz9hZGY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5MYW5ndWFnZTogVGhyaWZ0XG5BdXRob3I6IE9sZWcgRWZpbW92IDxlZmltb3ZvdkBnbWFpbC5jb20+XG5EZXNjcmlwdGlvbjogVGhyaWZ0IG1lc3NhZ2UgZGVmaW5pdGlvbiBmb3JtYXRcbldlYnNpdGU6IGh0dHBzOi8vdGhyaWZ0LmFwYWNoZS5vcmdcbkNhdGVnb3J5OiBwcm90b2NvbHNcbiovXG5cbmZ1bmN0aW9uIHRocmlmdChobGpzKSB7XG4gIGNvbnN0IFRZUEVTID0gW1xuICAgIFwiYm9vbFwiLFxuICAgIFwiYnl0ZVwiLFxuICAgIFwiaTE2XCIsXG4gICAgXCJpMzJcIixcbiAgICBcImk2NFwiLFxuICAgIFwiZG91YmxlXCIsXG4gICAgXCJzdHJpbmdcIixcbiAgICBcImJpbmFyeVwiXG4gIF07XG4gIGNvbnN0IEtFWVdPUkRTID0gW1xuICAgIFwibmFtZXNwYWNlXCIsXG4gICAgXCJjb25zdFwiLFxuICAgIFwidHlwZWRlZlwiLFxuICAgIFwic3RydWN0XCIsXG4gICAgXCJlbnVtXCIsXG4gICAgXCJzZXJ2aWNlXCIsXG4gICAgXCJleGNlcHRpb25cIixcbiAgICBcInZvaWRcIixcbiAgICBcIm9uZXdheVwiLFxuICAgIFwic2V0XCIsXG4gICAgXCJsaXN0XCIsXG4gICAgXCJtYXBcIixcbiAgICBcInJlcXVpcmVkXCIsXG4gICAgXCJvcHRpb25hbFwiXG4gIF07XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ1RocmlmdCcsXG4gICAga2V5d29yZHM6IHtcbiAgICAgIGtleXdvcmQ6IEtFWVdPUkRTLFxuICAgICAgdHlwZTogVFlQRVMsXG4gICAgICBsaXRlcmFsOiAndHJ1ZSBmYWxzZSdcbiAgICB9LFxuICAgIGNvbnRhaW5zOiBbXG4gICAgICBobGpzLlFVT1RFX1NUUklOR19NT0RFLFxuICAgICAgaGxqcy5OVU1CRVJfTU9ERSxcbiAgICAgIGhsanMuQ19MSU5FX0NPTU1FTlRfTU9ERSxcbiAgICAgIGhsanMuQ19CTE9DS19DT01NRU5UX01PREUsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2NsYXNzJyxcbiAgICAgICAgYmVnaW5LZXl3b3JkczogJ3N0cnVjdCBlbnVtIHNlcnZpY2UgZXhjZXB0aW9uJyxcbiAgICAgICAgZW5kOiAvXFx7LyxcbiAgICAgICAgaWxsZWdhbDogL1xcbi8sXG4gICAgICAgIGNvbnRhaW5zOiBbXG4gICAgICAgICAgaGxqcy5pbmhlcml0KGhsanMuVElUTEVfTU9ERSwge1xuICAgICAgICAgICAgLy8gaGFjazogZWF0aW5nIGV2ZXJ5dGhpbmcgYWZ0ZXIgdGhlIGZpcnN0IHRpdGxlXG4gICAgICAgICAgICBzdGFydHM6IHtcbiAgICAgICAgICAgICAgZW5kc1dpdGhQYXJlbnQ6IHRydWUsXG4gICAgICAgICAgICAgIGV4Y2x1ZGVFbmQ6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBiZWdpbjogJ1xcXFxiKHNldHxsaXN0fG1hcClcXFxccyo8JyxcbiAgICAgICAga2V5d29yZHM6IHtcbiAgICAgICAgICB0eXBlOiBbLi4uVFlQRVMsIFwic2V0XCIsIFwibGlzdFwiLCBcIm1hcFwiXVxuICAgICAgICB9LFxuICAgICAgICBlbmQ6ICc+JyxcbiAgICAgICAgY29udGFpbnM6IFsgJ3NlbGYnIF1cbiAgICAgIH1cbiAgICBdXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdGhyaWZ0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/thrift.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/tp.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/tp.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: TP\\nAuthor: Jay Strybis <jay.strybis@gmail.com>\\nDescription: FANUC TP programming language (TPP).\\n*/\\n\\nfunction tp(hljs) {\\n  const TPID = {\\n    className: 'number',\\n    begin: '[1-9][0-9]*', /* no leading zeros */\\n    relevance: 0\\n  };\\n  const TPLABEL = {\\n    className: 'symbol',\\n    begin: ':[^\\\\\\\\]]+'\\n  };\\n  const TPDATA = {\\n    className: 'built_in',\\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' +\\n    'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\\\\\[',\\n    end: '\\\\\\\\]',\\n    contains: [\\n      'self',\\n      TPID,\\n      TPLABEL\\n    ]\\n  };\\n  const TPIO = {\\n    className: 'built_in',\\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\\\\\[',\\n    end: '\\\\\\\\]',\\n    contains: [\\n      'self',\\n      TPID,\\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\\n      TPLABEL\\n    ]\\n  };\\n\\n  const KEYWORDS = [\\n    \\\"ABORT\\\",\\n    \\\"ACC\\\",\\n    \\\"ADJUST\\\",\\n    \\\"AND\\\",\\n    \\\"AP_LD\\\",\\n    \\\"BREAK\\\",\\n    \\\"CALL\\\",\\n    \\\"CNT\\\",\\n    \\\"COL\\\",\\n    \\\"CONDITION\\\",\\n    \\\"CONFIG\\\",\\n    \\\"DA\\\",\\n    \\\"DB\\\",\\n    \\\"DIV\\\",\\n    \\\"DETECT\\\",\\n    \\\"ELSE\\\",\\n    \\\"END\\\",\\n    \\\"ENDFOR\\\",\\n    \\\"ERR_NUM\\\",\\n    \\\"ERROR_PROG\\\",\\n    \\\"FINE\\\",\\n    \\\"FOR\\\",\\n    \\\"GP\\\",\\n    \\\"GUARD\\\",\\n    \\\"INC\\\",\\n    \\\"IF\\\",\\n    \\\"JMP\\\",\\n    \\\"LINEAR_MAX_SPEED\\\",\\n    \\\"LOCK\\\",\\n    \\\"MOD\\\",\\n    \\\"MONITOR\\\",\\n    \\\"OFFSET\\\",\\n    \\\"Offset\\\",\\n    \\\"OR\\\",\\n    \\\"OVERRIDE\\\",\\n    \\\"PAUSE\\\",\\n    \\\"PREG\\\",\\n    \\\"PTH\\\",\\n    \\\"RT_LD\\\",\\n    \\\"RUN\\\",\\n    \\\"SELECT\\\",\\n    \\\"SKIP\\\",\\n    \\\"Skip\\\",\\n    \\\"TA\\\",\\n    \\\"TB\\\",\\n    \\\"TO\\\",\\n    \\\"TOOL_OFFSET\\\",\\n    \\\"Tool_Offset\\\",\\n    \\\"UF\\\",\\n    \\\"UT\\\",\\n    \\\"UFRAME_NUM\\\",\\n    \\\"UTOOL_NUM\\\",\\n    \\\"UNLOCK\\\",\\n    \\\"WAIT\\\",\\n    \\\"X\\\",\\n    \\\"Y\\\",\\n    \\\"Z\\\",\\n    \\\"W\\\",\\n    \\\"P\\\",\\n    \\\"R\\\",\\n    \\\"STRLEN\\\",\\n    \\\"SUBSTR\\\",\\n    \\\"FINDSTR\\\",\\n    \\\"VOFFSET\\\",\\n    \\\"PROG\\\",\\n    \\\"ATTR\\\",\\n    \\\"MN\\\",\\n    \\\"POS\\\"\\n  ];\\n  const LITERALS = [\\n    \\\"ON\\\",\\n    \\\"OFF\\\",\\n    \\\"max_speed\\\",\\n    \\\"LPOS\\\",\\n    \\\"JPOS\\\",\\n    \\\"ENABLE\\\",\\n    \\\"DISABLE\\\",\\n    \\\"START\\\",\\n    \\\"STOP\\\",\\n    \\\"RESET\\\"\\n  ];\\n\\n  return {\\n    name: 'TP',\\n    keywords: {\\n      keyword: KEYWORDS,\\n      literal: LITERALS\\n    },\\n    contains: [\\n      TPDATA,\\n      TPIO,\\n      {\\n        className: 'keyword',\\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\\\\\b'\\n      },\\n      {\\n        /* this is for cases like ,CALL */\\n        className: 'keyword',\\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\\\\\b'\\n      },\\n      {\\n        /* this is for cases like CNT100 where the default lexemes do not\\n         * separate the keyword and the number */\\n        className: 'keyword',\\n        begin: '\\\\\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\\n      },\\n      {\\n        /* to catch numbers that do not have a word boundary on the left */\\n        className: 'number',\\n        begin: '\\\\\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\\\\\b',\\n        relevance: 0\\n      },\\n      hljs.COMMENT('//', '[;$]'),\\n      hljs.COMMENT('!', '[;$]'),\\n      hljs.COMMENT('--eg:', '$'),\\n      hljs.QUOTE_STRING_MODE,\\n      {\\n        className: 'string',\\n        begin: '\\\\'',\\n        end: '\\\\''\\n      },\\n      hljs.C_NUMBER_MODE,\\n      {\\n        className: 'variable',\\n        begin: '\\\\\\\\$[A-Za-z0-9_]+'\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = tp;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdHAuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdHAuanM/YTYxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuTGFuZ3VhZ2U6IFRQXG5BdXRob3I6IEpheSBTdHJ5YmlzIDxqYXkuc3RyeWJpc0BnbWFpbC5jb20+XG5EZXNjcmlwdGlvbjogRkFOVUMgVFAgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgKFRQUCkuXG4qL1xuXG5mdW5jdGlvbiB0cChobGpzKSB7XG4gIGNvbnN0IFRQSUQgPSB7XG4gICAgY2xhc3NOYW1lOiAnbnVtYmVyJyxcbiAgICBiZWdpbjogJ1sxLTldWzAtOV0qJywgLyogbm8gbGVhZGluZyB6ZXJvcyAqL1xuICAgIHJlbGV2YW5jZTogMFxuICB9O1xuICBjb25zdCBUUExBQkVMID0ge1xuICAgIGNsYXNzTmFtZTogJ3N5bWJvbCcsXG4gICAgYmVnaW46ICc6W15cXFxcXV0rJ1xuICB9O1xuICBjb25zdCBUUERBVEEgPSB7XG4gICAgY2xhc3NOYW1lOiAnYnVpbHRfaW4nLFxuICAgIGJlZ2luOiAnKEFSfFB8UEFZTE9BRHxQUnxSfFNSfFJTUnxMQkx8VlJ8VUFMTXxNRVNTQUdFfFVUT09MfFVGUkFNRXxUSU1FUnwnICtcbiAgICAnVElNRVJfT1ZFUkZMT1d8Sk9JTlRfTUFYX1NQRUVEfFJFU1VNRV9QUk9HfERJQUdfUkVDKVxcXFxbJyxcbiAgICBlbmQ6ICdcXFxcXScsXG4gICAgY29udGFpbnM6IFtcbiAgICAgICdzZWxmJyxcbiAgICAgIFRQSUQsXG4gICAgICBUUExBQkVMXG4gICAgXVxuICB9O1xuICBjb25zdCBUUElPID0ge1xuICAgIGNsYXNzTmFtZTogJ2J1aWx0X2luJyxcbiAgICBiZWdpbjogJyhBSXxBT3xESXxET3xGfFJJfFJPfFVJfFVPfEdJfEdPfFNJfFNPKVxcXFxbJyxcbiAgICBlbmQ6ICdcXFxcXScsXG4gICAgY29udGFpbnM6IFtcbiAgICAgICdzZWxmJyxcbiAgICAgIFRQSUQsXG4gICAgICBobGpzLlFVT1RFX1NUUklOR19NT0RFLCAvKiBmb3IgcG9zIHNlY3Rpb24gYXQgYm90dG9tICovXG4gICAgICBUUExBQkVMXG4gICAgXVxuICB9O1xuXG4gIGNvbnN0IEtFWVdPUkRTID0gW1xuICAgIFwiQUJPUlRcIixcbiAgICBcIkFDQ1wiLFxuICAgIFwiQURKVVNUXCIsXG4gICAgXCJBTkRcIixcbiAgICBcIkFQX0xEXCIsXG4gICAgXCJCUkVBS1wiLFxuICAgIFwiQ0FMTFwiLFxuICAgIFwiQ05UXCIsXG4gICAgXCJDT0xcIixcbiAgICBcIkNPTkRJVElPTlwiLFxuICAgIFwiQ09ORklHXCIsXG4gICAgXCJEQVwiLFxuICAgIFwiREJcIixcbiAgICBcIkRJVlwiLFxuICAgIFwiREVURUNUXCIsXG4gICAgXCJFTFNFXCIsXG4gICAgXCJFTkRcIixcbiAgICBcIkVOREZPUlwiLFxuICAgIFwiRVJSX05VTVwiLFxuICAgIFwiRVJST1JfUFJPR1wiLFxuICAgIFwiRklORVwiLFxuICAgIFwiRk9SXCIsXG4gICAgXCJHUFwiLFxuICAgIFwiR1VBUkRcIixcbiAgICBcIklOQ1wiLFxuICAgIFwiSUZcIixcbiAgICBcIkpNUFwiLFxuICAgIFwiTElORUFSX01BWF9TUEVFRFwiLFxuICAgIFwiTE9DS1wiLFxuICAgIFwiTU9EXCIsXG4gICAgXCJNT05JVE9SXCIsXG4gICAgXCJPRkZTRVRcIixcbiAgICBcIk9mZnNldFwiLFxuICAgIFwiT1JcIixcbiAgICBcIk9WRVJSSURFXCIsXG4gICAgXCJQQVVTRVwiLFxuICAgIFwiUFJFR1wiLFxuICAgIFwiUFRIXCIsXG4gICAgXCJSVF9MRFwiLFxuICAgIFwiUlVOXCIsXG4gICAgXCJTRUxFQ1RcIixcbiAgICBcIlNLSVBcIixcbiAgICBcIlNraXBcIixcbiAgICBcIlRBXCIsXG4gICAgXCJUQlwiLFxuICAgIFwiVE9cIixcbiAgICBcIlRPT0xfT0ZGU0VUXCIsXG4gICAgXCJUb29sX09mZnNldFwiLFxuICAgIFwiVUZcIixcbiAgICBcIlVUXCIsXG4gICAgXCJVRlJBTUVfTlVNXCIsXG4gICAgXCJVVE9PTF9OVU1cIixcbiAgICBcIlVOTE9DS1wiLFxuICAgIFwiV0FJVFwiLFxuICAgIFwiWFwiLFxuICAgIFwiWVwiLFxuICAgIFwiWlwiLFxuICAgIFwiV1wiLFxuICAgIFwiUFwiLFxuICAgIFwiUlwiLFxuICAgIFwiU1RSTEVOXCIsXG4gICAgXCJTVUJTVFJcIixcbiAgICBcIkZJTkRTVFJcIixcbiAgICBcIlZPRkZTRVRcIixcbiAgICBcIlBST0dcIixcbiAgICBcIkFUVFJcIixcbiAgICBcIk1OXCIsXG4gICAgXCJQT1NcIlxuICBdO1xuICBjb25zdCBMSVRFUkFMUyA9IFtcbiAgICBcIk9OXCIsXG4gICAgXCJPRkZcIixcbiAgICBcIm1heF9zcGVlZFwiLFxuICAgIFwiTFBPU1wiLFxuICAgIFwiSlBPU1wiLFxuICAgIFwiRU5BQkxFXCIsXG4gICAgXCJESVNBQkxFXCIsXG4gICAgXCJTVEFSVFwiLFxuICAgIFwiU1RPUFwiLFxuICAgIFwiUkVTRVRcIlxuICBdO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogJ1RQJyxcbiAgICBrZXl3b3Jkczoge1xuICAgICAga2V5d29yZDogS0VZV09SRFMsXG4gICAgICBsaXRlcmFsOiBMSVRFUkFMU1xuICAgIH0sXG4gICAgY29udGFpbnM6IFtcbiAgICAgIFRQREFUQSxcbiAgICAgIFRQSU8sXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2tleXdvcmQnLFxuICAgICAgICBiZWdpbjogJy8oUFJPR3xBVFRSfE1OfFBPU3xFTkQpXFxcXGInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvKiB0aGlzIGlzIGZvciBjYXNlcyBsaWtlICxDQUxMICovXG4gICAgICAgIGNsYXNzTmFtZTogJ2tleXdvcmQnLFxuICAgICAgICBiZWdpbjogJyhDQUxMfFJVTnxQT0lOVF9MT0dJQ3xMQkwpXFxcXGInXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvKiB0aGlzIGlzIGZvciBjYXNlcyBsaWtlIENOVDEwMCB3aGVyZSB0aGUgZGVmYXVsdCBsZXhlbWVzIGRvIG5vdFxuICAgICAgICAgKiBzZXBhcmF0ZSB0aGUga2V5d29yZCBhbmQgdGhlIG51bWJlciAqL1xuICAgICAgICBjbGFzc05hbWU6ICdrZXl3b3JkJyxcbiAgICAgICAgYmVnaW46ICdcXFxcYihBQ0N8Q05UfFNraXB8T2Zmc2V0fFBTUER8UlRfTER8QVBfTER8VG9vbF9PZmZzZXQpJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLyogdG8gY2F0Y2ggbnVtYmVycyB0aGF0IGRvIG5vdCBoYXZlIGEgd29yZCBib3VuZGFyeSBvbiB0aGUgbGVmdCAqL1xuICAgICAgICBjbGFzc05hbWU6ICdudW1iZXInLFxuICAgICAgICBiZWdpbjogJ1xcXFxkKyhzZWN8bXNlY3xtbS9zZWN8Y20vbWlufGluY2gvbWlufGRlZy9zZWN8bW18aW58Y20pP1xcXFxiJyxcbiAgICAgICAgcmVsZXZhbmNlOiAwXG4gICAgICB9LFxuICAgICAgaGxqcy5DT01NRU5UKCcvLycsICdbOyRdJyksXG4gICAgICBobGpzLkNPTU1FTlQoJyEnLCAnWzskXScpLFxuICAgICAgaGxqcy5DT01NRU5UKCctLWVnOicsICckJyksXG4gICAgICBobGpzLlFVT1RFX1NUUklOR19NT0RFLFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICdzdHJpbmcnLFxuICAgICAgICBiZWdpbjogJ1xcJycsXG4gICAgICAgIGVuZDogJ1xcJydcbiAgICAgIH0sXG4gICAgICBobGpzLkNfTlVNQkVSX01PREUsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3ZhcmlhYmxlJyxcbiAgICAgICAgYmVnaW46ICdcXFxcJFtBLVphLXowLTlfXSsnXG4gICAgICB9XG4gICAgXVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRwO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/tp.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/twig.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/twig.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Twig\\nRequires: xml.js\\nAuthor: Luke Holder <lukemh@gmail.com>\\nDescription: Twig is a templating language for PHP\\nWebsite: https://twig.symfony.com\\nCategory: template\\n*/\\n\\nfunction twig(hljs) {\\n  var PARAMS = {\\n    className: 'params',\\n    begin: '\\\\\\\\(', end: '\\\\\\\\)'\\n  };\\n\\n  var FUNCTION_NAMES = 'attribute block constant cycle date dump include ' +\\n                  'max min parent random range source template_from_string';\\n\\n  var FUNCTIONS = {\\n    beginKeywords: FUNCTION_NAMES,\\n    keywords: {name: FUNCTION_NAMES},\\n    relevance: 0,\\n    contains: [\\n      PARAMS\\n    ]\\n  };\\n\\n  var FILTER = {\\n    begin: /\\\\|[A-Za-z_]+:?/,\\n    keywords:\\n      'abs batch capitalize column convert_encoding date date_modify default ' +\\n      'escape filter first format inky_to_html inline_css join json_encode keys last ' +\\n      'length lower map markdown merge nl2br number_format raw reduce replace ' +\\n      'reverse round slice sort spaceless split striptags title trim upper url_encode',\\n    contains: [\\n      FUNCTIONS\\n    ]\\n  };\\n\\n  var TAGS = 'apply autoescape block deprecated do embed extends filter flush for from ' +\\n    'if import include macro sandbox set use verbatim with';\\n\\n  TAGS = TAGS + ' ' + TAGS.split(' ').map(function(t){return 'end' + t}).join(' ');\\n\\n  return {\\n    name: 'Twig',\\n    aliases: ['craftcms'],\\n    case_insensitive: true,\\n    subLanguage: 'xml',\\n    contains: [\\n      hljs.COMMENT(/\\\\{#/, /#\\\\}/),\\n      {\\n        className: 'template-tag',\\n        begin: /\\\\{%/, end: /%\\\\}/,\\n        contains: [\\n          {\\n            className: 'name',\\n            begin: /\\\\w+/,\\n            keywords: TAGS,\\n            starts: {\\n              endsWithParent: true,\\n              contains: [FILTER, FUNCTIONS],\\n              relevance: 0\\n            }\\n          }\\n        ]\\n      },\\n      {\\n        className: 'template-variable',\\n        begin: /\\\\{\\\\{/, end: /\\\\}\\\\}/,\\n        contains: ['self', FILTER, FUNCTIONS]\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = twig;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdHdpZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy90d2lnLmpzP2Y0NmUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkxhbmd1YWdlOiBUd2lnXG5SZXF1aXJlczogeG1sLmpzXG5BdXRob3I6IEx1a2UgSG9sZGVyIDxsdWtlbWhAZ21haWwuY29tPlxuRGVzY3JpcHRpb246IFR3aWcgaXMgYSB0ZW1wbGF0aW5nIGxhbmd1YWdlIGZvciBQSFBcbldlYnNpdGU6IGh0dHBzOi8vdHdpZy5zeW1mb255LmNvbVxuQ2F0ZWdvcnk6IHRlbXBsYXRlXG4qL1xuXG5mdW5jdGlvbiB0d2lnKGhsanMpIHtcbiAgdmFyIFBBUkFNUyA9IHtcbiAgICBjbGFzc05hbWU6ICdwYXJhbXMnLFxuICAgIGJlZ2luOiAnXFxcXCgnLCBlbmQ6ICdcXFxcKSdcbiAgfTtcblxuICB2YXIgRlVOQ1RJT05fTkFNRVMgPSAnYXR0cmlidXRlIGJsb2NrIGNvbnN0YW50IGN5Y2xlIGRhdGUgZHVtcCBpbmNsdWRlICcgK1xuICAgICAgICAgICAgICAgICAgJ21heCBtaW4gcGFyZW50IHJhbmRvbSByYW5nZSBzb3VyY2UgdGVtcGxhdGVfZnJvbV9zdHJpbmcnO1xuXG4gIHZhciBGVU5DVElPTlMgPSB7XG4gICAgYmVnaW5LZXl3b3JkczogRlVOQ1RJT05fTkFNRVMsXG4gICAga2V5d29yZHM6IHtuYW1lOiBGVU5DVElPTl9OQU1FU30sXG4gICAgcmVsZXZhbmNlOiAwLFxuICAgIGNvbnRhaW5zOiBbXG4gICAgICBQQVJBTVNcbiAgICBdXG4gIH07XG5cbiAgdmFyIEZJTFRFUiA9IHtcbiAgICBiZWdpbjogL1xcfFtBLVphLXpfXSs6Py8sXG4gICAga2V5d29yZHM6XG4gICAgICAnYWJzIGJhdGNoIGNhcGl0YWxpemUgY29sdW1uIGNvbnZlcnRfZW5jb2RpbmcgZGF0ZSBkYXRlX21vZGlmeSBkZWZhdWx0ICcgK1xuICAgICAgJ2VzY2FwZSBmaWx0ZXIgZmlyc3QgZm9ybWF0IGlua3lfdG9faHRtbCBpbmxpbmVfY3NzIGpvaW4ganNvbl9lbmNvZGUga2V5cyBsYXN0ICcgK1xuICAgICAgJ2xlbmd0aCBsb3dlciBtYXAgbWFya2Rvd24gbWVyZ2UgbmwyYnIgbnVtYmVyX2Zvcm1hdCByYXcgcmVkdWNlIHJlcGxhY2UgJyArXG4gICAgICAncmV2ZXJzZSByb3VuZCBzbGljZSBzb3J0IHNwYWNlbGVzcyBzcGxpdCBzdHJpcHRhZ3MgdGl0bGUgdHJpbSB1cHBlciB1cmxfZW5jb2RlJyxcbiAgICBjb250YWluczogW1xuICAgICAgRlVOQ1RJT05TXG4gICAgXVxuICB9O1xuXG4gIHZhciBUQUdTID0gJ2FwcGx5IGF1dG9lc2NhcGUgYmxvY2sgZGVwcmVjYXRlZCBkbyBlbWJlZCBleHRlbmRzIGZpbHRlciBmbHVzaCBmb3IgZnJvbSAnICtcbiAgICAnaWYgaW1wb3J0IGluY2x1ZGUgbWFjcm8gc2FuZGJveCBzZXQgdXNlIHZlcmJhdGltIHdpdGgnO1xuXG4gIFRBR1MgPSBUQUdTICsgJyAnICsgVEFHUy5zcGxpdCgnICcpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gJ2VuZCcgKyB0fSkuam9pbignICcpO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogJ1R3aWcnLFxuICAgIGFsaWFzZXM6IFsnY3JhZnRjbXMnXSxcbiAgICBjYXNlX2luc2Vuc2l0aXZlOiB0cnVlLFxuICAgIHN1Ykxhbmd1YWdlOiAneG1sJyxcbiAgICBjb250YWluczogW1xuICAgICAgaGxqcy5DT01NRU5UKC9cXHsjLywgLyNcXH0vKSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiAndGVtcGxhdGUtdGFnJyxcbiAgICAgICAgYmVnaW46IC9cXHslLywgZW5kOiAvJVxcfS8sXG4gICAgICAgIGNvbnRhaW5zOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiAnbmFtZScsXG4gICAgICAgICAgICBiZWdpbjogL1xcdysvLFxuICAgICAgICAgICAga2V5d29yZHM6IFRBR1MsXG4gICAgICAgICAgICBzdGFydHM6IHtcbiAgICAgICAgICAgICAgZW5kc1dpdGhQYXJlbnQ6IHRydWUsXG4gICAgICAgICAgICAgIGNvbnRhaW5zOiBbRklMVEVSLCBGVU5DVElPTlNdLFxuICAgICAgICAgICAgICByZWxldmFuY2U6IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3RlbXBsYXRlLXZhcmlhYmxlJyxcbiAgICAgICAgYmVnaW46IC9cXHtcXHsvLCBlbmQ6IC9cXH1cXH0vLFxuICAgICAgICBjb250YWluczogWydzZWxmJywgRklMVEVSLCBGVU5DVElPTlNdXG4gICAgICB9XG4gICAgXVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHR3aWc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/twig.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/typescript.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/typescript.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\\nconst KEYWORDS = [\\n  \\\"as\\\", // for exports\\n  \\\"in\\\",\\n  \\\"of\\\",\\n  \\\"if\\\",\\n  \\\"for\\\",\\n  \\\"while\\\",\\n  \\\"finally\\\",\\n  \\\"var\\\",\\n  \\\"new\\\",\\n  \\\"function\\\",\\n  \\\"do\\\",\\n  \\\"return\\\",\\n  \\\"void\\\",\\n  \\\"else\\\",\\n  \\\"break\\\",\\n  \\\"catch\\\",\\n  \\\"instanceof\\\",\\n  \\\"with\\\",\\n  \\\"throw\\\",\\n  \\\"case\\\",\\n  \\\"default\\\",\\n  \\\"try\\\",\\n  \\\"switch\\\",\\n  \\\"continue\\\",\\n  \\\"typeof\\\",\\n  \\\"delete\\\",\\n  \\\"let\\\",\\n  \\\"yield\\\",\\n  \\\"const\\\",\\n  \\\"class\\\",\\n  // JS handles these with a special rule\\n  // \\\"get\\\",\\n  // \\\"set\\\",\\n  \\\"debugger\\\",\\n  \\\"async\\\",\\n  \\\"await\\\",\\n  \\\"static\\\",\\n  \\\"import\\\",\\n  \\\"from\\\",\\n  \\\"export\\\",\\n  \\\"extends\\\"\\n];\\nconst LITERALS = [\\n  \\\"true\\\",\\n  \\\"false\\\",\\n  \\\"null\\\",\\n  \\\"undefined\\\",\\n  \\\"NaN\\\",\\n  \\\"Infinity\\\"\\n];\\n\\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\\nconst TYPES = [\\n  // Fundamental objects\\n  \\\"Object\\\",\\n  \\\"Function\\\",\\n  \\\"Boolean\\\",\\n  \\\"Symbol\\\",\\n  // numbers and dates\\n  \\\"Math\\\",\\n  \\\"Date\\\",\\n  \\\"Number\\\",\\n  \\\"BigInt\\\",\\n  // text\\n  \\\"String\\\",\\n  \\\"RegExp\\\",\\n  // Indexed collections\\n  \\\"Array\\\",\\n  \\\"Float32Array\\\",\\n  \\\"Float64Array\\\",\\n  \\\"Int8Array\\\",\\n  \\\"Uint8Array\\\",\\n  \\\"Uint8ClampedArray\\\",\\n  \\\"Int16Array\\\",\\n  \\\"Int32Array\\\",\\n  \\\"Uint16Array\\\",\\n  \\\"Uint32Array\\\",\\n  \\\"BigInt64Array\\\",\\n  \\\"BigUint64Array\\\",\\n  // Keyed collections\\n  \\\"Set\\\",\\n  \\\"Map\\\",\\n  \\\"WeakSet\\\",\\n  \\\"WeakMap\\\",\\n  // Structured data\\n  \\\"ArrayBuffer\\\",\\n  \\\"SharedArrayBuffer\\\",\\n  \\\"Atomics\\\",\\n  \\\"DataView\\\",\\n  \\\"JSON\\\",\\n  // Control abstraction objects\\n  \\\"Promise\\\",\\n  \\\"Generator\\\",\\n  \\\"GeneratorFunction\\\",\\n  \\\"AsyncFunction\\\",\\n  // Reflection\\n  \\\"Reflect\\\",\\n  \\\"Proxy\\\",\\n  // Internationalization\\n  \\\"Intl\\\",\\n  // WebAssembly\\n  \\\"WebAssembly\\\"\\n];\\n\\nconst ERROR_TYPES = [\\n  \\\"Error\\\",\\n  \\\"EvalError\\\",\\n  \\\"InternalError\\\",\\n  \\\"RangeError\\\",\\n  \\\"ReferenceError\\\",\\n  \\\"SyntaxError\\\",\\n  \\\"TypeError\\\",\\n  \\\"URIError\\\"\\n];\\n\\nconst BUILT_IN_GLOBALS = [\\n  \\\"setInterval\\\",\\n  \\\"setTimeout\\\",\\n  \\\"clearInterval\\\",\\n  \\\"clearTimeout\\\",\\n\\n  \\\"require\\\",\\n  \\\"exports\\\",\\n\\n  \\\"eval\\\",\\n  \\\"isFinite\\\",\\n  \\\"isNaN\\\",\\n  \\\"parseFloat\\\",\\n  \\\"parseInt\\\",\\n  \\\"decodeURI\\\",\\n  \\\"decodeURIComponent\\\",\\n  \\\"encodeURI\\\",\\n  \\\"encodeURIComponent\\\",\\n  \\\"escape\\\",\\n  \\\"unescape\\\"\\n];\\n\\nconst BUILT_IN_VARIABLES = [\\n  \\\"arguments\\\",\\n  \\\"this\\\",\\n  \\\"super\\\",\\n  \\\"console\\\",\\n  \\\"window\\\",\\n  \\\"document\\\",\\n  \\\"localStorage\\\",\\n  \\\"module\\\",\\n  \\\"global\\\" // Node.js\\n];\\n\\nconst BUILT_INS = [].concat(\\n  BUILT_IN_GLOBALS,\\n  TYPES,\\n  ERROR_TYPES\\n);\\n\\n/*\\nLanguage: JavaScript\\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\\nCategory: common, scripting, web\\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\\n*/\\n\\n/** @type LanguageFn */\\nfunction javascript(hljs) {\\n  const regex = hljs.regex;\\n  /**\\n   * Takes a string like \\\"<Booger\\\" and checks to see\\n   * if we can find a matching \\\"</Booger\\\" later in the\\n   * content.\\n   * @param {RegExpMatchArray} match\\n   * @param {{after:number}} param1\\n   */\\n  const hasClosingTag = (match, { after }) => {\\n    const tag = \\\"</\\\" + match[0].slice(1);\\n    const pos = match.input.indexOf(tag, after);\\n    return pos !== -1;\\n  };\\n\\n  const IDENT_RE$1 = IDENT_RE;\\n  const FRAGMENT = {\\n    begin: '<>',\\n    end: '</>'\\n  };\\n  // to avoid some special cases inside isTrulyOpeningTag\\n  const XML_SELF_CLOSING = /<[A-Za-z0-9\\\\\\\\._:-]+\\\\s*\\\\/>/;\\n  const XML_TAG = {\\n    begin: /<[A-Za-z0-9\\\\\\\\._:-]+/,\\n    end: /\\\\/[A-Za-z0-9\\\\\\\\._:-]+>|\\\\/>/,\\n    /**\\n     * @param {RegExpMatchArray} match\\n     * @param {CallbackResponse} response\\n     */\\n    isTrulyOpeningTag: (match, response) => {\\n      const afterMatchIndex = match[0].length + match.index;\\n      const nextChar = match.input[afterMatchIndex];\\n      if (\\n        // HTML should not include another raw `<` inside a tag\\n        // nested type?\\n        // `<Array<Array<number>>`, etc.\\n        nextChar === \\\"<\\\" ||\\n        // the , gives away that this is not HTML\\n        // `<T, A extends keyof T, V>`\\n        nextChar === \\\",\\\") {\\n        response.ignoreMatch();\\n        return;\\n      }\\n\\n      // `<something>`\\n      // Quite possibly a tag, lets look for a matching closing tag...\\n      if (nextChar === \\\">\\\") {\\n        // if we cannot find a matching closing tag, then we\\n        // will ignore it\\n        if (!hasClosingTag(match, { after: afterMatchIndex })) {\\n          response.ignoreMatch();\\n        }\\n      }\\n\\n      // `<blah />` (self-closing)\\n      // handled by simpleSelfClosing rule\\n\\n      // `<From extends string>`\\n      // technically this could be HTML, but it smells like a type\\n      let m;\\n      const afterMatch = match.input.substr(afterMatchIndex);\\n      // NOTE: This is ugh, but added specifically for https://github.com/highlightjs/highlight.js/issues/3276\\n      if ((m = afterMatch.match(/^\\\\s+extends\\\\s+/))) {\\n        if (m.index === 0) {\\n          response.ignoreMatch();\\n          // eslint-disable-next-line no-useless-return\\n          return;\\n        }\\n      }\\n    }\\n  };\\n  const KEYWORDS$1 = {\\n    $pattern: IDENT_RE,\\n    keyword: KEYWORDS,\\n    literal: LITERALS,\\n    built_in: BUILT_INS,\\n    \\\"variable.language\\\": BUILT_IN_VARIABLES\\n  };\\n\\n  // https://tc39.es/ecma262/#sec-literals-numeric-literals\\n  const decimalDigits = '[0-9](_?[0-9])*';\\n  const frac = `\\\\\\\\.(${decimalDigits})`;\\n  // DecimalIntegerLiteral, including Annex B NonOctalDecimalIntegerLiteral\\n  // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\\n  const decimalInteger = `0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*`;\\n  const NUMBER = {\\n    className: 'number',\\n    variants: [\\n      // DecimalLiteral\\n      { begin: `(\\\\\\\\b(${decimalInteger})((${frac})|\\\\\\\\.)?|(${frac}))` +\\n        `[eE][+-]?(${decimalDigits})\\\\\\\\b` },\\n      { begin: `\\\\\\\\b(${decimalInteger})\\\\\\\\b((${frac})\\\\\\\\b|\\\\\\\\.)?|(${frac})\\\\\\\\b` },\\n\\n      // DecimalBigIntegerLiteral\\n      { begin: `\\\\\\\\b(0|[1-9](_?[0-9])*)n\\\\\\\\b` },\\n\\n      // NonDecimalIntegerLiteral\\n      { begin: \\\"\\\\\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\\\\\\\b\\\" },\\n      { begin: \\\"\\\\\\\\b0[bB][0-1](_?[0-1])*n?\\\\\\\\b\\\" },\\n      { begin: \\\"\\\\\\\\b0[oO][0-7](_?[0-7])*n?\\\\\\\\b\\\" },\\n\\n      // LegacyOctalIntegerLiteral (does not include underscore separators)\\n      // https://tc39.es/ecma262/#sec-additional-syntax-numeric-literals\\n      { begin: \\\"\\\\\\\\b0[0-7]+n?\\\\\\\\b\\\" },\\n    ],\\n    relevance: 0\\n  };\\n\\n  const SUBST = {\\n    className: 'subst',\\n    begin: '\\\\\\\\$\\\\\\\\{',\\n    end: '\\\\\\\\}',\\n    keywords: KEYWORDS$1,\\n    contains: [] // defined later\\n  };\\n  const HTML_TEMPLATE = {\\n    begin: 'html`',\\n    end: '',\\n    starts: {\\n      end: '`',\\n      returnEnd: false,\\n      contains: [\\n        hljs.BACKSLASH_ESCAPE,\\n        SUBST\\n      ],\\n      subLanguage: 'xml'\\n    }\\n  };\\n  const CSS_TEMPLATE = {\\n    begin: 'css`',\\n    end: '',\\n    starts: {\\n      end: '`',\\n      returnEnd: false,\\n      contains: [\\n        hljs.BACKSLASH_ESCAPE,\\n        SUBST\\n      ],\\n      subLanguage: 'css'\\n    }\\n  };\\n  const TEMPLATE_STRING = {\\n    className: 'string',\\n    begin: '`',\\n    end: '`',\\n    contains: [\\n      hljs.BACKSLASH_ESCAPE,\\n      SUBST\\n    ]\\n  };\\n  const JSDOC_COMMENT = hljs.COMMENT(\\n    /\\\\/\\\\*\\\\*(?!\\\\/)/,\\n    '\\\\\\\\*/',\\n    {\\n      relevance: 0,\\n      contains: [\\n        {\\n          begin: '(?=@[A-Za-z]+)',\\n          relevance: 0,\\n          contains: [\\n            {\\n              className: 'doctag',\\n              begin: '@[A-Za-z]+'\\n            },\\n            {\\n              className: 'type',\\n              begin: '\\\\\\\\{',\\n              end: '\\\\\\\\}',\\n              excludeEnd: true,\\n              excludeBegin: true,\\n              relevance: 0\\n            },\\n            {\\n              className: 'variable',\\n              begin: IDENT_RE$1 + '(?=\\\\\\\\s*(-)|$)',\\n              endsParent: true,\\n              relevance: 0\\n            },\\n            // eat spaces (not newlines) so we can find\\n            // types or variables\\n            {\\n              begin: /(?=[^\\\\n])\\\\s/,\\n              relevance: 0\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  );\\n  const COMMENT = {\\n    className: \\\"comment\\\",\\n    variants: [\\n      JSDOC_COMMENT,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      hljs.C_LINE_COMMENT_MODE\\n    ]\\n  };\\n  const SUBST_INTERNALS = [\\n    hljs.APOS_STRING_MODE,\\n    hljs.QUOTE_STRING_MODE,\\n    HTML_TEMPLATE,\\n    CSS_TEMPLATE,\\n    TEMPLATE_STRING,\\n    NUMBER,\\n    // This is intentional:\\n    // See https://github.com/highlightjs/highlight.js/issues/3288\\n    // hljs.REGEXP_MODE\\n  ];\\n  SUBST.contains = SUBST_INTERNALS\\n    .concat({\\n      // we need to pair up {} inside our subst to prevent\\n      // it from ending too early by matching another }\\n      begin: /\\\\{/,\\n      end: /\\\\}/,\\n      keywords: KEYWORDS$1,\\n      contains: [\\n        \\\"self\\\"\\n      ].concat(SUBST_INTERNALS)\\n  