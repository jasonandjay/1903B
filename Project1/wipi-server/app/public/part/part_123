FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/erlang.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/excel.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/excel.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Excel formulae\\nAuthor: Victor Zhou <OiCMudkips@users.noreply.github.com>\\nDescription: Excel formulae\\nWebsite: https://products.office.com/en-us/excel/\\n*/\\n\\n/** @type LanguageFn */\\nfunction excel(hljs) {\\n  // built-in functions imported from https://web.archive.org/web/20160513042710/https://support.office.com/en-us/article/Excel-functions-alphabetical-b3944572-255d-4efb-bb96-c6d90033e188\\n  const BUILT_INS = [\\n    \\\"ABS\\\",\\n    \\\"ACCRINT\\\",\\n    \\\"ACCRINTM\\\",\\n    \\\"ACOS\\\",\\n    \\\"ACOSH\\\",\\n    \\\"ACOT\\\",\\n    \\\"ACOTH\\\",\\n    \\\"AGGREGATE\\\",\\n    \\\"ADDRESS\\\",\\n    \\\"AMORDEGRC\\\",\\n    \\\"AMORLINC\\\",\\n    \\\"AND\\\",\\n    \\\"ARABIC\\\",\\n    \\\"AREAS\\\",\\n    \\\"ASC\\\",\\n    \\\"ASIN\\\",\\n    \\\"ASINH\\\",\\n    \\\"ATAN\\\",\\n    \\\"ATAN2\\\",\\n    \\\"ATANH\\\",\\n    \\\"AVEDEV\\\",\\n    \\\"AVERAGE\\\",\\n    \\\"AVERAGEA\\\",\\n    \\\"AVERAGEIF\\\",\\n    \\\"AVERAGEIFS\\\",\\n    \\\"BAHTTEXT\\\",\\n    \\\"BASE\\\",\\n    \\\"BESSELI\\\",\\n    \\\"BESSELJ\\\",\\n    \\\"BESSELK\\\",\\n    \\\"BESSELY\\\",\\n    \\\"BETADIST\\\",\\n    \\\"BETA.DIST\\\",\\n    \\\"BETAINV\\\",\\n    \\\"BETA.INV\\\",\\n    \\\"BIN2DEC\\\",\\n    \\\"BIN2HEX\\\",\\n    \\\"BIN2OCT\\\",\\n    \\\"BINOMDIST\\\",\\n    \\\"BINOM.DIST\\\",\\n    \\\"BINOM.DIST.RANGE\\\",\\n    \\\"BINOM.INV\\\",\\n    \\\"BITAND\\\",\\n    \\\"BITLSHIFT\\\",\\n    \\\"BITOR\\\",\\n    \\\"BITRSHIFT\\\",\\n    \\\"BITXOR\\\",\\n    \\\"CALL\\\",\\n    \\\"CEILING\\\",\\n    \\\"CEILING.MATH\\\",\\n    \\\"CEILING.PRECISE\\\",\\n    \\\"CELL\\\",\\n    \\\"CHAR\\\",\\n    \\\"CHIDIST\\\",\\n    \\\"CHIINV\\\",\\n    \\\"CHITEST\\\",\\n    \\\"CHISQ.DIST\\\",\\n    \\\"CHISQ.DIST.RT\\\",\\n    \\\"CHISQ.INV\\\",\\n    \\\"CHISQ.INV.RT\\\",\\n    \\\"CHISQ.TEST\\\",\\n    \\\"CHOOSE\\\",\\n    \\\"CLEAN\\\",\\n    \\\"CODE\\\",\\n    \\\"COLUMN\\\",\\n    \\\"COLUMNS\\\",\\n    \\\"COMBIN\\\",\\n    \\\"COMBINA\\\",\\n    \\\"COMPLEX\\\",\\n    \\\"CONCAT\\\",\\n    \\\"CONCATENATE\\\",\\n    \\\"CONFIDENCE\\\",\\n    \\\"CONFIDENCE.NORM\\\",\\n    \\\"CONFIDENCE.T\\\",\\n    \\\"CONVERT\\\",\\n    \\\"CORREL\\\",\\n    \\\"COS\\\",\\n    \\\"COSH\\\",\\n    \\\"COT\\\",\\n    \\\"COTH\\\",\\n    \\\"COUNT\\\",\\n    \\\"COUNTA\\\",\\n    \\\"COUNTBLANK\\\",\\n    \\\"COUNTIF\\\",\\n    \\\"COUNTIFS\\\",\\n    \\\"COUPDAYBS\\\",\\n    \\\"COUPDAYS\\\",\\n    \\\"COUPDAYSNC\\\",\\n    \\\"COUPNCD\\\",\\n    \\\"COUPNUM\\\",\\n    \\\"COUPPCD\\\",\\n    \\\"COVAR\\\",\\n    \\\"COVARIANCE.P\\\",\\n    \\\"COVARIANCE.S\\\",\\n    \\\"CRITBINOM\\\",\\n    \\\"CSC\\\",\\n    \\\"CSCH\\\",\\n    \\\"CUBEKPIMEMBER\\\",\\n    \\\"CUBEMEMBER\\\",\\n    \\\"CUBEMEMBERPROPERTY\\\",\\n    \\\"CUBERANKEDMEMBER\\\",\\n    \\\"CUBESET\\\",\\n    \\\"CUBESETCOUNT\\\",\\n    \\\"CUBEVALUE\\\",\\n    \\\"CUMIPMT\\\",\\n    \\\"CUMPRINC\\\",\\n    \\\"DATE\\\",\\n    \\\"DATEDIF\\\",\\n    \\\"DATEVALUE\\\",\\n    \\\"DAVERAGE\\\",\\n    \\\"DAY\\\",\\n    \\\"DAYS\\\",\\n    \\\"DAYS360\\\",\\n    \\\"DB\\\",\\n    \\\"DBCS\\\",\\n    \\\"DCOUNT\\\",\\n    \\\"DCOUNTA\\\",\\n    \\\"DDB\\\",\\n    \\\"DEC2BIN\\\",\\n    \\\"DEC2HEX\\\",\\n    \\\"DEC2OCT\\\",\\n    \\\"DECIMAL\\\",\\n    \\\"DEGREES\\\",\\n    \\\"DELTA\\\",\\n    \\\"DEVSQ\\\",\\n    \\\"DGET\\\",\\n    \\\"DISC\\\",\\n    \\\"DMAX\\\",\\n    \\\"DMIN\\\",\\n    \\\"DOLLAR\\\",\\n    \\\"DOLLARDE\\\",\\n    \\\"DOLLARFR\\\",\\n    \\\"DPRODUCT\\\",\\n    \\\"DSTDEV\\\",\\n    \\\"DSTDEVP\\\",\\n    \\\"DSUM\\\",\\n    \\\"DURATION\\\",\\n    \\\"DVAR\\\",\\n    \\\"DVARP\\\",\\n    \\\"EDATE\\\",\\n    \\\"EFFECT\\\",\\n    \\\"ENCODEURL\\\",\\n    \\\"EOMONTH\\\",\\n    \\\"ERF\\\",\\n    \\\"ERF.PRECISE\\\",\\n    \\\"ERFC\\\",\\n    \\\"ERFC.PRECISE\\\",\\n    \\\"ERROR.TYPE\\\",\\n    \\\"EUROCONVERT\\\",\\n    \\\"EVEN\\\",\\n    \\\"EXACT\\\",\\n    \\\"EXP\\\",\\n    \\\"EXPON.DIST\\\",\\n    \\\"EXPONDIST\\\",\\n    \\\"FACT\\\",\\n    \\\"FACTDOUBLE\\\",\\n    \\\"FALSE|0\\\",\\n    \\\"F.DIST\\\",\\n    \\\"FDIST\\\",\\n    \\\"F.DIST.RT\\\",\\n    \\\"FILTERXML\\\",\\n    \\\"FIND\\\",\\n    \\\"FINDB\\\",\\n    \\\"F.INV\\\",\\n    \\\"F.INV.RT\\\",\\n    \\\"FINV\\\",\\n    \\\"FISHER\\\",\\n    \\\"FISHERINV\\\",\\n    \\\"FIXED\\\",\\n    \\\"FLOOR\\\",\\n    \\\"FLOOR.MATH\\\",\\n    \\\"FLOOR.PRECISE\\\",\\n    \\\"FORECAST\\\",\\n    \\\"FORECAST.ETS\\\",\\n    \\\"FORECAST.ETS.CONFINT\\\",\\n    \\\"FORECAST.ETS.SEASONALITY\\\",\\n    \\\"FORECAST.ETS.STAT\\\",\\n    \\\"FORECAST.LINEAR\\\",\\n    \\\"FORMULATEXT\\\",\\n    \\\"FREQUENCY\\\",\\n    \\\"F.TEST\\\",\\n    \\\"FTEST\\\",\\n    \\\"FV\\\",\\n    \\\"FVSCHEDULE\\\",\\n    \\\"GAMMA\\\",\\n    \\\"GAMMA.DIST\\\",\\n    \\\"GAMMADIST\\\",\\n    \\\"GAMMA.INV\\\",\\n    \\\"GAMMAINV\\\",\\n    \\\"GAMMALN\\\",\\n    \\\"GAMMALN.PRECISE\\\",\\n    \\\"GAUSS\\\",\\n    \\\"GCD\\\",\\n    \\\"GEOMEAN\\\",\\n    \\\"GESTEP\\\",\\n    \\\"GETPIVOTDATA\\\",\\n    \\\"GROWTH\\\",\\n    \\\"HARMEAN\\\",\\n    \\\"HEX2BIN\\\",\\n    \\\"HEX2DEC\\\",\\n    \\\"HEX2OCT\\\",\\n    \\\"HLOOKUP\\\",\\n    \\\"HOUR\\\",\\n    \\\"HYPERLINK\\\",\\n    \\\"HYPGEOM.DIST\\\",\\n    \\\"HYPGEOMDIST\\\",\\n    \\\"IF\\\",\\n    \\\"IFERROR\\\",\\n    \\\"IFNA\\\",\\n    \\\"IFS\\\",\\n    \\\"IMABS\\\",\\n    \\\"IMAGINARY\\\",\\n    \\\"IMARGUMENT\\\",\\n    \\\"IMCONJUGATE\\\",\\n    \\\"IMCOS\\\",\\n    \\\"IMCOSH\\\",\\n    \\\"IMCOT\\\",\\n    \\\"IMCSC\\\",\\n    \\\"IMCSCH\\\",\\n    \\\"IMDIV\\\",\\n    \\\"IMEXP\\\",\\n    \\\"IMLN\\\",\\n    \\\"IMLOG10\\\",\\n    \\\"IMLOG2\\\",\\n    \\\"IMPOWER\\\",\\n    \\\"IMPRODUCT\\\",\\n    \\\"IMREAL\\\",\\n    \\\"IMSEC\\\",\\n    \\\"IMSECH\\\",\\n    \\\"IMSIN\\\",\\n    \\\"IMSINH\\\",\\n    \\\"IMSQRT\\\",\\n    \\\"IMSUB\\\",\\n    \\\"IMSUM\\\",\\n    \\\"IMTAN\\\",\\n    \\\"INDEX\\\",\\n    \\\"INDIRECT\\\",\\n    \\\"INFO\\\",\\n    \\\"INT\\\",\\n    \\\"INTERCEPT\\\",\\n    \\\"INTRATE\\\",\\n    \\\"IPMT\\\",\\n    \\\"IRR\\\",\\n    \\\"ISBLANK\\\",\\n    \\\"ISERR\\\",\\n    \\\"ISERROR\\\",\\n    \\\"ISEVEN\\\",\\n    \\\"ISFORMULA\\\",\\n    \\\"ISLOGICAL\\\",\\n    \\\"ISNA\\\",\\n    \\\"ISNONTEXT\\\",\\n    \\\"ISNUMBER\\\",\\n    \\\"ISODD\\\",\\n    \\\"ISREF\\\",\\n    \\\"ISTEXT\\\",\\n    \\\"ISO.CEILING\\\",\\n    \\\"ISOWEEKNUM\\\",\\n    \\\"ISPMT\\\",\\n    \\\"JIS\\\",\\n    \\\"KURT\\\",\\n    \\\"LARGE\\\",\\n    \\\"LCM\\\",\\n    \\\"LEFT\\\",\\n    \\\"LEFTB\\\",\\n    \\\"LEN\\\",\\n    \\\"LENB\\\",\\n    \\\"LINEST\\\",\\n    \\\"LN\\\",\\n    \\\"LOG\\\",\\n    \\\"LOG10\\\",\\n    \\\"LOGEST\\\",\\n    \\\"LOGINV\\\",\\n    \\\"LOGNORM.DIST\\\",\\n    \\\"LOGNORMDIST\\\",\\n    \\\"LOGNORM.INV\\\",\\n    \\\"LOOKUP\\\",\\n    \\\"LOWER\\\",\\n    \\\"MATCH\\\",\\n    \\\"MAX\\\",\\n    \\\"MAXA\\\",\\n    \\\"MAXIFS\\\",\\n    \\\"MDETERM\\\",\\n    \\\"MDURATION\\\",\\n    \\\"MEDIAN\\\",\\n    \\\"MID\\\",\\n    \\\"MIDBs\\\",\\n    \\\"MIN\\\",\\n    \\\"MINIFS\\\",\\n    \\\"MINA\\\",\\n    \\\"MINUTE\\\",\\n    \\\"MINVERSE\\\",\\n    \\\"MIRR\\\",\\n    \\\"MMULT\\\",\\n    \\\"MOD\\\",\\n    \\\"MODE\\\",\\n    \\\"MODE.MULT\\\",\\n    \\\"MODE.SNGL\\\",\\n    \\\"MONTH\\\",\\n    \\\"MROUND\\\",\\n    \\\"MULTINOMIAL\\\",\\n    \\\"MUNIT\\\",\\n    \\\"N\\\",\\n    \\\"NA\\\",\\n    \\\"NEGBINOM.DIST\\\",\\n    \\\"NEGBINOMDIST\\\",\\n    \\\"NETWORKDAYS\\\",\\n    \\\"NETWORKDAYS.INTL\\\",\\n    \\\"NOMINAL\\\",\\n    \\\"NORM.DIST\\\",\\n    \\\"NORMDIST\\\",\\n    \\\"NORMINV\\\",\\n    \\\"NORM.INV\\\",\\n    \\\"NORM.S.DIST\\\",\\n    \\\"NORMSDIST\\\",\\n    \\\"NORM.S.INV\\\",\\n    \\\"NORMSINV\\\",\\n    \\\"NOT\\\",\\n    \\\"NOW\\\",\\n    \\\"NPER\\\",\\n    \\\"NPV\\\",\\n    \\\"NUMBERVALUE\\\",\\n    \\\"OCT2BIN\\\",\\n    \\\"OCT2DEC\\\",\\n    \\\"OCT2HEX\\\",\\n    \\\"ODD\\\",\\n    \\\"ODDFPRICE\\\",\\n    \\\"ODDFYIELD\\\",\\n    \\\"ODDLPRICE\\\",\\n    \\\"ODDLYIELD\\\",\\n    \\\"OFFSET\\\",\\n    \\\"OR\\\",\\n    \\\"PDURATION\\\",\\n    \\\"PEARSON\\\",\\n    \\\"PERCENTILE.EXC\\\",\\n    \\\"PERCENTILE.INC\\\",\\n    \\\"PERCENTILE\\\",\\n    \\\"PERCENTRANK.EXC\\\",\\n    \\\"PERCENTRANK.INC\\\",\\n    \\\"PERCENTRANK\\\",\\n    \\\"PERMUT\\\",\\n    \\\"PERMUTATIONA\\\",\\n    \\\"PHI\\\",\\n    \\\"PHONETIC\\\",\\n    \\\"PI\\\",\\n    \\\"PMT\\\",\\n    \\\"POISSON.DIST\\\",\\n    \\\"POISSON\\\",\\n    \\\"POWER\\\",\\n    \\\"PPMT\\\",\\n    \\\"PRICE\\\",\\n    \\\"PRICEDISC\\\",\\n    \\\"PRICEMAT\\\",\\n    \\\"PROB\\\",\\n    \\\"PRODUCT\\\",\\n    \\\"PROPER\\\",\\n    \\\"PV\\\",\\n    \\\"QUARTILE\\\",\\n    \\\"QUARTILE.EXC\\\",\\n    \\\"QUARTILE.INC\\\",\\n    \\\"QUOTIENT\\\",\\n    \\\"RADIANS\\\",\\n    \\\"RAND\\\",\\n    \\\"RANDBETWEEN\\\",\\n    \\\"RANK.AVG\\\",\\n    \\\"RANK.EQ\\\",\\n    \\\"RANK\\\",\\n    \\\"RATE\\\",\\n    \\\"RECEIVED\\\",\\n    \\\"REGISTER.ID\\\",\\n    \\\"REPLACE\\\",\\n    \\\"REPLACEB\\\",\\n    \\\"REPT\\\",\\n    \\\"RIGHT\\\",\\n    \\\"RIGHTB\\\",\\n    \\\"ROMAN\\\",\\n    \\\"ROUND\\\",\\n    \\\"ROUNDDOWN\\\",\\n    \\\"ROUNDUP\\\",\\n    \\\"ROW\\\",\\n    \\\"ROWS\\\",\\n    \\\"RRI\\\",\\n    \\\"RSQ\\\",\\n    \\\"RTD\\\",\\n    \\\"SEARCH\\\",\\n    \\\"SEARCHB\\\",\\n    \\\"SEC\\\",\\n    \\\"SECH\\\",\\n    \\\"SECOND\\\",\\n    \\\"SERIESSUM\\\",\\n    \\\"SHEET\\\",\\n    \\\"SHEETS\\\",\\n    \\\"SIGN\\\",\\n    \\\"SIN\\\",\\n    \\\"SINH\\\",\\n    \\\"SKEW\\\",\\n    \\\"SKEW.P\\\",\\n    \\\"SLN\\\",\\n    \\\"SLOPE\\\",\\n    \\\"SMALL\\\",\\n    \\\"SQL.REQUEST\\\",\\n    \\\"SQRT\\\",\\n    \\\"SQRTPI\\\",\\n    \\\"STANDARDIZE\\\",\\n    \\\"STDEV\\\",\\n    \\\"STDEV.P\\\",\\n    \\\"STDEV.S\\\",\\n    \\\"STDEVA\\\",\\n    \\\"STDEVP\\\",\\n    \\\"STDEVPA\\\",\\n    \\\"STEYX\\\",\\n    \\\"SUBSTITUTE\\\",\\n    \\\"SUBTOTAL\\\",\\n    \\\"SUM\\\",\\n    \\\"SUMIF\\\",\\n    \\\"SUMIFS\\\",\\n    \\\"SUMPRODUCT\\\",\\n    \\\"SUMSQ\\\",\\n    \\\"SUMX2MY2\\\",\\n    \\\"SUMX2PY2\\\",\\n    \\\"SUMXMY2\\\",\\n    \\\"SWITCH\\\",\\n    \\\"SYD\\\",\\n    \\\"T\\\",\\n    \\\"TAN\\\",\\n    \\\"TANH\\\",\\n    \\\"TBILLEQ\\\",\\n    \\\"TBILLPRICE\\\",\\n    \\\"TBILLYIELD\\\",\\n    \\\"T.DIST\\\",\\n    \\\"T.DIST.2T\\\",\\n    \\\"T.DIST.RT\\\",\\n    \\\"TDIST\\\",\\n    \\\"TEXT\\\",\\n    \\\"TEXTJOIN\\\",\\n    \\\"TIME\\\",\\n    \\\"TIMEVALUE\\\",\\n    \\\"T.INV\\\",\\n    \\\"T.INV.2T\\\",\\n    \\\"TINV\\\",\\n    \\\"TODAY\\\",\\n    \\\"TRANSPOSE\\\",\\n    \\\"TREND\\\",\\n    \\\"TRIM\\\",\\n    \\\"TRIMMEAN\\\",\\n    \\\"TRUE|0\\\",\\n    \\\"TRUNC\\\",\\n    \\\"T.TEST\\\",\\n    \\\"TTEST\\\",\\n    \\\"TYPE\\\",\\n    \\\"UNICHAR\\\",\\n    \\\"UNICODE\\\",\\n    \\\"UPPER\\\",\\n    \\\"VALUE\\\",\\n    \\\"VAR\\\",\\n    \\\"VAR.P\\\",\\n    \\\"VAR.S\\\",\\n    \\\"VARA\\\",\\n    \\\"VARP\\\",\\n    \\\"VARPA\\\",\\n    \\\"VDB\\\",\\n    \\\"VLOOKUP\\\",\\n    \\\"WEBSERVICE\\\",\\n    \\\"WEEKDAY\\\",\\n    \\\"WEEKNUM\\\",\\n    \\\"WEIBULL\\\",\\n    \\\"WEIBULL.DIST\\\",\\n    \\\"WORKDAY\\\",\\n    \\\"WORKDAY.INTL\\\",\\n    \\\"XIRR\\\",\\n    \\\"XNPV\\\",\\n    \\\"XOR\\\",\\n    \\\"YEAR\\\",\\n    \\\"YEARFRAC\\\",\\n    \\\"YIELD\\\",\\n    \\\"YIELDDISC\\\",\\n    \\\"YIELDMAT\\\",\\n    \\\"Z.TEST\\\",\\n    \\\"ZTEST\\\"\\n  ];\\n  return {\\n    name: 'Excel formulae',\\n    aliases: [\\n      'xlsx',\\n      'xls'\\n    ],\\n    case_insensitive: true,\\n    keywords: {\\n      $pattern: /[a-zA-Z][\\\\w\\\\.]*/,\\n      built_in: BUILT_INS\\n    },\\n    contains: [\\n      {\\n        /* matches a beginning equal sign found in Excel formula examples */\\n        begin: /^=/,\\n        end: /[^=]/,\\n        returnEnd: true,\\n        illegal: /=/, /* only allow single equal sign at front of line */\\n        relevance: 10\\n      },\\n      /* technically, there can be more than 2 letters in column names, but this prevents conflict with some keywords */\\n      {\\n        /* matches a reference to a single cell */\\n        className: 'symbol',\\n        begin: /\\\\b[A-Z]{1,2}\\\\d+\\\\b/,\\n        end: /[^\\\\d]/,\\n        excludeEnd: true,\\n        relevance: 0\\n      },\\n      {\\n        /* matches a reference to a range of cells */\\n        className: 'symbol',\\n        begin: /[A-Z]{0,2}\\\\d*:[A-Z]{0,2}\\\\d*/,\\n        relevance: 0\\n      },\\n      hljs.BACKSLASH_ESCAPE,\\n      hljs.QUOTE_STRING_MODE,\\n      {\\n        className: 'number',\\n        begin: hljs.NUMBER_RE + '(%)?',\\n        relevance: 0\\n      },\\n      /* Excel formula comments are done by putting the comment in a function call to N() */\\n      hljs.COMMENT(/\\\\bN\\\\(/, /\\\\)/,\\n        {\\n          excludeBegin: true,\\n          excludeEnd: true,\\n          illegal: /\\\\n/\\n        })\\n    ]\\n  };\\n}\\n\\nmodule.exports = excel;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/excel.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/fix.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/fix.js ***!\n  \\********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: FIX\\nAuthor: Brent Bradbury <brent@brentium.com>\\n*/\\n\\n/** @type LanguageFn */\\nfunction fix(hljs) {\\n  return {\\n    name: 'FIX',\\n    contains: [{\\n      begin: /[^\\\\u2401\\\\u0001]+/,\\n      end: /[\\\\u2401\\\\u0001]/,\\n      excludeEnd: true,\\n      returnBegin: true,\\n      returnEnd: false,\\n      contains: [\\n        {\\n          begin: /([^\\\\u2401\\\\u0001=]+)/,\\n          end: /=([^\\\\u2401\\\\u0001=]+)/,\\n          returnEnd: true,\\n          returnBegin: false,\\n          className: 'attr'\\n        },\\n        {\\n          begin: /=/,\\n          end: /([\\\\u2401\\\\u0001])/,\\n          excludeEnd: true,\\n          excludeBegin: true,\\n          className: 'string'\\n        }\\n      ]\\n    }],\\n    case_insensitive: true\\n  };\\n}\\n\\nmodule.exports = fix;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvZml4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpZ2hsaWdodC5qcy9saWIvbGFuZ3VhZ2VzL2ZpeC5qcz8yYjIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5MYW5ndWFnZTogRklYXG5BdXRob3I6IEJyZW50IEJyYWRidXJ5IDxicmVudEBicmVudGl1bS5jb20+XG4qL1xuXG4vKiogQHR5cGUgTGFuZ3VhZ2VGbiAqL1xuZnVuY3Rpb24gZml4KGhsanMpIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnRklYJyxcbiAgICBjb250YWluczogW3tcbiAgICAgIGJlZ2luOiAvW15cXHUyNDAxXFx1MDAwMV0rLyxcbiAgICAgIGVuZDogL1tcXHUyNDAxXFx1MDAwMV0vLFxuICAgICAgZXhjbHVkZUVuZDogdHJ1ZSxcbiAgICAgIHJldHVybkJlZ2luOiB0cnVlLFxuICAgICAgcmV0dXJuRW5kOiBmYWxzZSxcbiAgICAgIGNvbnRhaW5zOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBiZWdpbjogLyhbXlxcdTI0MDFcXHUwMDAxPV0rKS8sXG4gICAgICAgICAgZW5kOiAvPShbXlxcdTI0MDFcXHUwMDAxPV0rKS8sXG4gICAgICAgICAgcmV0dXJuRW5kOiB0cnVlLFxuICAgICAgICAgIHJldHVybkJlZ2luOiBmYWxzZSxcbiAgICAgICAgICBjbGFzc05hbWU6ICdhdHRyJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgYmVnaW46IC89LyxcbiAgICAgICAgICBlbmQ6IC8oW1xcdTI0MDFcXHUwMDAxXSkvLFxuICAgICAgICAgIGV4Y2x1ZGVFbmQ6IHRydWUsXG4gICAgICAgICAgZXhjbHVkZUJlZ2luOiB0cnVlLFxuICAgICAgICAgIGNsYXNzTmFtZTogJ3N0cmluZydcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1dLFxuICAgIGNhc2VfaW5zZW5zaXRpdmU6IHRydWVcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmaXg7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/fix.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/flix.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/flix.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\n Language: Flix\\n Category: functional\\n Author: Magnus Madsen <mmadsen@uwaterloo.ca>\\n Website: https://flix.dev/\\n */\\n\\n /** @type LanguageFn */\\nfunction flix(hljs) {\\n  const CHAR = {\\n    className: 'string',\\n    begin: /'(.|\\\\\\\\[xXuU][a-zA-Z0-9]+)'/\\n  };\\n\\n  const STRING = {\\n    className: 'string',\\n    variants: [{\\n      begin: '\\\"',\\n      end: '\\\"'\\n    }]\\n  };\\n\\n  const NAME = {\\n    className: 'title',\\n    relevance: 0,\\n    begin: /[^0-9\\\\n\\\\t \\\"'(),.`{}\\\\[\\\\]:;][^\\\\n\\\\t \\\"'(),.`{}\\\\[\\\\]:;]+|[^0-9\\\\n\\\\t \\\"'(),.`{}\\\\[\\\\]:;=]/\\n  };\\n\\n  const METHOD = {\\n    className: 'function',\\n    beginKeywords: 'def',\\n    end: /[:={\\\\[(\\\\n;]/,\\n    excludeEnd: true,\\n    contains: [NAME]\\n  };\\n\\n  return {\\n    name: 'Flix',\\n    keywords: {\\n      keyword: [\\n        \\\"case\\\",\\n        \\\"class\\\",\\n        \\\"def\\\",\\n        \\\"else\\\",\\n        \\\"enum\\\",\\n        \\\"if\\\",\\n        \\\"impl\\\",\\n        \\\"import\\\",\\n        \\\"in\\\",\\n        \\\"lat\\\",\\n        \\\"rel\\\",\\n        \\\"index\\\",\\n        \\\"let\\\",\\n        \\\"match\\\",\\n        \\\"namespace\\\",\\n        \\\"switch\\\",\\n        \\\"type\\\",\\n        \\\"yield\\\",\\n        \\\"with\\\"\\n      ],\\n      literal: [\\n        \\\"true\\\",\\n        \\\"false\\\"\\n      ]\\n    },\\n    contains: [\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      CHAR,\\n      STRING,\\n      METHOD,\\n      hljs.C_NUMBER_MODE\\n    ]\\n  };\\n}\\n\\nmodule.exports = flix;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvZmxpeC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy9mbGl4LmpzP2ExNGUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiBMYW5ndWFnZTogRmxpeFxuIENhdGVnb3J5OiBmdW5jdGlvbmFsXG4gQXV0aG9yOiBNYWdudXMgTWFkc2VuIDxtbWFkc2VuQHV3YXRlcmxvby5jYT5cbiBXZWJzaXRlOiBodHRwczovL2ZsaXguZGV2L1xuICovXG5cbiAvKiogQHR5cGUgTGFuZ3VhZ2VGbiAqL1xuZnVuY3Rpb24gZmxpeChobGpzKSB7XG4gIGNvbnN0IENIQVIgPSB7XG4gICAgY2xhc3NOYW1lOiAnc3RyaW5nJyxcbiAgICBiZWdpbjogLycoLnxcXFxcW3hYdVVdW2EtekEtWjAtOV0rKScvXG4gIH07XG5cbiAgY29uc3QgU1RSSU5HID0ge1xuICAgIGNsYXNzTmFtZTogJ3N0cmluZycsXG4gICAgdmFyaWFudHM6IFt7XG4gICAgICBiZWdpbjogJ1wiJyxcbiAgICAgIGVuZDogJ1wiJ1xuICAgIH1dXG4gIH07XG5cbiAgY29uc3QgTkFNRSA9IHtcbiAgICBjbGFzc05hbWU6ICd0aXRsZScsXG4gICAgcmVsZXZhbmNlOiAwLFxuICAgIGJlZ2luOiAvW14wLTlcXG5cXHQgXCInKCksLmB7fVxcW1xcXTo7XVteXFxuXFx0IFwiJygpLC5ge31cXFtcXF06O10rfFteMC05XFxuXFx0IFwiJygpLC5ge31cXFtcXF06Oz1dL1xuICB9O1xuXG4gIGNvbnN0IE1FVEhPRCA9IHtcbiAgICBjbGFzc05hbWU6ICdmdW5jdGlvbicsXG4gICAgYmVnaW5LZXl3b3JkczogJ2RlZicsXG4gICAgZW5kOiAvWzo9e1xcWyhcXG47XS8sXG4gICAgZXhjbHVkZUVuZDogdHJ1ZSxcbiAgICBjb250YWluczogW05BTUVdXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnRmxpeCcsXG4gICAga2V5d29yZHM6IHtcbiAgICAgIGtleXdvcmQ6IFtcbiAgICAgICAgXCJjYXNlXCIsXG4gICAgICAgIFwiY2xhc3NcIixcbiAgICAgICAgXCJkZWZcIixcbiAgICAgICAgXCJlbHNlXCIsXG4gICAgICAgIFwiZW51bVwiLFxuICAgICAgICBcImlmXCIsXG4gICAgICAgIFwiaW1wbFwiLFxuICAgICAgICBcImltcG9ydFwiLFxuICAgICAgICBcImluXCIsXG4gICAgICAgIFwibGF0XCIsXG4gICAgICAgIFwicmVsXCIsXG4gICAgICAgIFwiaW5kZXhcIixcbiAgICAgICAgXCJsZXRcIixcbiAgICAgICAgXCJtYXRjaFwiLFxuICAgICAgICBcIm5hbWVzcGFjZVwiLFxuICAgICAgICBcInN3aXRjaFwiLFxuICAgICAgICBcInR5cGVcIixcbiAgICAgICAgXCJ5aWVsZFwiLFxuICAgICAgICBcIndpdGhcIlxuICAgICAgXSxcbiAgICAgIGxpdGVyYWw6IFtcbiAgICAgICAgXCJ0cnVlXCIsXG4gICAgICAgIFwiZmFsc2VcIlxuICAgICAgXVxuICAgIH0sXG4gICAgY29udGFpbnM6IFtcbiAgICAgIGhsanMuQ19MSU5FX0NPTU1FTlRfTU9ERSxcbiAgICAgIGhsanMuQ19CTE9DS19DT01NRU5UX01PREUsXG4gICAgICBDSEFSLFxuICAgICAgU1RSSU5HLFxuICAgICAgTUVUSE9ELFxuICAgICAgaGxqcy5DX05VTUJFUl9NT0RFXG4gICAgXVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZsaXg7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/flix.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/fortran.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/fortran.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Fortran\\nAuthor: Anthony Scemama <scemama@irsamc.ups-tlse.fr>\\nWebsite: https://en.wikipedia.org/wiki/Fortran\\nCategory: scientific\\n*/\\n\\n/** @type LanguageFn */\\nfunction fortran(hljs) {\\n  const regex = hljs.regex;\\n  const PARAMS = {\\n    className: 'params',\\n    begin: '\\\\\\\\(',\\n    end: '\\\\\\\\)'\\n  };\\n\\n  const COMMENT = {\\n    variants: [\\n      hljs.COMMENT('!', '$', {\\n        relevance: 0\\n      }),\\n      // allow FORTRAN 77 style comments\\n      hljs.COMMENT('^C[ ]', '$', {\\n        relevance: 0\\n      }),\\n      hljs.COMMENT('^C$', '$', {\\n        relevance: 0\\n      })\\n    ]\\n  };\\n\\n  // regex in both fortran and irpf90 should match\\n  const OPTIONAL_NUMBER_SUFFIX = /(_[a-z_\\\\d]+)?/;\\n  const OPTIONAL_NUMBER_EXP = /([de][+-]?\\\\d+)?/;\\n  const NUMBER = {\\n    className: 'number',\\n    variants: [\\n      {\\n        begin: regex.concat(/\\\\b\\\\d+/, /\\\\.(\\\\d*)/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\\n      },\\n      {\\n        begin: regex.concat(/\\\\b\\\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\\n      },\\n      {\\n        begin: regex.concat(/\\\\.\\\\d+/, OPTIONAL_NUMBER_EXP, OPTIONAL_NUMBER_SUFFIX)\\n      }\\n    ],\\n    relevance: 0\\n  };\\n\\n  const FUNCTION_DEF = {\\n    className: 'function',\\n    beginKeywords: 'subroutine function program',\\n    illegal: '[${=\\\\\\\\n]',\\n    contains: [\\n      hljs.UNDERSCORE_TITLE_MODE,\\n      PARAMS\\n    ]\\n  };\\n\\n  const STRING = {\\n    className: 'string',\\n    relevance: 0,\\n    variants: [\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE\\n    ]\\n  };\\n\\n  const KEYWORDS = [\\n    \\\"kind\\\",\\n    \\\"do\\\",\\n    \\\"concurrent\\\",\\n    \\\"local\\\",\\n    \\\"shared\\\",\\n    \\\"while\\\",\\n    \\\"private\\\",\\n    \\\"call\\\",\\n    \\\"intrinsic\\\",\\n    \\\"where\\\",\\n    \\\"elsewhere\\\",\\n    \\\"type\\\",\\n    \\\"endtype\\\",\\n    \\\"endmodule\\\",\\n    \\\"endselect\\\",\\n    \\\"endinterface\\\",\\n    \\\"end\\\",\\n    \\\"enddo\\\",\\n    \\\"endif\\\",\\n    \\\"if\\\",\\n    \\\"forall\\\",\\n    \\\"endforall\\\",\\n    \\\"only\\\",\\n    \\\"contains\\\",\\n    \\\"default\\\",\\n    \\\"return\\\",\\n    \\\"stop\\\",\\n    \\\"then\\\",\\n    \\\"block\\\",\\n    \\\"endblock\\\",\\n    \\\"endassociate\\\",\\n    \\\"public\\\",\\n    \\\"subroutine|10\\\",\\n    \\\"function\\\",\\n    \\\"program\\\",\\n    \\\".and.\\\",\\n    \\\".or.\\\",\\n    \\\".not.\\\",\\n    \\\".le.\\\",\\n    \\\".eq.\\\",\\n    \\\".ge.\\\",\\n    \\\".gt.\\\",\\n    \\\".lt.\\\",\\n    \\\"goto\\\",\\n    \\\"save\\\",\\n    \\\"else\\\",\\n    \\\"use\\\",\\n    \\\"module\\\",\\n    \\\"select\\\",\\n    \\\"case\\\",\\n    \\\"access\\\",\\n    \\\"blank\\\",\\n    \\\"direct\\\",\\n    \\\"exist\\\",\\n    \\\"file\\\",\\n    \\\"fmt\\\",\\n    \\\"form\\\",\\n    \\\"formatted\\\",\\n    \\\"iostat\\\",\\n    \\\"name\\\",\\n    \\\"named\\\",\\n    \\\"nextrec\\\",\\n    \\\"number\\\",\\n    \\\"opened\\\",\\n    \\\"rec\\\",\\n    \\\"recl\\\",\\n    \\\"sequential\\\",\\n    \\\"status\\\",\\n    \\\"unformatted\\\",\\n    \\\"unit\\\",\\n    \\\"continue\\\",\\n    \\\"format\\\",\\n    \\\"pause\\\",\\n    \\\"cycle\\\",\\n    \\\"exit\\\",\\n    \\\"c_null_char\\\",\\n    \\\"c_alert\\\",\\n    \\\"c_backspace\\\",\\n    \\\"c_form_feed\\\",\\n    \\\"flush\\\",\\n    \\\"wait\\\",\\n    \\\"decimal\\\",\\n    \\\"round\\\",\\n    \\\"iomsg\\\",\\n    \\\"synchronous\\\",\\n    \\\"nopass\\\",\\n    \\\"non_overridable\\\",\\n    \\\"pass\\\",\\n    \\\"protected\\\",\\n    \\\"volatile\\\",\\n    \\\"abstract\\\",\\n    \\\"extends\\\",\\n    \\\"import\\\",\\n    \\\"non_intrinsic\\\",\\n    \\\"value\\\",\\n    \\\"deferred\\\",\\n    \\\"generic\\\",\\n    \\\"final\\\",\\n    \\\"enumerator\\\",\\n    \\\"class\\\",\\n    \\\"associate\\\",\\n    \\\"bind\\\",\\n    \\\"enum\\\",\\n    \\\"c_int\\\",\\n    \\\"c_short\\\",\\n    \\\"c_long\\\",\\n    \\\"c_long_long\\\",\\n    \\\"c_signed_char\\\",\\n    \\\"c_size_t\\\",\\n    \\\"c_int8_t\\\",\\n    \\\"c_int16_t\\\",\\n    \\\"c_int32_t\\\",\\n    \\\"c_int64_t\\\",\\n    \\\"c_int_least8_t\\\",\\n    \\\"c_int_least16_t\\\",\\n    \\\"c_int_least32_t\\\",\\n    \\\"c_int_least64_t\\\",\\n    \\\"c_int_fast8_t\\\",\\n    \\\"c_int_fast16_t\\\",\\n    \\\"c_int_fast32_t\\\",\\n    \\\"c_int_fast64_t\\\",\\n    \\\"c_intmax_t\\\",\\n    \\\"C_intptr_t\\\",\\n    \\\"c_float\\\",\\n    \\\"c_double\\\",\\n    \\\"c_long_double\\\",\\n    \\\"c_float_complex\\\",\\n    \\\"c_double_complex\\\",\\n    \\\"c_long_double_complex\\\",\\n    \\\"c_bool\\\",\\n    \\\"c_char\\\",\\n    \\\"c_null_ptr\\\",\\n    \\\"c_null_funptr\\\",\\n    \\\"c_new_line\\\",\\n    \\\"c_carriage_return\\\",\\n    \\\"c_horizontal_tab\\\",\\n    \\\"c_vertical_tab\\\",\\n    \\\"iso_c_binding\\\",\\n    \\\"c_loc\\\",\\n    \\\"c_funloc\\\",\\n    \\\"c_associated\\\",\\n    \\\"c_f_pointer\\\",\\n    \\\"c_ptr\\\",\\n    \\\"c_funptr\\\",\\n    \\\"iso_fortran_env\\\",\\n    \\\"character_storage_size\\\",\\n    \\\"error_unit\\\",\\n    \\\"file_storage_size\\\",\\n    \\\"input_unit\\\",\\n    \\\"iostat_end\\\",\\n    \\\"iostat_eor\\\",\\n    \\\"numeric_storage_size\\\",\\n    \\\"output_unit\\\",\\n    \\\"c_f_procpointer\\\",\\n    \\\"ieee_arithmetic\\\",\\n    \\\"ieee_support_underflow_control\\\",\\n    \\\"ieee_get_underflow_mode\\\",\\n    \\\"ieee_set_underflow_mode\\\",\\n    \\\"newunit\\\",\\n    \\\"contiguous\\\",\\n    \\\"recursive\\\",\\n    \\\"pad\\\",\\n    \\\"position\\\",\\n    \\\"action\\\",\\n    \\\"delim\\\",\\n    \\\"readwrite\\\",\\n    \\\"eor\\\",\\n    \\\"advance\\\",\\n    \\\"nml\\\",\\n    \\\"interface\\\",\\n    \\\"procedure\\\",\\n    \\\"namelist\\\",\\n    \\\"include\\\",\\n    \\\"sequence\\\",\\n    \\\"elemental\\\",\\n    \\\"pure\\\",\\n    \\\"impure\\\",\\n    \\\"integer\\\",\\n    \\\"real\\\",\\n    \\\"character\\\",\\n    \\\"complex\\\",\\n    \\\"logical\\\",\\n    \\\"codimension\\\",\\n    \\\"dimension\\\",\\n    \\\"allocatable|10\\\",\\n    \\\"parameter\\\",\\n    \\\"external\\\",\\n    \\\"implicit|10\\\",\\n    \\\"none\\\",\\n    \\\"double\\\",\\n    \\\"precision\\\",\\n    \\\"assign\\\",\\n    \\\"intent\\\",\\n    \\\"optional\\\",\\n    \\\"pointer\\\",\\n    \\\"target\\\",\\n    \\\"in\\\",\\n    \\\"out\\\",\\n    \\\"common\\\",\\n    \\\"equivalence\\\",\\n    \\\"data\\\"\\n  ];\\n  const LITERALS = [\\n    \\\".False.\\\",\\n    \\\".True.\\\"\\n  ];\\n  const BUILT_INS = [\\n    \\\"alog\\\",\\n    \\\"alog10\\\",\\n    \\\"amax0\\\",\\n    \\\"amax1\\\",\\n    \\\"amin0\\\",\\n    \\\"amin1\\\",\\n    \\\"amod\\\",\\n    \\\"cabs\\\",\\n    \\\"ccos\\\",\\n    \\\"cexp\\\",\\n    \\\"clog\\\",\\n    \\\"csin\\\",\\n    \\\"csqrt\\\",\\n    \\\"dabs\\\",\\n    \\\"dacos\\\",\\n    \\\"dasin\\\",\\n    \\\"datan\\\",\\n    \\\"datan2\\\",\\n    \\\"dcos\\\",\\n    \\\"dcosh\\\",\\n    \\\"ddim\\\",\\n    \\\"dexp\\\",\\n    \\\"dint\\\",\\n    \\\"dlog\\\",\\n    \\\"dlog10\\\",\\n    \\\"dmax1\\\",\\n    \\\"dmin1\\\",\\n    \\\"dmod\\\",\\n    \\\"dnint\\\",\\n    \\\"dsign\\\",\\n    \\\"dsin\\\",\\n    \\\"dsinh\\\",\\n    \\\"dsqrt\\\",\\n    \\\"dtan\\\",\\n    \\\"dtanh\\\",\\n    \\\"float\\\",\\n    \\\"iabs\\\",\\n    \\\"idim\\\",\\n    \\\"idint\\\",\\n    \\\"idnint\\\",\\n    \\\"ifix\\\",\\n    \\\"isign\\\",\\n    \\\"max0\\\",\\n    \\\"max1\\\",\\n    \\\"min0\\\",\\n    \\\"min1\\\",\\n    \\\"sngl\\\",\\n    \\\"algama\\\",\\n    \\\"cdabs\\\",\\n    \\\"cdcos\\\",\\n    \\\"cdexp\\\",\\n    \\\"cdlog\\\",\\n    \\\"cdsin\\\",\\n    \\\"cdsqrt\\\",\\n    \\\"cqabs\\\",\\n    \\\"cqcos\\\",\\n    \\\"cqexp\\\",\\n    \\\"cqlog\\\",\\n    \\\"cqsin\\\",\\n    \\\"cqsqrt\\\",\\n    \\\"dcmplx\\\",\\n    \\\"dconjg\\\",\\n    \\\"derf\\\",\\n    \\\"derfc\\\",\\n    \\\"dfloat\\\",\\n    \\\"dgamma\\\",\\n    \\\"dimag\\\",\\n    \\\"dlgama\\\",\\n    \\\"iqint\\\",\\n    \\\"qabs\\\",\\n    \\\"qacos\\\",\\n    \\\"qasin\\\",\\n    \\\"qatan\\\",\\n    \\\"qatan2\\\",\\n    \\\"qcmplx\\\",\\n    \\\"qconjg\\\",\\n    \\\"qcos\\\",\\n    \\\"qcosh\\\",\\n    \\\"qdim\\\",\\n    \\\"qerf\\\",\\n    \\\"qerfc\\\",\\n    \\\"qexp\\\",\\n    \\\"qgamma\\\",\\n    \\\"qimag\\\",\\n    \\\"qlgama\\\",\\n    \\\"qlog\\\",\\n    \\\"qlog10\\\",\\n    \\\"qmax1\\\",\\n    \\\"qmin1\\\",\\n    \\\"qmod\\\",\\n    \\\"qnint\\\",\\n    \\\"qsign\\\",\\n    \\\"qsin\\\",\\n    \\\"qsinh\\\",\\n    \\\"qsqrt\\\",\\n    \\\"qtan\\\",\\n    \\\"qtanh\\\",\\n    \\\"abs\\\",\\n    \\\"acos\\\",\\n    \\\"aimag\\\",\\n    \\\"aint\\\",\\n    \\\"anint\\\",\\n    \\\"asin\\\",\\n    \\\"atan\\\",\\n    \\\"atan2\\\",\\n    \\\"char\\\",\\n    \\\"cmplx\\\",\\n    \\\"conjg\\\",\\n    \\\"cos\\\",\\n    \\\"cosh\\\",\\n    \\\"exp\\\",\\n    \\\"ichar\\\",\\n    \\\"index\\\",\\n    \\\"int\\\",\\n    \\\"log\\\",\\n    \\\"log10\\\",\\n    \\\"max\\\",\\n    \\\"min\\\",\\n    \\\"nint\\\",\\n    \\\"sign\\\",\\n    \\\"sin\\\",\\n    \\\"sinh\\\",\\n    \\\"sqrt\\\",\\n    \\\"tan\\\",\\n    \\\"tanh\\\",\\n    \\\"print\\\",\\n    \\\"write\\\",\\n    \\\"dim\\\",\\n    \\\"lge\\\",\\n    \\\"lgt\\\",\\n    \\\"lle\\\",\\n    \\\"llt\\\",\\n    \\\"mod\\\",\\n    \\\"nullify\\\",\\n    \\\"allocate\\\",\\n    \\\"deallocate\\\",\\n    \\\"adjustl\\\",\\n    \\\"adjustr\\\",\\n    \\\"all\\\",\\n    \\\"allocated\\\",\\n    \\\"any\\\",\\n    \\\"associated\\\",\\n    \\\"bit_size\\\",\\n    \\\"btest\\\",\\n    \\\"ceiling\\\",\\n    \\\"count\\\",\\n    \\\"cshift\\\",\\n    \\\"date_and_time\\\",\\n    \\\"digits\\\",\\n    \\\"dot_product\\\",\\n    \\\"eoshift\\\",\\n    \\\"epsilon\\\",\\n    \\\"exponent\\\",\\n    \\\"floor\\\",\\n    \\\"fraction\\\",\\n    \\\"huge\\\",\\n    \\\"iand\\\",\\n    \\\"ibclr\\\",\\n    \\\"ibits\\\",\\n    \\\"ibset\\\",\\n    \\\"ieor\\\",\\n    \\\"ior\\\",\\n    \\\"ishft\\\",\\n    \\\"ishftc\\\",\\n    \\\"lbound\\\",\\n    \\\"len_trim\\\",\\n    \\\"matmul\\\",\\n    \\\"maxexponent\\\",\\n    \\\"maxloc\\\",\\n    \\\"maxval\\\",\\n    \\\"merge\\\",\\n    \\\"minexponent\\\",\\n    \\\"minloc\\\",\\n    \\\"minval\\\",\\n    \\\"modulo\\\",\\n    \\\"mvbits\\\",\\n    \\\"nearest\\\",\\n    \\\"pack\\\",\\n    \\\"present\\\",\\n    \\\"product\\\",\\n    \\\"radix\\\",\\n    \\\"random_number\\\",\\n    \\\"random_seed\\\",\\n    \\\"range\\\",\\n    \\\"repeat\\\",\\n    \\\"reshape\\\",\\n    \\\"rrspacing\\\",\\n    \\\"scale\\\",\\n    \\\"scan\\\",\\n    \\\"selected_int_kind\\\",\\n    \\\"selected_real_kind\\\",\\n    \\\"set_exponent\\\",\\n    \\\"shape\\\",\\n    \\\"size\\\",\\n    \\\"spacing\\\",\\n    \\\"spread\\\",\\n    \\\"sum\\\",\\n    \\\"system_clock\\\",\\n    \\\"tiny\\\",\\n    \\\"transpose\\\",\\n    \\\"trim\\\",\\n    \\\"ubound\\\",\\n    \\\"unpack\\\",\\n    \\\"verify\\\",\\n    \\\"achar\\\",\\n    \\\"iachar\\\",\\n    \\\"transfer\\\",\\n    \\\"dble\\\",\\n    \\\"entry\\\",\\n    \\\"dprod\\\",\\n    \\\"cpu_time\\\",\\n    \\\"command_argument_count\\\",\\n    \\\"get_command\\\",\\n    \\\"get_command_argument\\\",\\n    \\\"get_environment_variable\\\",\\n    \\\"is_iostat_end\\\",\\n    \\\"ieee_arithmetic\\\",\\n    \\\"ieee_support_underflow_control\\\",\\n    \\\"ieee_get_underflow_mode\\\",\\n    \\\"ieee_set_underflow_mode\\\",\\n    \\\"is_iostat_eor\\\",\\n    \\\"move_alloc\\\",\\n    \\\"new_line\\\",\\n    \\\"selected_char_kind\\\",\\n    \\\"same_type_as\\\",\\n    \\\"extends_type_of\\\",\\n    \\\"acosh\\\",\\n    \\\"asinh\\\",\\n    \\\"atanh\\\",\\n    \\\"bessel_j0\\\",\\n    \\\"bessel_j1\\\",\\n    \\\"bessel_jn\\\",\\n    \\\"bessel_y0\\\",\\n    \\\"bessel_y1\\\",\\n    \\\"bessel_yn\\\",\\n    \\\"erf\\\",\\n    \\\"erfc\\\",\\n    \\\"erfc_scaled\\\",\\n    \\\"gamma\\\",\\n    \\\"log_gamma\\\",\\n    \\\"hypot\\\",\\n    \\\"norm2\\\",\\n    \\\"atomic_define\\\",\\n    \\\"atomic_ref\\\",\\n    \\\"execute_command_line\\\",\\n    \\\"leadz\\\",\\n    \\\"trailz\\\",\\n    \\\"storage_size\\\",\\n    \\\"merge_bits\\\",\\n    \\\"bge\\\",\\n    \\\"bgt\\\",\\n    \\\"ble\\\",\\n    \\\"blt\\\",\\n    \\\"dshiftl\\\",\\n    \\\"dshiftr\\\",\\n    \\\"findloc\\\",\\n    \\\"iall\\\",\\n    \\\"iany\\\",\\n    \\\"iparity\\\",\\n    \\\"image_index\\\",\\n    \\\"lcobound\\\",\\n    \\\"ucobound\\\",\\n    \\\"maskl\\\",\\n    \\\"maskr\\\",\\n    \\\"num_images\\\",\\n    \\\"parity\\\",\\n    \\\"popcnt\\\",\\n    \\\"poppar\\\",\\n    \\\"shifta\\\",\\n    \\\"shiftl\\\",\\n    \\\"shiftr\\\",\\n    \\\"this_image\\\",\\n    \\\"sync\\\",\\n    \\\"change\\\",\\n    \\\"team\\\",\\n    \\\"co_broadcast\\\",\\n    \\\"co_max\\\",\\n    \\\"co_min\\\",\\n    \\\"co_sum\\\",\\n    \\\"co_reduce\\\"\\n  ];\\n  return {\\n    name: 'Fortran',\\n    case_insensitive: true,\\n    aliases: [\\n      'f90',\\n      'f95'\\n    ],\\n    keywords: {\\n      keyword: KEYWORDS,\\n      literal: LITERALS,\\n      built_in: BUILT_INS\\n    },\\n    illegal: /\\\\/\\\\*/,\\n    contains: [\\n      STRING,\\n      FUNCTION_DEF,\\n      // allow `C = value` for assignments so they aren't misdetected\\n      // as Fortran 77 style comments\\n      {\\n        begin: /^C\\\\s*=(?!=)/,\\n        relevance: 0\\n      },\\n      COMMENT,\\n      NUMBER\\n    ]\\n  };\\n}\\n\\nmodule.exports = fortran;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvZm9ydHJhbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy9mb3J0cmFuLmpzPzQ4NWYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkxhbmd1YWdlOiBGb3J0cmFuXG5BdXRob3I6IEFudGhvbnkgU2NlbWFtYSA8c2NlbWFtYUBpcnNhbWMudXBzLXRsc2UuZnI+XG5XZWJzaXRlOiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Gb3J0cmFuXG5DYXRlZ29yeTogc2NpZW50aWZpY1xuKi9cblxuLyoqIEB0eXBlIExhbmd1YWdlRm4gKi9cbmZ1bmN0aW9uIGZvcnRyYW4oaGxqcykge1xuICBjb25zdCByZWdleCA9IGhsanMucmVnZXg7XG4gIGNvbnN0IFBBUkFNUyA9IHtcbiAgICBjbGFzc05hbWU6ICdwYXJhbXMnLFxuICAgIGJlZ2luOiAnXFxcXCgnLFxuICAgIGVuZDogJ1xcXFwpJ1xuICB9O1xuXG4gIGNvbnN0IENPTU1FTlQgPSB7XG4gICAgdmFyaWFudHM6IFtcbiAgICAgIGhsanMuQ09NTUVOVCgnIScsICckJywge1xuICAgICAgICByZWxldmFuY2U6IDBcbiAgICAgIH0pLFxuICAgICAgLy8gYWxsb3cgRk9SVFJBTiA3NyBzdHlsZSBjb21tZW50c1xuICAgICAgaGxqcy5DT01NRU5UKCdeQ1sgXScsICckJywge1xuICAgICAgICByZWxldmFuY2U6IDBcbiAgICAgIH0pLFxuICAgICAgaGxqcy5DT01NRU5UKCdeQyQnLCAnJCcsIHtcbiAgICAgICAgcmVsZXZhbmNlOiAwXG4gICAgICB9KVxuICAgIF1cbiAgfTtcblxuICAvLyByZWdleCBpbiBib3RoIGZvcnRyYW4gYW5kIGlycGY5MCBzaG91bGQgbWF0Y2hcbiAgY29uc3QgT1BUSU9OQUxfTlVNQkVSX1NVRkZJWCA9IC8oX1thLXpfXFxkXSspPy87XG4gIGNvbnN0IE9QVElPTkFMX05VTUJFUl9FWFAgPSAvKFtkZV1bKy1dP1xcZCspPy87XG4gIGNvbnN0IE5VTUJFUiA9IHtcbiAgICBjbGFzc05hbWU6ICdudW1iZXInLFxuICAgIHZhcmlhbnRzOiBbXG4gICAgICB7XG4gICAgICAgIGJlZ2luOiByZWdleC5jb25jYXQoL1xcYlxcZCsvLCAvXFwuKFxcZCopLywgT1BUSU9OQUxfTlVNQkVSX0VYUCwgT1BUSU9OQUxfTlVNQkVSX1NVRkZJWClcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGJlZ2luOiByZWdleC5jb25jYXQoL1xcYlxcZCsvLCBPUFRJT05BTF9OVU1CRVJfRVhQLCBPUFRJT05BTF9OVU1CRVJfU1VGRklYKVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgYmVnaW46IHJlZ2V4LmNvbmNhdCgvXFwuXFxkKy8sIE9QVElPTkFMX05VTUJFUl9FWFAsIE9QVElPTkFMX05VTUJFUl9TVUZGSVgpXG4gICAgICB9XG4gICAgXSxcbiAgICByZWxldmFuY2U6IDBcbiAgfTtcblxuICBjb25zdCBGVU5DVElPTl9ERUYgPSB7XG4gICAgY2xhc3NOYW1lOiAnZnVuY3Rpb24nLFxuICAgIGJlZ2luS2V5d29yZHM6ICdzdWJyb3V0aW5lIGZ1bmN0aW9uIHByb2dyYW0nLFxuICAgIGlsbGVnYWw6ICdbJHs9XFxcXG5dJyxcbiAgICBjb250YWluczogW1xuICAgICAgaGxqcy5VTkRFUlNDT1JFX1RJVExFX01PREUsXG4gICAgICBQQVJBTVNcbiAgICBdXG4gIH07XG5cbiAgY29uc3QgU1RSSU5HID0ge1xuICAgIGNsYXNzTmFtZTogJ3N0cmluZycsXG4gICAgcmVsZXZhbmNlOiAwLFxuICAgIHZhcmlhbnRzOiBbXG4gICAgICBobGpzLkFQT1NfU1RSSU5HX01PREUsXG4gICAgICBobGpzLlFVT1RFX1NUUklOR19NT0RFXG4gICAgXVxuICB9O1xuXG4gIGNvbnN0IEtFWVdPUkRTID0gW1xuICAgIFwia2luZFwiLFxuICAgIFwiZG9cIixcbiAgICBcImNvbmN1cnJlbnRcIixcbiAgICBcImxvY2FsXCIsXG4gICAgXCJzaGFyZWRcIixcbiAgICBcIndoaWxlXCIsXG4gICAgXCJwcml2YXRlXCIsXG4gICAgXCJjYWxsXCIsXG4gICAgXCJpbnRyaW5zaWNcIixcbiAgICBcIndoZXJlXCIsXG4gICAgXCJlbHNld2hlcmVcIixcbiAgICBcInR5cGVcIixcbiAgICBcImVuZHR5cGVcIixcbiAgICBcImVuZG1vZHVsZVwiLFxuICAgIFwiZW5kc2VsZWN0XCIsXG4gICAgXCJlbmRpbnRlcmZhY2VcIixcbiAgICBcImVuZFwiLFxuICAgIFwiZW5kZG9cIixcbiAgICBcImVuZGlmXCIsXG4gICAgXCJpZlwiLFxuICAgIFwiZm9yYWxsXCIsXG4gICAgXCJlbmRmb3JhbGxcIixcbiAgICBcIm9ubHlcIixcbiAgICBcImNvbnRhaW5zXCIsXG4gICAgXCJkZWZhdWx0XCIsXG4gICAgXCJyZXR1cm5cIixcbiAgICBcInN0b3BcIixcbiAgICBcInRoZW5cIixcbiAgICBcImJsb2NrXCIsXG4gICAgXCJlbmRibG9ja1wiLFxuICAgIFwiZW5kYXNzb2NpYXRlXCIsXG4gICAgXCJwdWJsaWNcIixcbiAgICBcInN1YnJvdXRpbmV8MTBcIixcbiAgICBcImZ1bmN0aW9uXCIsXG4gICAgXCJwcm9ncmFtXCIsXG4gICAgXCIuYW5kLlwiLFxuICAgIFwiLm9yLlwiLFxuICAgIFwiLm5vdC5cIixcbiAgICBcIi5sZS5cIixcbiAgICBcIi5lcS5cIixcbiAgICBcIi5nZS5cIixcbiAgICBcIi5ndC5cIixcbiAgICBcIi5sdC5cIixcbiAgICBcImdvdG9cIixcbiAgICBcInNhdmVcIixcbiAgICBcImVsc2VcIixcbiAgICBcInVzZVwiLFxuICAgIFwibW9kdWxlXCIsXG4gICAgXCJzZWxlY3RcIixcbiAgICBcImNhc2VcIixcbiAgICBcImFjY2Vzc1wiLFxuICAgIFwiYmxhbmtcIixcbiAgICBcImRpcmVjdFwiLFxuICAgIFwiZXhpc3RcIixcbiAgICBcImZpbGVcIixcbiAgICBcImZtdFwiLFxuICAgIFwiZm9ybVwiLFxuICAgIFwiZm9ybWF0dGVkXCIsXG4gICAgXCJpb3N0YXRcIixcbiAgICBcIm5hbWVcIixcbiAgICBcIm5hbWVkXCIsXG4gICAgXCJuZXh0cmVjXCIsXG4gICAgXCJudW1iZXJcIixcbiAgICBcIm9wZW5lZFwiLFxuICAgIFwicmVjXCIsXG4gICAgXCJyZWNsXCIsXG4gICAgXCJzZXF1ZW50aWFsXCIsXG4gICAgXCJzdGF0dXNcIixcbiAgICBcInVuZm9ybWF0dGVkXCIsXG4gICAgXCJ1bml0XCIsXG4gICAgXCJjb250aW51ZVwiLFxuICAgIFwiZm9ybWF0XCIsXG4gICAgXCJwYXVzZVwiLFxuICAgIFwiY3ljbGVcIixcbiAgICBcImV4aXRcIixcbiAgICBcImNfbnVsbF9jaGFyXCIsXG4gICAgXCJjX2FsZXJ0XCIsXG4gICAgXCJjX2JhY2tzcGFjZVwiLFxuICAgIFwiY19mb3JtX2ZlZWRcIixcbiAgICBcImZsdXNoXCIsXG4gICAgXCJ3YWl0XCIsXG4gICAgXCJkZWNpbWFsXCIsXG4gICAgXCJyb3VuZFwiLFxuICAgIFwiaW9tc2dcIixcbiAgICBcInN5bmNocm9ub3VzXCIsXG4gICAgXCJub3Bhc3NcIixcbiAgICBcIm5vbl9vdmVycmlkYWJsZVwiLFxuICAgIFwicGFzc1wiLFxuICAgIFwicHJvdGVjdGVkXCIsXG4gICAgXCJ2b2xhdGlsZVwiLFxuICAgIFwiYWJzdHJhY3RcIixcbiAgICBcImV4dGVuZHNcIixcbiAgICBcImltcG9ydFwiLFxuICAgIFwibm9uX2ludHJpbnNpY1wiLFxuICAgIFwidmFsdWVcIixcbiAgICBcImRlZmVycmVkXCIsXG4gICAgXCJnZW5lcmljXCIsXG4gICAgXCJmaW5hbFwiLFxuICAgIFwiZW51bWVyYXRvclwiLFxuICAgIFwiY2xhc3NcIixcbiAgICBcImFzc29jaWF0ZVwiLFxuICAgIFwiYmluZFwiLFxuICAgIFwiZW51bVwiLFxuICAgIFwiY19pbnRcIixcbiAgICBcImNfc2hvcnRcIixcbiAgICBcImNfbG9uZ1wiLFxuICAgIFwiY19sb25nX2xvbmdcIixcbiAgICBcImNfc2lnbmVkX2NoYXJcIixcbiAgICBcImNfc2l6ZV90XCIsXG4gICAgXCJjX2ludDhfdFwiLFxuICAgIFwiY19pbnQxNl90XCIsXG4gICAgXCJjX2ludDMyX3RcIixcbiAgICBcImNfaW50NjRfdFwiLFxuICAgIFwiY19pbnRfbGVhc3Q4X3RcIixcbiAgICBcImNfaW50X2xlYXN0MTZfdFwiLFxuICAgIFwiY19pbnRfbGVhc3QzMl90XCIsXG4gICAgXCJjX2ludF9sZWFzdDY0X3RcIixcbiAgICBcImNfaW50X2Zhc3Q4X3RcIixcbiAgICBcImNfaW50X2Zhc3QxNl90XCIsXG4gICAgXCJjX2ludF9mYXN0MzJfdFwiLFxuICAgIFwiY19pbnRfZmFzdDY0X3RcIixcbiAgICBcImNfaW50bWF4X3RcIixcbiAgICBcIkNfaW50cHRyX3RcIixcbiAgICBcImNfZmxvYXRcIixcbiAgICBcImNfZG91YmxlXCIsXG4gICAgXCJjX2xvbmdfZG91YmxlXCIsXG4gICAgXCJjX2Zsb2F0X2NvbXBsZXhcIixcbiAgICBcImNfZG91YmxlX2NvbXBsZXhcIixcbiAgICBcImNfbG9uZ19kb3VibGVfY29tcGxleFwiLFxuICAgIFwiY19ib29sXCIsXG4gICAgXCJjX2NoYXJcIixcbiAgICBcImNfbnVsbF9wdHJcIixcbiAgICBcImNfbnVsbF9mdW5wdHJcIixcbiAgICBcImNfbmV3X2xpbmVcIixcbiAgICBcImNfY2FycmlhZ2VfcmV0dXJuXCIsXG4gICAgXCJjX2hvcml6b250YWxfdGFiXCIsXG4gICAgXCJjX3ZlcnRpY2FsX3RhYlwiLFxuICAgIFwiaXNvX2NfYmluZGluZ1wiLFxuICAgIFwiY19sb2NcIixcbiAgICBcImNfZnVubG9jXCIsXG4gICAgXCJjX2Fzc29jaWF0ZWRcIixcbiAgICBcImNfZl9wb2ludGVyXCIsXG4gICAgXCJjX3B0clwiLFxuICAgIFwiY19mdW5wdHJcIixcbiAgICBcImlzb19mb3J0cmFuX2VudlwiLFxuICAgIFwiY2hhcmFjdGVyX3N0b3JhZ2Vfc2l6ZVwiLFxuICAgIFwiZXJyb3JfdW5pdFwiLFxuICAgIFwiZmlsZV9zdG9yYWdlX3NpemVcIixcbiAgICBcImlucHV0X3VuaXRcIixcbiAgICBcImlvc3RhdF9lbmRcIixcbiAgICBcImlvc3RhdF9lb3JcIixcbiAgICBcIm51bWVyaWNfc3RvcmFnZV9zaXplXCIsXG4gICAgXCJvdXRwdXRfdW5pdFwiLFxuICAgIFwiY19mX3Byb2Nwb2ludGVyXCIsXG4gICAgXCJpZWVlX2FyaXRobWV0aWNcIixcbiAgICBcImllZWVfc3VwcG9ydF91bmRlcmZsb3dfY29udHJvbFwiLFxuICAgIFwiaWVlZV9nZXRfdW5kZXJmbG93X21vZGVcIixcbiAgICBcImllZWVfc2V0X3VuZGVyZmxvd19tb2RlXCIsXG4gICAgXCJuZXd1bml0XCIsXG4gICAgXCJjb250aWd1b3VzXCIsXG4gICAgXCJyZWN1cnNpdmVcIixcbiAgICBcInBhZFwiLFxuICAgIFwicG9zaXRpb25cIixcbiAgICBcImFjdGlvblwiLFxuICAgIFwiZGVsaW1cIixcbiAgICBcInJlYWR3cml0ZVwiLFxuICAgIFwiZW9yXCIsXG4gICAgXCJhZHZhbmNlXCIsXG4gICAgXCJubWxcIixcbiAgICBcImludGVyZmFjZVwiLFxuICAgIFwicHJvY2VkdXJlXCIsXG4gICAgXCJuYW1lbGlzdFwiLFxuICAgIFwiaW5jbHVkZVwiLFxuICAgIFwic2VxdWVuY2VcIixcbiAgICBcImVsZW1lbnRhbFwiLFxuICAgIFwicHVyZVwiLFxuICAgIFwiaW1wdXJlXCIsXG4gICAgXCJpbnRlZ2VyXCIsXG4gICAgXCJyZWFsXCIsXG4gICAgXCJjaGFyYWN0ZXJcIixcbiAgICBcImNvbXBsZXhcIixcbiAgICBcImxvZ2ljYWxcIixcbiAgICBcImNvZGltZW5zaW9uXCIsXG4gICAgXCJkaW1lbnNpb25cIixcbiAgICBcImFsbG9jYXRhYmxlfDEwXCIsXG4gICAgXCJwYXJhbWV0ZXJcIixcbiAgICBcImV4dGVybmFsXCIsXG4gICAgXCJpbXBsaWNpdHwxMFwiLFxuICAgIFwibm9uZVwiLFxuICAgIFwiZG91YmxlXCIsXG4gICAgXCJwcmVjaXNpb25cIixcbiAgICBcImFzc2lnblwiLFxuICAgIFwiaW50ZW50XCIsXG4gICAgXCJvcHRpb25hbFwiLFxuICAgIFwicG9pbnRlclwiLFxuICAgIFwidGFyZ2V0XCIsXG4gICAgXCJpblwiLFxuICAgIFwib3V0XCIsXG4gICAgXCJjb21tb25cIixcbiAgICBcImVxdWl2YWxlbmNlXCIsXG4gICAgXCJkYXRhXCJcbiAgXTtcbiAgY29uc3QgTElURVJBTFMgPSBbXG4gICAgXCIuRmFsc2UuXCIsXG4gICAgXCIuVHJ1ZS5cIlxuICBdO1xuICBjb25zdCBCVUlMVF9JTlMgPSBbXG4gICAgXCJhbG9nXCIsXG4gICAgXCJhbG9nMTBcIixcbiAgICBcImFtYXgwXCIsXG4gICAgXCJhbWF4MVwiLFxuICAgIFwiYW1pbjBcIixcbiAgICBcImFtaW4xXCIsXG4gICAgXCJhbW9kXCIsXG4gICAgXCJjYWJzXCIsXG4gICAgXCJjY29zXCIsXG4gICAgXCJjZXhwXCIsXG4gICAgXCJjbG9nXCIsXG4gICAgXCJjc2luXCIsXG4gICAgXCJjc3FydFwiLFxuICAgIFwiZGFic1wiLFxuICAgIFwiZGFjb3NcIixcbiAgICBcImRhc2luXCIsXG4gICAgXCJkYXRhblwiLFxuICAgIFwiZGF0YW4yXCIsXG4gICAgXCJkY29zXCIsXG4gICAgXCJkY29zaFwiLFxuICAgIFwiZGRpbVwiLFxuICAgIFwiZGV4cFwiLFxuICAgIFwiZGludFwiLFxuICAgIFwiZGxvZ1wiLFxuICAgIFwiZGxvZzEwXCIsXG4gICAgXCJkbWF4MVwiLFxuICAgIFwiZG1pbjFcIixcbiAgICBcImRtb2RcIixcbiAgICBcImRuaW50XCIsXG4gICAgXCJkc2lnblwiLFxuICAgIFwiZHNpblwiLFxuICAgIFwiZHNpbmhcIixcbiAgICBcImRzcXJ0XCIsXG4gICAgXCJkdGFuXCIsXG4gICAgXCJkdGFuaFwiLFxuICAgIFwiZmxvYXRcIixcbiAgICBcImlhYnNcIixcbiAgICBcImlkaW1cIixcbiAgICBcImlkaW50XCIsXG4gICAgXCJpZG5pbnRcIixcbiAgICBcImlmaXhcIixcbiAgICBcImlzaWduXCIsXG4gICAgXCJtYXgwXCIsXG4gICAgXCJtYXgxXCIsXG4gICAgXCJtaW4wXCIsXG4gICAgXCJtaW4xXCIsXG4gICAgXCJzbmdsXCIsXG4gICAgXCJhbGdhbWFcIixcbiAgICBcImNkYWJzXCIsXG4gICAgXCJjZGNvc1wiLFxuICAgIFwiY2RleHBcIixcbiAgICBcImNkbG9nXCIsXG4gICAgXCJjZHNpblwiLFxuICAgIFwiY2RzcXJ0XCIsXG4gICAgXCJjcWFic1wiLFxuICAgIFwiY3Fjb3NcIixcbiAgICBcImNxZXhwXCIsXG4gICAgXCJjcWxvZ1wiLFxuICAgIFwiY3FzaW5cIixcbiAgICBcImNxc3FydFwiLFxuICAgIFwiZGNtcGx4XCIsXG4gICAgXCJkY29uamdcIixcbiAgICBcImRlcmZcIixcbiAgICBcImRlcmZjXCIsXG4gICAgXCJkZmxvYXRcIixcbiAgICBcImRnYW1tYVwiLFxuICAgIFwiZGltYWdcIixcbiAgICBcImRsZ2FtYVwiLFxuICAgIFwiaXFpbnRcIixcbiAgICBcInFhYnNcIixcbiAgICBcInFhY29zXCIsXG4gICAgXCJxYXNpblwiLFxuICAgIFwicWF0YW5cIixcbiAgICBcInFhdGFuMlwiLFxuICAgIFwicWNtcGx4XCIsXG4gICAgXCJxY29uamdcIixcbiAgICBcInFjb3NcIixcbiAgICBcInFjb3NoXCIsXG4gICAgXCJxZGltXCIsXG4gICAgXCJxZXJmXCIsXG4gICAgXCJxZXJmY1wiLFxuICAgIFwicWV4cFwiLFxuICAgIFwicWdhbW1hXCIsXG4gICAgXCJxaW1hZ1wiLFxuICAgIFwicWxnYW1hXCIsXG4gICAgXCJxbG9nXCIsXG4gICAgXCJxbG9nMTBcIixcbiAgICBcInFtYXgxXCIsXG4gICAgXCJxbWluMVwiLFxuICAgIFwicW1vZFwiLFxuICAgIFwicW5pbnRcIixcbiAgICBcInFzaWduXCIsXG4gICAgXCJxc2luXCIsXG4gICAgXCJxc2luaFwiLFxuICAgIFwicXNxcnRcIixcbiAgICBcInF0YW5cIixcbiAgICBcInF0YW5oXCIsXG4gICAgXCJhYnNcIixcbiAgICBcImFjb3NcIixcbiAgICBcImFpbWFnXCIsXG4gICAgXCJhaW50XCIsXG4gICAgXCJhbmludFwiLFxuICAgIFwiYXNpblwiLFxuICAgIFwiYXRhblwiLFxuICAgIFwiYXRhbjJcIixcbiAgICBcImNoYXJcIixcbiAgICBcImNtcGx4XCIsXG4gICAgXCJjb25qZ1wiLFxuICAgIFwiY29zXCIsXG4gICAgXCJjb3NoXCIsXG4gICAgXCJleHBcIixcbiAgICBcImljaGFyXCIsXG4gICAgXCJpbmRleFwiLFxuICAgIFwiaW50XCIsXG4gICAgXCJsb2dcIixcbiAgICBcImxvZzEwXCIsXG4gICAgXCJtYXhcIixcbiAgICBcIm1pblwiLFxuICAgIFwibmludFwiLFxuICAgIFwic2lnblwiLFxuICAgIFwic2luXCIsXG4gICAgXCJzaW5oXCIsXG4gICAgXCJzcXJ0XCIsXG4gICAgXCJ0YW5cIixcbiAgICBcInRhbmhcIixcbiAgICBcInByaW50XCIsXG4gICAgXCJ3cml0ZVwiLFxuICAgIFwiZGltXCIsXG4gICAgXCJsZ2VcIixcbiAgICBcImxndFwiLFxuICAgIFwibGxlXCIsXG4gICAgXCJsbHRcIixcbiAgICBcIm1vZFwiLFxuICAgIFwibnVsbGlmeVwiLFxuICAgIFwiYWxsb2NhdGVcIixcbiAgICBcImRlYWxsb2NhdGVcIixcbiAgICBcImFkanVzdGxcIixcbiAgICBcImFkanVzdHJcIixcbiAgICBcImFsbFwiLFxuICAgIFwiYWxsb2NhdGVkXCIsXG4gICAgXCJhbnlcIixcbiAgICBcImFzc29jaWF0ZWRcIixcbiAgICBcImJpdF9zaXplXCIsXG4gICAgXCJidGVzdFwiLFxuICAgIFwiY2VpbGluZ1wiLFxuICAgIFwiY291bnRcIixcbiAgICBcImNzaGlmdFwiLFxuICAgIFwiZGF0ZV9hbmRfdGltZVwiLFxuICAgIFwiZGlnaXRzXCIsXG4gICAgXCJkb3RfcHJvZHVjdFwiLFxuICAgIFwiZW9zaGlmdFwiLFxuICAgIFwiZXBzaWxvblwiLFxuICAgIFwiZXhwb25lbnRcIixcbiAgICBcImZsb29yXCIsXG4gICAgXCJmcmFjdGlvblwiLFxuICAgIFwiaHVnZVwiLFxuICAgIFwiaWFuZFwiLFxuICAgIFwiaWJjbHJcIixcbiAgICBcImliaXRzXCIsXG4gICAgXCJpYnNldFwiLFxuICAgIFwiaWVvclwiLFxuICAgIFwiaW9yXCIsXG4gICAgXCJpc2hmdFwiLFxuICAgIFwiaXNoZnRjXCIsXG4gICAgXCJsYm91bmRcIixcbiAgICBcImxlbl90cmltXCIsXG4gICAgXCJtYXRtdWxcIixcbiAgICBcIm1heGV4cG9uZW50XCIsXG4gICAgXCJtYXhsb2NcIixcbiAgICBcIm1heHZhbFwiLFxuICAgIFwibWVyZ2VcIixcbiAgICBcIm1pbmV4cG9uZW50XCIsXG4gICAgXCJtaW5sb2NcIixcbiAgICBcIm1pbnZhbFwiLFxuICAgIFwibW9kdWxvXCIsXG4gICAgXCJtdmJpdHNcIixcbiAgICBcIm5lYXJlc3RcIixcbiAgICBcInBhY2tcIixcbiAgICBcInByZXNlbnRcIixcbiAgICBcInByb2R1Y3RcIixcbiAgICBcInJhZGl4XCIsXG4gICAgXCJyYW5kb21fbnVtYmVyXCIsXG4gICAgXCJyYW5kb21fc2VlZFwiLFxuICAgIFwicmFuZ2VcIixcbiAgICBcInJlcGVhdFwiLFxuICAgIFwicmVzaGFwZVwiLFxuICAgIFwicnJzcGFjaW5nXCIsXG4gICAgXCJzY2FsZVwiLFxuICAgIFwic2NhblwiLFxuICAgIFwic2VsZWN0ZWRfaW50X2tpbmRcIixcbiAgICBcInNlbGVjdGVkX3JlYWxfa2luZFwiLFxuICAgIFwic2V0X2V4cG9uZW50XCIsXG4gICAgXCJzaGFwZVwiLFxuICAgIFwic2l6ZVwiLFxuICAgIFwic3BhY2luZ1wiLFxuICAgIFwic3ByZWFkXCIsXG4gICAgXCJzdW1cIixcbiAgICBcInN5c3RlbV9jbG9ja1wiLFxuICAgIFwidGlueVwiLFxuICAgIFwidHJhbnNwb3NlXCIsXG4gICAgXCJ0cmltXCIsXG4gICAgXCJ1Ym91bmRcIixcbiAgICBcInVucGFja1wiLFxuICAgIFwidmVyaWZ5XCIsXG4gICAgXCJhY2hhclwiLFxuICAgIFwiaWFjaGFyXCIsXG4gICAgXCJ0cmFuc2ZlclwiLFxuICAgIFwiZGJsZVwiLFxuICAgIFwiZW50cnlcIixcbiAgICBcImRwcm9kXCIsXG4gICAgXCJjcHVfdGltZVwiLFxuICAgIFwiY29tbWFuZF9hcmd1bWVudF9jb3VudFwiLFxuICAgIFwiZ2V0X2NvbW1hbmRcIixcbiAgICBcImdldF9jb21tYW5kX2FyZ3VtZW50XCIsXG4gICAgXCJnZXRfZW52aXJvbm1lbnRfdmFyaWFibGVcIixcbiAgICBcImlzX2lvc3RhdF9lbmRcIixcbiAgICBcImllZWVfYXJpdGhtZXRpY1wiLFxuICAgIFwiaWVlZV9zdXBwb3J0X3VuZGVyZmxvd19jb250cm9sXCIsXG4gICAgXCJpZWVlX2dldF91bmRlcmZsb3dfbW9kZVwiLFxuICAgIFwiaWVlZV9zZXRfdW5kZXJmbG93X21vZGVcIixcbiAgICBcImlzX2lvc3RhdF9lb3JcIixcbiAgICBcIm1vdmVfYWxsb2NcIixcbiAgICBcIm5ld19saW5lXCIsXG4gICAgXCJzZWxlY3RlZF9jaGFyX2tpbmRcIixcbiAgICBcInNhbWVfdHlwZV9hc1wiLFxuICAgIFwiZXh0ZW5kc190eXBlX29mXCIsXG4gICAgXCJhY29zaFwiLFxuICAgIFwiYXNpbmhcIixcbiAgICBcImF0YW5oXCIsXG4gICAgXCJiZXNzZWxfajBcIixcbiAgICBcImJlc3NlbF9qMVwiLFxuICAgIFwiYmVzc2VsX2puXCIsXG4gICAgXCJiZXNzZWxfeTBcIixcbiAgICBcImJlc3NlbF95MVwiLFxuICAgIFwiYmVzc2VsX3luXCIsXG4gICAgXCJlcmZcIixcbiAgICBcImVyZmNcIixcbiAgICBcImVyZmNfc2NhbGVkXCIsXG4gICAgXCJnYW1tYVwiLFxuICAgIFwibG9nX2dhbW1hXCIsXG4gICAgXCJoeXBvdFwiLFxuICAgIFwibm9ybTJcIixcbiAgICBcImF0b21pY19kZWZpbmVcIixcbiAgICBcImF0b21pY19yZWZcIixcbiAgICBcImV4ZWN1dGVfY29tbWFuZF9saW5lXCIsXG4gICAgXCJsZWFkelwiLFxuICAgIFwidHJhaWx6XCIsXG4gICAgXCJzdG9yYWdlX3NpemVcIixcbiAgICBcIm1lcmdlX2JpdHNcIixcbiAgICBcImJnZVwiLFxuICAgIFwiYmd0XCIsXG4gICAgXCJibGVcIixcbiAgICBcImJsdFwiLFxuICAgIFwiZHNoaWZ0bFwiLFxuICAgIFwiZHNoaWZ0clwiLFxuICAgIFwiZmluZGxvY1wiLFxuICAgIFwiaWFsbFwiLFxuICAgIFwiaWFueVwiLFxuICAgIFwiaXBhcml0eVwiLFxuICAgIFwiaW1hZ2VfaW5kZXhcIixcbiAgICBcImxjb2JvdW5kXCIsXG4gICAgXCJ1Y29ib3VuZFwiLFxuICAgIFwibWFza2xcIixcbiAgICBcIm1hc2tyXCIsXG4gICAgXCJudW1faW1hZ2VzXCIsXG4gICAgXCJwYXJpdHlcIixcbiAgICBcInBvcGNudFwiLFxuICAgIFwicG9wcGFyXCIsXG4gICAgXCJzaGlmdGFcIixcbiAgICBcInNoaWZ0bFwiLFxuICAgIFwic2hpZnRyXCIsXG4gICAgXCJ0aGlzX2ltYWdlXCIsXG4gICAgXCJzeW5jXCIsXG4gICAgXCJjaGFuZ2VcIixcbiAgICBcInRlYW1cIixcbiAgICBcImNvX2Jyb2FkY2FzdFwiLFxuICAgIFwiY29fbWF4XCIsXG4gICAgXCJjb19taW5cIixcbiAgICBcImNvX3N1bVwiLFxuICAgIFwiY29fcmVkdWNlXCJcbiAgXTtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnRm9ydHJhbicsXG4gICAgY2FzZV9pbnNlbnNpdGl2ZTogdHJ1ZSxcbiAgICBhbGlhc2VzOiBbXG4gICAgICAnZjkwJyxcbiAgICAgICdmOTUnXG4gICAgXSxcbiAgICBrZXl3b3Jkczoge1xuICAgICAga2V5d29yZDogS0VZV09SRFMsXG4gICAgICBsaXRlcmFsOiBMSVRFUkFMUyxcbiAgICAgIGJ1aWx0X2luOiBCVUlMVF9JTlNcbiAgICB9LFxuICAgIGlsbGVnYWw6IC9cXC9cXCovLFxuICAgIGNvbnRhaW5zOiBbXG4gICAgICBTVFJJTkcsXG4gICAgICBGVU5DVElPTl9ERUYsXG4gICAgICAvLyBhbGxvdyBgQyA9IHZhbHVlYCBmb3IgYXNzaWdubWVudHMgc28gdGhleSBhcmVuJ3QgbWlzZGV0ZWN0ZWRcbiAgICAgIC8vIGFzIEZvcnRyYW4gNzcgc3R5bGUgY29tbWVudHNcbiAgICAgIHtcbiAgICAgICAgYmVnaW46IC9eQ1xccyo9KD8hPSkvLFxuICAgICAgICByZWxldmFuY2U6IDBcbiAgICAgIH0sXG4gICAgICBDT01NRU5ULFxuICAgICAgTlVNQkVSXG4gICAgXVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZvcnRyYW47XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/fortran.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/fsharp.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/fsharp.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/**\\n * @param {string} value\\n * @returns {RegExp}\\n * */\\n\\n/**\\n * @param {RegExp | string } re\\n * @returns {string}\\n */\\nfunction source(re) {\\n  if (!re) return null;\\n  if (typeof re === \\\"string\\\") return re;\\n\\n  return re.source;\\n}\\n\\n/**\\n * @param {RegExp | string } re\\n * @returns {string}\\n */\\nfunction lookahead(re) {\\n  return concat('(?=', re, ')');\\n}\\n\\n/**\\n * @param {...(RegExp | string) } args\\n * @returns {string}\\n */\\nfunction concat(...args) {\\n  const joined = args.map((x) => source(x)).join(\\\"\\\");\\n  return joined;\\n}\\n\\n/**\\n * @param { Array<string | RegExp | Object> } args\\n * @returns {object}\\n */\\nfunction stripOptionsFromArgs(args) {\\n  const opts = args[args.length - 1];\\n\\n  if (typeof opts === 'object' && opts.constructor === Object) {\\n    args.splice(args.length - 1, 1);\\n    return opts;\\n  } else {\\n    return {};\\n  }\\n}\\n\\n/**\\n * Any of the passed expresssions may match\\n *\\n * Creates a huge this | this | that | that match\\n * @param {(RegExp | string)[] } args\\n * @returns {string}\\n */\\nfunction either(...args) {\\n  /** @type { object & {capture?: boolean} }  */\\n  const opts = stripOptionsFromArgs(args);\\n  const joined = '('\\n    + (opts.capture ? \\\"\\\" : \\\"?:\\\")\\n    + args.map((x) => source(x)).join(\\\"|\\\") + \\\")\\\";\\n  return joined;\\n}\\n\\n/*\\nLanguage: F#\\nAuthor: Jonas Follesø <jonas@follesoe.no>\\nContributors: Troy Kershaw <hello@troykershaw.com>, Henrik Feldt <henrik@haf.se>, Melvyn Laïly <melvyn.laily@gmail.com>\\nWebsite: https://docs.microsoft.com/en-us/dotnet/fsharp/\\nCategory: functional\\n*/\\n\\n/** @type LanguageFn */\\nfunction fsharp(hljs) {\\n  const KEYWORDS = [\\n    \\\"abstract\\\",\\n    \\\"and\\\",\\n    \\\"as\\\",\\n    \\\"assert\\\",\\n    \\\"base\\\",\\n    \\\"begin\\\",\\n    \\\"class\\\",\\n    \\\"default\\\",\\n    \\\"delegate\\\",\\n    \\\"do\\\",\\n    \\\"done\\\",\\n    \\\"downcast\\\",\\n    \\\"downto\\\",\\n    \\\"elif\\\",\\n    \\\"else\\\",\\n    \\\"end\\\",\\n    \\\"exception\\\",\\n    \\\"extern\\\",\\n    // \\\"false\\\", // literal\\n    \\\"finally\\\",\\n    \\\"fixed\\\",\\n    \\\"for\\\",\\n    \\\"fun\\\",\\n    \\\"function\\\",\\n    \\\"global\\\",\\n    \\\"if\\\",\\n    \\\"in\\\",\\n    \\\"inherit\\\",\\n    \\\"inline\\\",\\n    \\\"interface\\\",\\n    \\\"internal\\\",\\n    \\\"lazy\\\",\\n    \\\"let\\\",\\n    \\\"match\\\",\\n    \\\"member\\\",\\n    \\\"module\\\",\\n    \\\"mutable\\\",\\n    \\\"namespace\\\",\\n    \\\"new\\\",\\n    // \\\"not\\\", // built_in\\n    // \\\"null\\\", // literal\\n    \\\"of\\\",\\n    \\\"open\\\",\\n    \\\"or\\\",\\n    \\\"override\\\",\\n    \\\"private\\\",\\n    \\\"public\\\",\\n    \\\"rec\\\",\\n    \\\"return\\\",\\n    \\\"static\\\",\\n    \\\"struct\\\",\\n    \\\"then\\\",\\n    \\\"to\\\",\\n    // \\\"true\\\", // literal\\n    \\\"try\\\",\\n    \\\"type\\\",\\n    \\\"upcast\\\",\\n    \\\"use\\\",\\n    \\\"val\\\",\\n    \\\"void\\\",\\n    \\\"when\\\",\\n    \\\"while\\\",\\n    \\\"with\\\",\\n    \\\"yield\\\"\\n  ];\\n\\n  const BANG_KEYWORD_MODE = {\\n    // monad builder keywords (matches before non-bang keywords)\\n    scope: 'keyword',\\n    match: /\\\\b(yield|return|let|do|match|use)!/\\n  };\\n\\n  const PREPROCESSOR_KEYWORDS = [\\n    \\\"if\\\",\\n    \\\"else\\\",\\n    \\\"endif\\\",\\n    \\\"line\\\",\\n    \\\"nowarn\\\",\\n    \\\"light\\\",\\n    \\\"r\\\",\\n    \\\"i\\\",\\n    \\\"I\\\",\\n    \\\"load\\\",\\n    \\\"time\\\",\\n    \\\"help\\\",\\n    \\\"quit\\\"\\n  ];\\n\\n  const LITERALS = [\\n    \\\"true\\\",\\n    \\\"false\\\",\\n    \\\"null\\\",\\n    \\\"Some\\\",\\n    \\\"None\\\",\\n    \\\"Ok\\\",\\n    \\\"Error\\\",\\n    \\\"infinity\\\",\\n    \\\"infinityf\\\",\\n    \\\"nan\\\",\\n    \\\"nanf\\\"\\n  ];\\n\\n  const SPECIAL_IDENTIFIERS = [\\n    \\\"__LINE__\\\",\\n    \\\"__SOURCE_DIRECTORY__\\\",\\n    \\\"__SOURCE_FILE__\\\"\\n  ];\\n\\n  const TYPES = [\\n    // basic types\\n    \\\"bool\\\",\\n    \\\"byte\\\",\\n    \\\"sbyte\\\",\\n    \\\"int8\\\",\\n    \\\"int16\\\",\\n    \\\"int32\\\",\\n    \\\"uint8\\\",\\n    \\\"uint16\\\",\\n    \\\"uint32\\\",\\n    \\\"int\\\",\\n    \\\"uint\\\",\\n    \\\"int64\\\",\\n    \\\"uint64\\\",\\n    \\\"nativeint\\\",\\n    \\\"unativeint\\\",\\n    \\\"decimal\\\",\\n    \\\"float\\\",\\n    \\\"double\\\",\\n    \\\"float32\\\",\\n    \\\"single\\\",\\n    \\\"char\\\",\\n    \\\"string\\\",\\n    \\\"unit\\\",\\n    \\\"bigint\\\",\\n    // other native types or lowercase aliases\\n    \\\"option\\\",\\n    \\\"voption\\\",\\n    \\\"list\\\",\\n    \\\"array\\\",\\n    \\\"seq\\\",\\n    \\\"byref\\\",\\n    \\\"exn\\\",\\n    \\\"inref\\\",\\n    \\\"nativeptr\\\",\\n    \\\"obj\\\",\\n    \\\"outref\\\",\\n    \\\"voidptr\\\"\\n  ];\\n\\n  const BUILTINS = [\\n    // Somewhat arbitrary list of builtin functions and values.\\n    // Most of them are declared in Microsoft.FSharp.Core\\n    // I tried to stay relevant by adding only the most idiomatic\\n    // and most used symbols that are not already declared as types.\\n    \\\"not\\\",\\n    \\\"ref\\\",\\n    \\\"raise\\\",\\n    \\\"reraise\\\",\\n    \\\"dict\\\",\\n    \\\"readOnlyDict\\\",\\n    \\\"set\\\",\\n    \\\"enum\\\",\\n    \\\"sizeof\\\",\\n    \\\"typeof\\\",\\n    \\\"typedefof\\\",\\n    \\\"nameof\\\",\\n    \\\"nullArg\\\",\\n    \\\"invalidArg\\\",\\n    \\\"invalidOp\\\",\\n    \\\"id\\\",\\n    \\\"fst\\\",\\n    \\\"snd\\\",\\n    \\\"ignore\\\",\\n    \\\"lock\\\",\\n    \\\"using\\\",\\n    \\\"box\\\",\\n    \\\"unbox\\\",\\n    \\\"tryUnbox\\\",\\n    \\\"printf\\\",\\n    \\\"printfn\\\",\\n    \\\"sprintf\\\",\\n    \\\"eprintf\\\",\\n    \\\"eprintfn\\\",\\n    \\\"fprintf\\\",\\n    \\\"fprintfn\\\",\\n    \\\"failwith\\\",\\n    \\\"failwithf\\\"\\n  ];\\n\\n  const ALL_KEYWORDS = {\\n    type: TYPES,\\n    keyword: KEYWORDS,\\n    literal: LITERALS,\\n    built_in: BUILTINS,\\n    'variable.constant': SPECIAL_IDENTIFIERS\\n  };\\n\\n  // (* potentially multi-line Meta Language style comment *)\\n  const ML_COMMENT =\\n    hljs.COMMENT(/\\\\(\\\\*(?!\\\\))/, /\\\\*\\\\)/, {\\n      contains: [\\\"self\\\"]\\n    });\\n  // Either a multi-line (* Meta Language style comment *) or a single line // C style comment.\\n  const COMMENT = {\\n    variants: [\\n      ML_COMMENT,\\n      hljs.C_LINE_COMMENT_MODE,\\n    ]\\n  };\\n\\n  // 'a or ^a\\n  const GENERIC_TYPE_SYMBOL = {\\n    match: concat(/('|\\\\^)/, hljs.UNDERSCORE_IDENT_RE),\\n    scope: 'symbol',\\n    relevance: 0\\n  };\\n\\n  const COMPUTATION_EXPRESSION = {\\n    // computation expressions:\\n    scope: 'computation-expression',\\n    match: /\\\\b[_a-z]\\\\w*(?=\\\\s*\\\\{)/\\n  };\\n\\n  const PREPROCESSOR = {\\n    // preprocessor directives and fsi commands:\\n    begin: [\\n      /^\\\\s*/,\\n      concat(/#/, either(...PREPROCESSOR_KEYWORDS)),\\n      /\\\\b/\\n    ],\\n    beginScope: { 2: 'meta' },\\n    end: lookahead(/\\\\s|$/)\\n  };\\n\\n  // TODO: this definition is missing support for type suffixes and octal notation.\\n  // BUG: range operator without any space is wrongly interpreted as a single number (e.g. 1..10 )\\n  const NUMBER = {\\n    variants: [\\n      hljs.BINARY_NUMBER_MODE,\\n      hljs.C_NUMBER_MODE\\n    ]\\n  };\\n\\n  // All the following string definitions are potentially multi-line.\\n  // BUG: these definitions are missing support for byte strings (suffixed with B)\\n\\n  // \\\"...\\\"\\n  const QUOTED_STRING = {\\n    scope: 'string',\\n    begin: /\\\"/,\\n    end: /\\\"/,\\n    contains: [\\n      hljs.BACKSLASH_ESCAPE\\n    ]\\n  };\\n  // @\\\"...\\\"\\n  const VERBATIM_STRING = {\\n    scope: 'string',\\n    begin: /@\\\"/,\\n    end: /\\\"/,\\n    contains: [\\n      {\\n        match: /\\\"\\\"/ // escaped \\\"\\n      },\\n      hljs.BACKSLASH_ESCAPE\\n    ]\\n  };\\n  // \\\"\\\"\\\"...\\\"\\\"\\\"\\n  const TRIPLE_QUOTED_STRING = {\\n    scope: 'string',\\n    begin: /\\\"\\\"\\\"/,\\n    end: /\\\"\\\"\\\"/,\\n    relevance: 2\\n  };\\n  const SUBST = {\\n    scope: 'subst',\\n    begin: /\\\\{/,\\n    end: /\\\\}/,\\n    keywords: ALL_KEYWORDS\\n  };\\n  // $\\\"...{1+1}...\\\"\\n  const INTERPOLATED_STRING = {\\n    scope: 'string',\\n    begin: /\\\\$\\\"/,\\n    end: /\\\"/,\\n    contains: [\\n      {\\n        match: /\\\\{\\\\{/ // escaped {\\n      },\\n      {\\n        match: /\\\\}\\\\}/ // escaped }\\n      },\\n      hljs.BACKSLASH_ESCAPE,\\n      SUBST\\n    ]\\n  };\\n  // $@\\\"...{1+1}...\\\"\\n  const INTERPOLATED_VERBATIM_STRING = {\\n    scope: 'string',\\n    begin: /(\\\\$@|@\\\\$)\\\"/,\\n    end: /\\\"/,\\n    contains: [\\n      {\\n        match: /\\\\{\\\\{/ // escaped {\\n      },\\n      {\\n        match: /\\\\}\\\\}/ // escaped }\\n      },\\n      {\\n        match: /\\\"\\\"/\\n      },\\n      hljs.BACKSLASH_ESCAPE,\\n      SUBST\\n    ]\\n  };\\n  // $\\\"\\\"\\\"...{1+1}...\\\"\\\"\\\"\\n  const INTERPOLATED_TRIPLE_QUOTED_STRING = {\\n    scope: 'string',\\n    begin: /\\\\$\\\"\\\"\\\"/,\\n    end: /\\\"\\\"\\\"/,\\n    contains: [\\n      {\\n        match: /\\\\{\\\\{/ // escaped {\\n      },\\n      {\\n        match: /\\\\}\\\\}/ // escaped }\\n      },\\n      SUBST\\n    ],\\n    relevance: 2\\n  };\\n  // '.'\\n  const CHAR_LITERAL = {\\n    scope: 'string',\\n    match: concat(\\n      /'/,\\n      either(\\n        /[^\\\\\\\\']/, // either a single non escaped char...\\n        /\\\\\\\\(?:.|\\\\d{3}|x[a-fA-F\\\\d]{2}|u[a-fA-F\\\\d]{4}|U[a-fA-F\\\\d]{8})/ // ...or an escape sequence\\n      ),\\n      /'/\\n    )\\n  };\\n  // F# allows a lot of things inside string placeholders.\\n  // Things that don't currently seem allowed by the compiler: types definition, attributes usage.\\n  // (Strictly speaking, some of the followings are only allowed inside triple quoted interpolated strings...)\\n  SUBST.contains = [\\n    INTERPOLATED_VERBATIM_STRING,\\n    INTERPOLATED_STRING,\\n    VERBATIM_STRING,\\n    QUOTED_STRING,\\n    CHAR_LITERAL,\\n    BANG_KEYWORD_MODE,\\n    COMMENT,\\n    COMPUTATION_EXPRESSION,\\n    PREPROCESSOR,\\n    NUMBER,\\n    GENERIC_TYPE_SYMBOL\\n  ];\\n  const STRING = {\\n    variants: [\\n      INTERPOLATED_TRIPLE_QUOTED_STRING,\\n      INTERPOLATED_VERBATIM_STRING,\\n      INTERPOLATED_STRING,\\n      TRIPLE_QUOTED_STRING,\\n      VERBATIM_STRING,\\n      QUOTED_STRING,\\n      CHAR_LITERAL\\n    ]\\n  };\\n\\n  return {\\n    name: 'F#',\\n    aliases: [\\n      'fs',\\n      'f#'\\n    ],\\n    keywords: ALL_KEYWORDS,\\n    illegal: /\\\\/\\\\*/,\\n    classNameAliases: {\\n      'computation-expression': 'keyword'\\n    },\\n    contains: [\\n      BANG_KEYWORD_MODE,\\n      STRING,\\n      COMMENT,\\n      {\\n        // type MyType<'a> = ...\\n        begin: [\\n          /type/,\\n          /\\\\s+/,\\n          hljs.UNDERSCORE_IDENT_RE\\n        ],\\n        beginScope: {\\n          1: 'keyword',\\n          3: 'title.class'\\n        },\\n        end: lookahead(/\\\\(|=|$/),\\n        contains: [\\n          GENERIC_TYPE_SYMBOL\\n        ]\\n      },\\n      {\\n        // [<Attributes(\\\"\\\")>]\\n        scope: 'meta',\\n        begin: /^\\\\s*\\\\[</,\\n        excludeBegin: true,\\n        end: lookahead(/>\\\\]/),\\n        relevance: 2,\\n        contains: [\\n          {\\n            scope: 'string',\\n            begin: /\\\"/,\\n            end: /\\\"/\\n          },\\n          NUMBER\\n        ]\\n      },\\n      COMPUTATION_EXPRESSION,\\n      PREPROCESSOR,\\n      NUMBER,\\n      GENERIC_TYPE_SYMBOL\\n    ]\\n  };\\n}\\n\\nmodule.exports = fsharp;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/fsharp.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/gams.js\":\n/*!*********