\n      \\\"GSMPIN\\\",\\n      \\\"FileIO\\\",\\n      \\\"Bridge\\\",\\n      \\\"Serial\\\",\\n      \\\"EEPROM\\\",\\n      \\\"Stream\\\",\\n      \\\"Mouse\\\",\\n      \\\"Audio\\\",\\n      \\\"Servo\\\",\\n      \\\"File\\\",\\n      \\\"Task\\\",\\n      \\\"GPRS\\\",\\n      \\\"WiFi\\\",\\n      \\\"Wire\\\",\\n      \\\"TFT\\\",\\n      \\\"GSM\\\",\\n      \\\"SPI\\\",\\n      \\\"SD\\\"\\n    ],\\n    _hints: [\\n      \\\"setup\\\",\\n      \\\"loop\\\",\\n      \\\"runShellCommandAsynchronously\\\",\\n      \\\"analogWriteResolution\\\",\\n      \\\"retrieveCallingNumber\\\",\\n      \\\"printFirmwareVersion\\\",\\n      \\\"analogReadResolution\\\",\\n      \\\"sendDigitalPortPair\\\",\\n      \\\"noListenOnLocalhost\\\",\\n      \\\"readJoystickButton\\\",\\n      \\\"setFirmwareVersion\\\",\\n      \\\"readJoystickSwitch\\\",\\n      \\\"scrollDisplayRight\\\",\\n      \\\"getVoiceCallStatus\\\",\\n      \\\"scrollDisplayLeft\\\",\\n      \\\"writeMicroseconds\\\",\\n      \\\"delayMicroseconds\\\",\\n      \\\"beginTransmission\\\",\\n      \\\"getSignalStrength\\\",\\n      \\\"runAsynchronously\\\",\\n      \\\"getAsynchronously\\\",\\n      \\\"listenOnLocalhost\\\",\\n      \\\"getCurrentCarrier\\\",\\n      \\\"readAccelerometer\\\",\\n      \\\"messageAvailable\\\",\\n      \\\"sendDigitalPorts\\\",\\n      \\\"lineFollowConfig\\\",\\n      \\\"countryNameWrite\\\",\\n      \\\"runShellCommand\\\",\\n      \\\"readStringUntil\\\",\\n      \\\"rewindDirectory\\\",\\n      \\\"readTemperature\\\",\\n      \\\"setClockDivider\\\",\\n      \\\"readLightSensor\\\",\\n      \\\"endTransmission\\\",\\n      \\\"analogReference\\\",\\n      \\\"detachInterrupt\\\",\\n      \\\"countryNameRead\\\",\\n      \\\"attachInterrupt\\\",\\n      \\\"encryptionType\\\",\\n      \\\"readBytesUntil\\\",\\n      \\\"robotNameWrite\\\",\\n      \\\"readMicrophone\\\",\\n      \\\"robotNameRead\\\",\\n      \\\"cityNameWrite\\\",\\n      \\\"userNameWrite\\\",\\n      \\\"readJoystickY\\\",\\n      \\\"readJoystickX\\\",\\n      \\\"mouseReleased\\\",\\n      \\\"openNextFile\\\",\\n      \\\"scanNetworks\\\",\\n      \\\"noInterrupts\\\",\\n      \\\"digitalWrite\\\",\\n      \\\"beginSpeaker\\\",\\n      \\\"mousePressed\\\",\\n      \\\"isActionDone\\\",\\n      \\\"mouseDragged\\\",\\n      \\\"displayLogos\\\",\\n      \\\"noAutoscroll\\\",\\n      \\\"addParameter\\\",\\n      \\\"remoteNumber\\\",\\n      \\\"getModifiers\\\",\\n      \\\"keyboardRead\\\",\\n      \\\"userNameRead\\\",\\n      \\\"waitContinue\\\",\\n      \\\"processInput\\\",\\n      \\\"parseCommand\\\",\\n      \\\"printVersion\\\",\\n      \\\"readNetworks\\\",\\n      \\\"writeMessage\\\",\\n      \\\"blinkVersion\\\",\\n      \\\"cityNameRead\\\",\\n      \\\"readMessage\\\",\\n      \\\"setDataMode\\\",\\n      \\\"parsePacket\\\",\\n      \\\"isListening\\\",\\n      \\\"setBitOrder\\\",\\n      \\\"beginPacket\\\",\\n      \\\"isDirectory\\\",\\n      \\\"motorsWrite\\\",\\n      \\\"drawCompass\\\",\\n      \\\"digitalRead\\\",\\n      \\\"clearScreen\\\",\\n      \\\"serialEvent\\\",\\n      \\\"rightToLeft\\\",\\n      \\\"setTextSize\\\",\\n      \\\"leftToRight\\\",\\n      \\\"requestFrom\\\",\\n      \\\"keyReleased\\\",\\n      \\\"compassRead\\\",\\n      \\\"analogWrite\\\",\\n      \\\"interrupts\\\",\\n      \\\"WiFiServer\\\",\\n      \\\"disconnect\\\",\\n      \\\"playMelody\\\",\\n      \\\"parseFloat\\\",\\n      \\\"autoscroll\\\",\\n      \\\"getPINUsed\\\",\\n      \\\"setPINUsed\\\",\\n      \\\"setTimeout\\\",\\n      \\\"sendAnalog\\\",\\n      \\\"readSlider\\\",\\n      \\\"analogRead\\\",\\n      \\\"beginWrite\\\",\\n      \\\"createChar\\\",\\n      \\\"motorsStop\\\",\\n      \\\"keyPressed\\\",\\n      \\\"tempoWrite\\\",\\n      \\\"readButton\\\",\\n      \\\"subnetMask\\\",\\n      \\\"debugPrint\\\",\\n      \\\"macAddress\\\",\\n      \\\"writeGreen\\\",\\n      \\\"randomSeed\\\",\\n      \\\"attachGPRS\\\",\\n      \\\"readString\\\",\\n      \\\"sendString\\\",\\n      \\\"remotePort\\\",\\n      \\\"releaseAll\\\",\\n      \\\"mouseMoved\\\",\\n      \\\"background\\\",\\n      \\\"getXChange\\\",\\n      \\\"getYChange\\\",\\n      \\\"answerCall\\\",\\n      \\\"getResult\\\",\\n      \\\"voiceCall\\\",\\n      \\\"endPacket\\\",\\n      \\\"constrain\\\",\\n      \\\"getSocket\\\",\\n      \\\"writeJSON\\\",\\n      \\\"getButton\\\",\\n      \\\"available\\\",\\n      \\\"connected\\\",\\n      \\\"findUntil\\\",\\n      \\\"readBytes\\\",\\n      \\\"exitValue\\\",\\n      \\\"readGreen\\\",\\n      \\\"writeBlue\\\",\\n      \\\"startLoop\\\",\\n      \\\"IPAddress\\\",\\n      \\\"isPressed\\\",\\n      \\\"sendSysex\\\",\\n      \\\"pauseMode\\\",\\n      \\\"gatewayIP\\\",\\n      \\\"setCursor\\\",\\n      \\\"getOemKey\\\",\\n      \\\"tuneWrite\\\",\\n      \\\"noDisplay\\\",\\n      \\\"loadImage\\\",\\n      \\\"switchPIN\\\",\\n      \\\"onRequest\\\",\\n      \\\"onReceive\\\",\\n      \\\"changePIN\\\",\\n      \\\"playFile\\\",\\n      \\\"noBuffer\\\",\\n      \\\"parseInt\\\",\\n      \\\"overflow\\\",\\n      \\\"checkPIN\\\",\\n      \\\"knobRead\\\",\\n      \\\"beginTFT\\\",\\n      \\\"bitClear\\\",\\n      \\\"updateIR\\\",\\n      \\\"bitWrite\\\",\\n      \\\"position\\\",\\n      \\\"writeRGB\\\",\\n      \\\"highByte\\\",\\n      \\\"writeRed\\\",\\n      \\\"setSpeed\\\",\\n      \\\"readBlue\\\",\\n      \\\"noStroke\\\",\\n      \\\"remoteIP\\\",\\n      \\\"transfer\\\",\\n      \\\"shutdown\\\",\\n      \\\"hangCall\\\",\\n      \\\"beginSMS\\\",\\n      \\\"endWrite\\\",\\n      \\\"attached\\\",\\n      \\\"maintain\\\",\\n      \\\"noCursor\\\",\\n      \\\"checkReg\\\",\\n      \\\"checkPUK\\\",\\n      \\\"shiftOut\\\",\\n      \\\"isValid\\\",\\n      \\\"shiftIn\\\",\\n      \\\"pulseIn\\\",\\n      \\\"connect\\\",\\n      \\\"println\\\",\\n      \\\"localIP\\\",\\n      \\\"pinMode\\\",\\n      \\\"getIMEI\\\",\\n      \\\"display\\\",\\n      \\\"noBlink\\\",\\n      \\\"process\\\",\\n      \\\"getBand\\\",\\n      \\\"running\\\",\\n      \\\"beginSD\\\",\\n      \\\"drawBMP\\\",\\n      \\\"lowByte\\\",\\n      \\\"setBand\\\",\\n      \\\"release\\\",\\n      \\\"bitRead\\\",\\n      \\\"prepare\\\",\\n      \\\"pointTo\\\",\\n      \\\"readRed\\\",\\n      \\\"setMode\\\",\\n      \\\"noFill\\\",\\n      \\\"remove\\\",\\n      \\\"listen\\\",\\n      \\\"stroke\\\",\\n      \\\"detach\\\",\\n      \\\"attach\\\",\\n      \\\"noTone\\\",\\n      \\\"exists\\\",\\n      \\\"buffer\\\",\\n      \\\"height\\\",\\n      \\\"bitSet\\\",\\n      \\\"circle\\\",\\n      \\\"config\\\",\\n      \\\"cursor\\\",\\n      \\\"random\\\",\\n      \\\"IRread\\\",\\n      \\\"setDNS\\\",\\n      \\\"endSMS\\\",\\n      \\\"getKey\\\",\\n      \\\"micros\\\",\\n      \\\"millis\\\",\\n      \\\"begin\\\",\\n      \\\"print\\\",\\n      \\\"write\\\",\\n      \\\"ready\\\",\\n      \\\"flush\\\",\\n      \\\"width\\\",\\n      \\\"isPIN\\\",\\n      \\\"blink\\\",\\n      \\\"clear\\\",\\n      \\\"press\\\",\\n      \\\"mkdir\\\",\\n      \\\"rmdir\\\",\\n      \\\"close\\\",\\n      \\\"point\\\",\\n      \\\"yield\\\",\\n      \\\"image\\\",\\n      \\\"BSSID\\\",\\n      \\\"click\\\",\\n      \\\"delay\\\",\\n      \\\"read\\\",\\n      \\\"text\\\",\\n      \\\"move\\\",\\n      \\\"peek\\\",\\n      \\\"beep\\\",\\n      \\\"rect\\\",\\n      \\\"line\\\",\\n      \\\"open\\\",\\n      \\\"seek\\\",\\n      \\\"fill\\\",\\n      \\\"size\\\",\\n      \\\"turn\\\",\\n      \\\"stop\\\",\\n      \\\"home\\\",\\n      \\\"find\\\",\\n      \\\"step\\\",\\n      \\\"tone\\\",\\n      \\\"sqrt\\\",\\n      \\\"RSSI\\\",\\n      \\\"SSID\\\",\\n      \\\"end\\\",\\n      \\\"bit\\\",\\n      \\\"tan\\\",\\n      \\\"cos\\\",\\n      \\\"sin\\\",\\n      \\\"pow\\\",\\n      \\\"map\\\",\\n      \\\"abs\\\",\\n      \\\"max\\\",\\n      \\\"min\\\",\\n      \\\"get\\\",\\n      \\\"run\\\",\\n      \\\"put\\\"\\n    ],\\n    literal: [\\n      \\\"DIGITAL_MESSAGE\\\",\\n      \\\"FIRMATA_STRING\\\",\\n      \\\"ANALOG_MESSAGE\\\",\\n      \\\"REPORT_DIGITAL\\\",\\n      \\\"REPORT_ANALOG\\\",\\n      \\\"INPUT_PULLUP\\\",\\n      \\\"SET_PIN_MODE\\\",\\n      \\\"INTERNAL2V56\\\",\\n      \\\"SYSTEM_RESET\\\",\\n      \\\"LED_BUILTIN\\\",\\n      \\\"INTERNAL1V1\\\",\\n      \\\"SYSEX_START\\\",\\n      \\\"INTERNAL\\\",\\n      \\\"EXTERNAL\\\",\\n      \\\"DEFAULT\\\",\\n      \\\"OUTPUT\\\",\\n      \\\"INPUT\\\",\\n      \\\"HIGH\\\",\\n      \\\"LOW\\\"\\n    ]\\n  };\\n\\n  const ARDUINO = cPlusPlus(hljs);\\n\\n  const kws = /** @type {Record<string,any>} */ (ARDUINO.keywords);\\n\\n  kws.type = [ ...kws.type, ...ARDUINO_KW.type ];\\n  kws.literal = [ ...kws.literal, ...ARDUINO_KW.literal ];\\n  kws.built_in = [ ...kws.built_in, ...ARDUINO_KW.built_in ];\\n  kws._hints = ARDUINO_KW._hints;\\n\\n  ARDUINO.name = 'Arduino';\\n  ARDUINO.aliases = ['ino'];\\n  ARDUINO.supersetOf = \\\"cpp\\\";\\n\\n  return ARDUINO;\\n}\\n\\nmodule.exports = arduino;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/arduino.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/armasm.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/armasm.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: ARM Assembly\\nAuthor: Dan Panzarella <alsoelp@gmail.com>\\nDescription: ARM Assembly including Thumb and Thumb2 instructions\\nCategory: assembler\\n*/\\n\\n/** @type LanguageFn */\\nfunction armasm(hljs) {\\n  // local labels: %?[FB]?[AT]?\\\\d{1,2}\\\\w+\\n\\n  const COMMENT = {\\n    variants: [\\n      hljs.COMMENT('^[ \\\\\\\\t]*(?=#)', '$', {\\n        relevance: 0,\\n        excludeBegin: true\\n      }),\\n      hljs.COMMENT('[;@]', '$', {\\n        relevance: 0\\n      }),\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE\\n    ]\\n  };\\n\\n  return {\\n    name: 'ARM Assembly',\\n    case_insensitive: true,\\n    aliases: ['arm'],\\n    keywords: {\\n      $pattern: '\\\\\\\\.?' + hljs.IDENT_RE,\\n      meta:\\n        // GNU preprocs\\n        '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ' +\\n        // ARM directives\\n        'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',\\n      built_in:\\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 ' + // standard registers\\n        'pc lr sp ip sl sb fp ' + // typical regs plus backward compatibility\\n        'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 ' + // more regs and fp\\n        'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 ' + // coprocessor regs\\n        'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 ' + // more coproc\\n        'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 ' + // advanced SIMD NEON regs\\n\\n        // program status registers\\n        'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf ' +\\n        'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf ' +\\n\\n        // NEON and VFP registers\\n        's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 ' +\\n        's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 ' +\\n        'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 ' +\\n        'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ' +\\n\\n        '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @'\\n    },\\n    contains: [\\n      {\\n        className: 'keyword',\\n        begin: '\\\\\\\\b(' + // mnemonics\\n            'adc|' +\\n            '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|' +\\n            'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|' +\\n            'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|' +\\n            'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|' +\\n            'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|' +\\n            'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|' +\\n            'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|' +\\n            'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|' +\\n            'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|' +\\n            'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|' +\\n            '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|' +\\n            'wfe|wfi|yield' +\\n        ')' +\\n        '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?' + // condition codes\\n        '[sptrx]?' + // legal postfixes\\n        '(?=\\\\\\\\s)' // followed by space\\n      },\\n      COMMENT,\\n      hljs.QUOTE_STRING_MODE,\\n      {\\n        className: 'string',\\n        begin: '\\\\'',\\n        end: '[^\\\\\\\\\\\\\\\\]\\\\'',\\n        relevance: 0\\n      },\\n      {\\n        className: 'title',\\n        begin: '\\\\\\\\|',\\n        end: '\\\\\\\\|',\\n        illegal: '\\\\\\\\n',\\n        relevance: 0\\n      },\\n      {\\n        className: 'number',\\n        variants: [\\n          { // hex\\n            begin: '[#$=]?0x[0-9a-f]+'\\n          },\\n          { // bin\\n            begin: '[#$=]?0b[01]+'\\n          },\\n          { // literal\\n            begin: '[#$=]\\\\\\\\d+'\\n          },\\n          { // bare number\\n            begin: '\\\\\\\\b\\\\\\\\d+'\\n          }\\n        ],\\n        relevance: 0\\n      },\\n      {\\n        className: 'symbol',\\n        variants: [\\n          { // GNU ARM syntax\\n            begin: '^[ \\\\\\\\t]*[a-z_\\\\\\\\.\\\\\\\\$][a-z0-9_\\\\\\\\.\\\\\\\\$]+:'\\n          },\\n          { // ARM syntax\\n            begin: '^[a-z_\\\\\\\\.\\\\\\\\$][a-z0-9_\\\\\\\\.\\\\\\\\$]+'\\n          },\\n          { // label reference\\n            begin: '[=#]\\\\\\\\w+'\\n          }\\n        ],\\n        relevance: 0\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = armasm;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/armasm.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/asciidoc.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/asciidoc.js ***!\n  \\*************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: AsciiDoc\\nRequires: xml.js\\nAuthor: Dan Allen <dan.j.allen@gmail.com>\\nWebsite: http://asciidoc.org\\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\\nCategory: markup\\n*/\\n\\n/** @type LanguageFn */\\nfunction asciidoc(hljs) {\\n  const regex = hljs.regex;\\n  const HORIZONTAL_RULE = {\\n    begin: '^\\\\'{3,}[ \\\\\\\\t]*$',\\n    relevance: 10\\n  };\\n  const ESCAPED_FORMATTING = [\\n    // escaped constrained formatting marks (i.e., \\\\* \\\\_ or \\\\`)\\n    {\\n      begin: /\\\\\\\\[*_`]/\\n    },\\n    // escaped unconstrained formatting marks (i.e., \\\\\\\\** \\\\\\\\__ or \\\\\\\\``)\\n    // must ignore until the next formatting marks\\n    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\\n    {\\n      begin: /\\\\\\\\\\\\\\\\\\\\*{2}[^\\\\n]*?\\\\*{2}/\\n    },\\n    {\\n      begin: /\\\\\\\\\\\\\\\\_{2}[^\\\\n]*_{2}/\\n    },\\n    {\\n      begin: /\\\\\\\\\\\\\\\\`{2}[^\\\\n]*`{2}/\\n    },\\n    // guard: constrained formatting mark may not be preceded by \\\":\\\", \\\";\\\" or\\n    // \\\"}\\\". match these so the constrained rule doesn't see them\\n    {\\n      begin: /[:;}][*_`](?![*_`])/\\n    }\\n  ];\\n  const STRONG = [\\n    // inline unconstrained strong (single line)\\n    {\\n      className: 'strong',\\n      begin: /\\\\*{2}([^\\\\n]+?)\\\\*{2}/\\n    },\\n    // inline unconstrained strong (multi-line)\\n    {\\n      className: 'strong',\\n      begin: regex.concat(\\n        /\\\\*\\\\*/,\\n        /((\\\\*(?!\\\\*)|\\\\\\\\[^\\\\n]|[^*\\\\n\\\\\\\\])+\\\\n)+/,\\n        /(\\\\*(?!\\\\*)|\\\\\\\\[^\\\\n]|[^*\\\\n\\\\\\\\])*/,\\n        /\\\\*\\\\*/\\n      ),\\n      relevance: 0\\n    },\\n    // inline constrained strong (single line)\\n    {\\n      className: 'strong',\\n      // must not precede or follow a word character\\n      begin: /\\\\B\\\\*(\\\\S|\\\\S[^\\\\n]*?\\\\S)\\\\*(?!\\\\w)/\\n    },\\n    // inline constrained strong (multi-line)\\n    {\\n      className: 'strong',\\n      // must not precede or follow a word character\\n      begin: /\\\\*[^\\\\s]([^\\\\n]+\\\\n)+([^\\\\n]+)\\\\*/\\n    }\\n  ];\\n  const EMPHASIS = [\\n    // inline unconstrained emphasis (single line)\\n    {\\n      className: 'emphasis',\\n      begin: /_{2}([^\\\\n]+?)_{2}/\\n    },\\n    // inline unconstrained emphasis (multi-line)\\n    {\\n      className: 'emphasis',\\n      begin: regex.concat(\\n        /__/,\\n        /((_(?!_)|\\\\\\\\[^\\\\n]|[^_\\\\n\\\\\\\\])+\\\\n)+/,\\n        /(_(?!_)|\\\\\\\\[^\\\\n]|[^_\\\\n\\\\\\\\])*/,\\n        /__/\\n      ),\\n      relevance: 0\\n    },\\n    // inline constrained emphasis (single line)\\n    {\\n      className: 'emphasis',\\n      // must not precede or follow a word character\\n      begin: /\\\\b_(\\\\S|\\\\S[^\\\\n]*?\\\\S)_(?!\\\\w)/\\n    },\\n    // inline constrained emphasis (multi-line)\\n    {\\n      className: 'emphasis',\\n      // must not precede or follow a word character\\n      begin: /_[^\\\\s]([^\\\\n]+\\\\n)+([^\\\\n]+)_/\\n    },\\n    // inline constrained emphasis using single quote (legacy)\\n    {\\n      className: 'emphasis',\\n      // must not follow a word character or be followed by a single quote or space\\n      begin: '\\\\\\\\B\\\\'(?![\\\\'\\\\\\\\s])',\\n      end: '(\\\\\\\\n{2}|\\\\')',\\n      // allow escaped single quote followed by word char\\n      contains: [{\\n        begin: '\\\\\\\\\\\\\\\\\\\\'\\\\\\\\w',\\n        relevance: 0\\n      }],\\n      relevance: 0\\n    }\\n  ];\\n  const ADMONITION = {\\n    className: 'symbol',\\n    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\\\\\s+',\\n    relevance: 10\\n  };\\n  const BULLET_LIST = {\\n    className: 'bullet',\\n    begin: '^(\\\\\\\\*+|-+|\\\\\\\\.+|[^\\\\\\\\n]+?::)\\\\\\\\s+'\\n  };\\n\\n  return {\\n    name: 'AsciiDoc',\\n    aliases: ['adoc'],\\n    contains: [\\n      // block comment\\n      hljs.COMMENT(\\n        '^/{4,}\\\\\\\\n',\\n        '\\\\\\\\n/{4,}$',\\n        // can also be done as...\\n        // '^/{4,}$',\\n        // '^/{4,}$',\\n        {\\n          relevance: 10\\n        }\\n      ),\\n      // line comment\\n      hljs.COMMENT(\\n        '^//',\\n        '$',\\n        {\\n          relevance: 0\\n        }\\n      ),\\n      // title\\n      {\\n        className: 'title',\\n        begin: '^\\\\\\\\.\\\\\\\\w.*$'\\n      },\\n      // example, admonition & sidebar blocks\\n      {\\n        begin: '^[=\\\\\\\\*]{4,}\\\\\\\\n',\\n        end: '\\\\\\\\n^[=\\\\\\\\*]{4,}$',\\n        relevance: 10\\n      },\\n      // headings\\n      {\\n        className: 'section',\\n        relevance: 10,\\n        variants: [\\n          {\\n            begin: '^(={1,6})[ \\\\t].+?([ \\\\t]\\\\\\\\1)?$'\\n          },\\n          {\\n            begin: '^[^\\\\\\\\[\\\\\\\\]\\\\\\\\n]+?\\\\\\\\n[=\\\\\\\\-~\\\\\\\\^\\\\\\\\+]{2,}$'\\n          }\\n        ]\\n      },\\n      // document attributes\\n      {\\n        className: 'meta',\\n        begin: '^:.+?:',\\n        end: '\\\\\\\\s',\\n        excludeEnd: true,\\n        relevance: 10\\n      },\\n      // block attributes\\n      {\\n        className: 'meta',\\n        begin: '^\\\\\\\\[.+?\\\\\\\\]$',\\n        relevance: 0\\n      },\\n      // quoteblocks\\n      {\\n        className: 'quote',\\n        begin: '^_{4,}\\\\\\\\n',\\n        end: '\\\\\\\\n_{4,}$',\\n        relevance: 10\\n      },\\n      // listing and literal blocks\\n      {\\n        className: 'code',\\n        begin: '^[\\\\\\\\-\\\\\\\\.]{4,}\\\\\\\\n',\\n        end: '\\\\\\\\n[\\\\\\\\-\\\\\\\\.]{4,}$',\\n        relevance: 10\\n      },\\n      // passthrough blocks\\n      {\\n        begin: '^\\\\\\\\+{4,}\\\\\\\\n',\\n        end: '\\\\\\\\n\\\\\\\\+{4,}$',\\n        contains: [{\\n          begin: '<',\\n          end: '>',\\n          subLanguage: 'xml',\\n          relevance: 0\\n        }],\\n        relevance: 10\\n      },\\n\\n      BULLET_LIST,\\n      ADMONITION,\\n      ...ESCAPED_FORMATTING,\\n      ...STRONG,\\n      ...EMPHASIS,\\n\\n      // inline smart quotes\\n      {\\n        className: 'string',\\n        variants: [\\n          {\\n            begin: \\\"``.+?''\\\"\\n          },\\n          {\\n            begin: \\\"`.+?'\\\"\\n          }\\n        ]\\n      },\\n      // inline unconstrained emphasis\\n      {\\n        className: 'code',\\n        begin: /`{2}/,\\n        end: /(\\\\n{2}|`{2})/\\n      },\\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\\n      {\\n        className: 'code',\\n        begin: '(`.+?`|\\\\\\\\+.+?\\\\\\\\+)',\\n        relevance: 0\\n      },\\n      // indented literal block\\n      {\\n        className: 'code',\\n        begin: '^[ \\\\\\\\t]',\\n        end: '$',\\n        relevance: 0\\n      },\\n      HORIZONTAL_RULE,\\n      // images and links\\n      {\\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\\\\\S+?\\\\\\\\[[^[]*?\\\\\\\\]',\\n        returnBegin: true,\\n        contains: [\\n          {\\n            begin: '(link|image:?):',\\n            relevance: 0\\n          },\\n          {\\n            className: 'link',\\n            begin: '\\\\\\\\w',\\n            end: '[^\\\\\\\\[]+',\\n            relevance: 0\\n          },\\n          {\\n            className: 'string',\\n            begin: '\\\\\\\\[',\\n            end: '\\\\\\\\]',\\n            excludeBegin: true,\\n            excludeEnd: true,\\n            relevance: 0\\n          }\\n        ],\\n        relevance: 10\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = asciidoc;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/asciidoc.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/aspectj.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/aspectj.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: AspectJ\\nAuthor: Hakan Ozler <ozler.hakan@gmail.com>\\nWebsite: https://www.eclipse.org/aspectj/\\nDescription: Syntax Highlighting for the AspectJ Language which is a general-purpose aspect-oriented extension to the Java programming language.\\nAudit: 2020\\n*/\\n\\n/** @type LanguageFn */\\nfunction aspectj(hljs) {\\n  const regex = hljs.regex;\\n  const KEYWORDS = [\\n    \\\"false\\\",\\n    \\\"synchronized\\\",\\n    \\\"int\\\",\\n    \\\"abstract\\\",\\n    \\\"float\\\",\\n    \\\"private\\\",\\n    \\\"char\\\",\\n    \\\"boolean\\\",\\n    \\\"static\\\",\\n    \\\"null\\\",\\n    \\\"if\\\",\\n    \\\"const\\\",\\n    \\\"for\\\",\\n    \\\"true\\\",\\n    \\\"while\\\",\\n    \\\"long\\\",\\n    \\\"throw\\\",\\n    \\\"strictfp\\\",\\n    \\\"finally\\\",\\n    \\\"protected\\\",\\n    \\\"import\\\",\\n    \\\"native\\\",\\n    \\\"final\\\",\\n    \\\"return\\\",\\n    \\\"void\\\",\\n    \\\"enum\\\",\\n    \\\"else\\\",\\n    \\\"extends\\\",\\n    \\\"implements\\\",\\n    \\\"break\\\",\\n    \\\"transient\\\",\\n    \\\"new\\\",\\n    \\\"catch\\\",\\n    \\\"instanceof\\\",\\n    \\\"byte\\\",\\n    \\\"super\\\",\\n    \\\"volatile\\\",\\n    \\\"case\\\",\\n    \\\"assert\\\",\\n    \\\"short\\\",\\n    \\\"package\\\",\\n    \\\"default\\\",\\n    \\\"double\\\",\\n    \\\"public\\\",\\n    \\\"try\\\",\\n    \\\"this\\\",\\n    \\\"switch\\\",\\n    \\\"continue\\\",\\n    \\\"throws\\\",\\n    \\\"privileged\\\",\\n    \\\"aspectOf\\\",\\n    \\\"adviceexecution\\\",\\n    \\\"proceed\\\",\\n    \\\"cflowbelow\\\",\\n    \\\"cflow\\\",\\n    \\\"initialization\\\",\\n    \\\"preinitialization\\\",\\n    \\\"staticinitialization\\\",\\n    \\\"withincode\\\",\\n    \\\"target\\\",\\n    \\\"within\\\",\\n    \\\"execution\\\",\\n    \\\"getWithinTypeName\\\",\\n    \\\"handler\\\",\\n    \\\"thisJoinPoint\\\",\\n    \\\"thisJoinPointStaticPart\\\",\\n    \\\"thisEnclosingJoinPointStaticPart\\\",\\n    \\\"declare\\\",\\n    \\\"parents\\\",\\n    \\\"warning\\\",\\n    \\\"error\\\",\\n    \\\"soft\\\",\\n    \\\"precedence\\\",\\n    \\\"thisAspectInstance\\\"\\n  ];\\n  const SHORTKEYS = [\\n    \\\"get\\\",\\n    \\\"set\\\",\\n    \\\"args\\\",\\n    \\\"call\\\"\\n  ];\\n\\n  return {\\n    name: 'AspectJ',\\n    keywords: KEYWORDS,\\n    illegal: /<\\\\/|#/,\\n    contains: [\\n      hljs.COMMENT(\\n        /\\\\/\\\\*\\\\*/,\\n        /\\\\*\\\\//,\\n        {\\n          relevance: 0,\\n          contains: [\\n            {\\n              // eat up @'s in emails to prevent them to be recognized as doctags\\n              begin: /\\\\w+@/,\\n              relevance: 0\\n            },\\n            {\\n              className: 'doctag',\\n              begin: /@[A-Za-z]+/\\n            }\\n          ]\\n        }\\n      ),\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      {\\n        className: 'class',\\n        beginKeywords: 'aspect',\\n        end: /[{;=]/,\\n        excludeEnd: true,\\n        illegal: /[:;\\\"\\\\[\\\\]]/,\\n        contains: [\\n          {\\n            beginKeywords: 'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'\\n          },\\n          hljs.UNDERSCORE_TITLE_MODE,\\n          {\\n            begin: /\\\\([^\\\\)]*/,\\n            end: /[)]+/,\\n            keywords: KEYWORDS.concat(SHORTKEYS),\\n            excludeEnd: false\\n          }\\n        ]\\n      },\\n      {\\n        className: 'class',\\n        beginKeywords: 'class interface',\\n        end: /[{;=]/,\\n        excludeEnd: true,\\n        relevance: 0,\\n        keywords: 'class interface',\\n        illegal: /[:\\\"\\\\[\\\\]]/,\\n        contains: [\\n          {\\n            beginKeywords: 'extends implements'\\n          },\\n          hljs.UNDERSCORE_TITLE_MODE\\n        ]\\n      },\\n      {\\n        // AspectJ Constructs\\n        beginKeywords: 'pointcut after before around throwing returning',\\n        end: /[)]/,\\n        excludeEnd: false,\\n        illegal: /[\\\"\\\\[\\\\]]/,\\n        contains: [\\n          {\\n            begin: regex.concat(hljs.UNDERSCORE_IDENT_RE, /\\\\s*\\\\(/),\\n            returnBegin: true,\\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\\n          }\\n        ]\\n      },\\n      {\\n        begin: /[:]/,\\n        returnBegin: true,\\n        end: /[{;]/,\\n        relevance: 0,\\n        excludeEnd: false,\\n        keywords: KEYWORDS,\\n        illegal: /[\\\"\\\\[\\\\]]/,\\n        contains: [\\n          {\\n            begin: regex.concat(hljs.UNDERSCORE_IDENT_RE, /\\\\s*\\\\(/),\\n            keywords: KEYWORDS.concat(SHORTKEYS),\\n            relevance: 0\\n          },\\n          hljs.QUOTE_STRING_MODE\\n        ]\\n      },\\n      {\\n        // this prevents 'new Name(...), or throw ...' from being recognized as a function definition\\n        beginKeywords: 'new throw',\\n        relevance: 0\\n      },\\n      {\\n        // the function class is a bit different for AspectJ compared to the Java language\\n        className: 'function',\\n        begin: /\\\\w+ +\\\\w+(\\\\.\\\\w+)?\\\\s*\\\\([^\\\\)]*\\\\)\\\\s*((throws)[\\\\w\\\\s,]+)?[\\\\{;]/,\\n        returnBegin: true,\\n        end: /[{;=]/,\\n        keywords: KEYWORDS,\\n        excludeEnd: true,\\n        contains: [\\n          {\\n            begin: regex.concat(hljs.UNDERSCORE_IDENT_RE, /\\\\s*\\\\(/),\\n            returnBegin: true,\\n            relevance: 0,\\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\\n          },\\n          {\\n            className: 'params',\\n            begin: /\\\\(/,\\n            end: /\\\\)/,\\n            relevance: 0,\\n            keywords: KEYWORDS,\\n            contains: [\\n              hljs.APOS_STRING_MODE,\\n              hljs.QUOTE_STRING_MODE,\\n              hljs.C_NUMBER_MODE,\\n              hljs.C_BLOCK_COMMENT_MODE\\n            ]\\n          },\\n          hljs.C_LINE_COMMENT_MODE,\\n          hljs.C_BLOCK_COMMENT_MODE\\n        ]\\n      },\\n      hljs.C_NUMBER_MODE,\\n      {\\n        // annotation is also used in this language\\n        className: 'meta',\\n        begin: /@[A-Za-z]+/\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = aspectj;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/aspectj.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/autohotkey.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/autohotkey.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: AutoHotkey\\nAuthor: Seongwon Lee <dlimpid@gmail.com>\\nDescription: AutoHotkey language definition\\nCategory: scripting\\n*/\\n\\n/** @type LanguageFn */\\nfunction autohotkey(hljs) {\\n  const BACKTICK_ESCAPE = {\\n    begin: '`[\\\\\\\\s\\\\\\\\S]'\\n  };\\n\\n  return {\\n    name: 'AutoHotkey',\\n    case_insensitive: true,\\n    aliases: ['ahk'],\\n    keywords: {\\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\\n      literal: 'true false NOT AND OR',\\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel'\\n    },\\n    contains: [\\n      BACKTICK_ESCAPE,\\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\\n        contains: [BACKTICK_ESCAPE]\\n      }),\\n      hljs.COMMENT(';', '$', {\\n        relevance: 0\\n      }),\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      {\\n        className: 'number',\\n        begin: hljs.NUMBER_RE,\\n        relevance: 0\\n      },\\n      {\\n        // subst would be the most accurate however fails the point of\\n        // highlighting. variable is comparably the most accurate that actually\\n        // has some effect\\n        className: 'variable',\\n        begin: '%[a-zA-Z0-9#_$@]+%'\\n      },\\n      {\\n        className: 'built_in',\\n        begin: '^\\\\\\\\s*\\\\\\\\w+\\\\\\\\s*(,|%)'\\n        // I don't really know if this is totally relevant\\n      },\\n      {\\n        // symbol would be most accurate however is highlighted just like\\n        // built_in and that makes up a lot of AutoHotkey code meaning that it\\n        // would fail to highlight anything\\n        className: 'title',\\n        variants: [\\n          {\\n            begin: '^[^\\\\\\\\n\\\";]+::(?!=)'\\n          },\\n          {\\n            begin: '^[^\\\\\\\\n\\\";]+:(?!=)',\\n            // zero relevance as it catches a lot of things\\n            // followed by a single ':' in many languages\\n            relevance: 0\\n          }\\n        ]\\n      },\\n      {\\n        className: 'meta',\\n        begin: '^\\\\\\\\s*#\\\\\\\\w+',\\n        end: '$',\\n        relevance: 0\\n      },\\n      {\\n        className: 'built_in',\\n        begin: 'A_[a-zA-Z0-9]+'\\n      },\\n      {\\n        // consecutive commas, not for highlighting but just for relevance\\n        begin: ',\\\\\\\\s*,'\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = autohotkey;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvYXV0b2hvdGtleS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy9hdXRvaG90a2V5LmpzPzA0ODEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkxhbmd1YWdlOiBBdXRvSG90a2V5XG5BdXRob3I6IFNlb25nd29uIExlZSA8ZGxpbXBpZEBnbWFpbC5jb20+XG5EZXNjcmlwdGlvbjogQXV0b0hvdGtleSBsYW5ndWFnZSBkZWZpbml0aW9uXG5DYXRlZ29yeTogc2NyaXB0aW5nXG4qL1xuXG4vKiogQHR5cGUgTGFuZ3VhZ2VGbiAqL1xuZnVuY3Rpb24gYXV0b2hvdGtleShobGpzKSB7XG4gIGNvbnN0IEJBQ0tUSUNLX0VTQ0FQRSA9IHtcbiAgICBiZWdpbjogJ2BbXFxcXHNcXFxcU10nXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnQXV0b0hvdGtleScsXG4gICAgY2FzZV9pbnNlbnNpdGl2ZTogdHJ1ZSxcbiAgICBhbGlhc2VzOiBbJ2FoayddLFxuICAgIGtleXdvcmRzOiB7XG4gICAgICBrZXl3b3JkOiAnQnJlYWsgQ29udGludWUgQ3JpdGljYWwgRXhpdCBFeGl0QXBwIEdvc3ViIEdvdG8gTmV3IE9uRXhpdCBQYXVzZSByZXR1cm4gU2V0QmF0Y2hMaW5lcyBTZXRUaW1lciBTdXNwZW5kIFRocmVhZCBUaHJvdyBVbnRpbCBhaGtfaWQgYWhrX2NsYXNzIGFoa19waWQgYWhrX2V4ZSBhaGtfZ3JvdXAnLFxuICAgICAgbGl0ZXJhbDogJ3RydWUgZmFsc2UgTk9UIEFORCBPUicsXG4gICAgICBidWlsdF9pbjogJ0NvbVNwZWMgQ2xpcGJvYXJkIENsaXBib2FyZEFsbCBFcnJvckxldmVsJ1xuICAgIH0sXG4gICAgY29udGFpbnM6IFtcbiAgICAgIEJBQ0tUSUNLX0VTQ0FQRSxcbiAgICAgIGhsanMuaW5oZXJpdChobGpzLlFVT1RFX1NUUklOR19NT0RFLCB7XG4gICAgICAgIGNvbnRhaW5zOiBbQkFDS1RJQ0tfRVNDQVBFXVxuICAgICAgfSksXG4gICAgICBobGpzLkNPTU1FTlQoJzsnLCAnJCcsIHtcbiAgICAgICAgcmVsZXZhbmNlOiAwXG4gICAgICB9KSxcbiAgICAgIGhsanMuQ19CTE9DS19DT01NRU5UX01PREUsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ251bWJlcicsXG4gICAgICAgIGJlZ2luOiBobGpzLk5VTUJFUl9SRSxcbiAgICAgICAgcmVsZXZhbmNlOiAwXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBzdWJzdCB3b3VsZCBiZSB0aGUgbW9zdCBhY2N1cmF0ZSBob3dldmVyIGZhaWxzIHRoZSBwb2ludCBvZlxuICAgICAgICAvLyBoaWdobGlnaHRpbmcuIHZhcmlhYmxlIGlzIGNvbXBhcmFibHkgdGhlIG1vc3QgYWNjdXJhdGUgdGhhdCBhY3R1YWxseVxuICAgICAgICAvLyBoYXMgc29tZSBlZmZlY3RcbiAgICAgICAgY2xhc3NOYW1lOiAndmFyaWFibGUnLFxuICAgICAgICBiZWdpbjogJyVbYS16QS1aMC05I18kQF0rJSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2J1aWx0X2luJyxcbiAgICAgICAgYmVnaW46ICdeXFxcXHMqXFxcXHcrXFxcXHMqKCx8JSknXG4gICAgICAgIC8vIEkgZG9uJ3QgcmVhbGx5IGtub3cgaWYgdGhpcyBpcyB0b3RhbGx5IHJlbGV2YW50XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBzeW1ib2wgd291bGQgYmUgbW9zdCBhY2N1cmF0ZSBob3dldmVyIGlzIGhpZ2hsaWdodGVkIGp1c3QgbGlrZVxuICAgICAgICAvLyBidWlsdF9pbiBhbmQgdGhhdCBtYWtlcyB1cCBhIGxvdCBvZiBBdXRvSG90a2V5IGNvZGUgbWVhbmluZyB0aGF0IGl0XG4gICAgICAgIC8vIHdvdWxkIGZhaWwgdG8gaGlnaGxpZ2h0IGFueXRoaW5nXG4gICAgICAgIGNsYXNzTmFtZTogJ3RpdGxlJyxcbiAgICAgICAgdmFyaWFudHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBiZWdpbjogJ15bXlxcXFxuXCI7XSs6Oig/IT0pJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgYmVnaW46ICdeW15cXFxcblwiO10rOig/IT0pJyxcbiAgICAgICAgICAgIC8vIHplcm8gcmVsZXZhbmNlIGFzIGl0IGNhdGNoZXMgYSBsb3Qgb2YgdGhpbmdzXG4gICAgICAgICAgICAvLyBmb2xsb3dlZCBieSBhIHNpbmdsZSAnOicgaW4gbWFueSBsYW5ndWFnZXNcbiAgICAgICAgICAgIHJlbGV2YW5jZTogMFxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiAnbWV0YScsXG4gICAgICAgIGJlZ2luOiAnXlxcXFxzKiNcXFxcdysnLFxuICAgICAgICBlbmQ6ICckJyxcbiAgICAgICAgcmVsZXZhbmNlOiAwXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICdidWlsdF9pbicsXG4gICAgICAgIGJlZ2luOiAnQV9bYS16QS1aMC05XSsnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBjb25zZWN1dGl2ZSBjb21tYXMsIG5vdCBmb3IgaGlnaGxpZ2h0aW5nIGJ1dCBqdXN0IGZvciByZWxldmFuY2VcbiAgICAgICAgYmVnaW46ICcsXFxcXHMqLCdcbiAgICAgIH1cbiAgICBdXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXV0b2hvdGtleTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/autohotkey.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/autoit.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/autoit.js ***!\n  \\***********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: AutoIt\\nAuthor: Manh Tuan <junookyo@gmail.com>\\nDescription: AutoIt language definition\\nCategory: scripting\\n*/\\n\\n/** @type LanguageFn */\\nfunction autoit(hljs) {\\n  const KEYWORDS = 'ByRef Case Const ContinueCase ContinueLoop ' +\\n        'Dim Do Else ElseIf EndFunc EndIf EndSelect ' +\\n        'EndSwitch EndWith Enum Exit ExitLoop For Func ' +\\n        'Global If In Local Next ReDim Return Select Static ' +\\n        'Step Switch Then To Until Volatile WEnd While With';\\n\\n  const DIRECTIVES = [\\n    \\\"EndRegion\\\",\\n    \\\"forcedef\\\",\\n    \\\"forceref\\\",\\n    \\\"ignorefunc\\\",\\n    \\\"include\\\",\\n    \\\"include-once\\\",\\n    \\\"NoTrayIcon\\\",\\n    \\\"OnAutoItStartRegister\\\",\\n    \\\"pragma\\\",\\n    \\\"Region\\\",