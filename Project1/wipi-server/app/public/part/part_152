  });\\n  const SUBST_AND_COMMENTS = [].concat(COMMENT, SUBST.contains);\\n  const PARAMS_CONTAINS = SUBST_AND_COMMENTS.concat([\\n    // eat recursive parens in sub expressions\\n    {\\n      begin: /\\\\(/,\\n      end: /\\\\)/,\\n      keywords: KEYWORDS$1,\\n      contains: [\\\"self\\\"].concat(SUBST_AND_COMMENTS)\\n    }\\n  ]);\\n  const PARAMS = {\\n    className: 'params',\\n    begin: /\\\\(/,\\n    end: /\\\\)/,\\n    excludeBegin: true,\\n    excludeEnd: true,\\n    keywords: KEYWORDS$1,\\n    contains: PARAMS_CONTAINS\\n  };\\n\\n  // ES6 classes\\n  const CLASS_OR_EXTENDS = {\\n    variants: [\\n      // class Car extends vehicle\\n      {\\n        match: [\\n          /class/,\\n          /\\\\s+/,\\n          IDENT_RE$1,\\n          /\\\\s+/,\\n          /extends/,\\n          /\\\\s+/,\\n          regex.concat(IDENT_RE$1, \\\"(\\\", regex.concat(/\\\\./, IDENT_RE$1), \\\")*\\\")\\n        ],\\n        scope: {\\n          1: \\\"keyword\\\",\\n          3: \\\"title.class\\\",\\n          5: \\\"keyword\\\",\\n          7: \\\"title.class.inherited\\\"\\n        }\\n      },\\n      // class Car\\n      {\\n        match: [\\n          /class/,\\n          /\\\\s+/,\\n          IDENT_RE$1\\n        ],\\n        scope: {\\n          1: \\\"keyword\\\",\\n          3: \\\"title.class\\\"\\n        }\\n      },\\n\\n    ]\\n  };\\n\\n  const CLASS_REFERENCE = {\\n    relevance: 0,\\n    match:\\n    regex.either(\\n      // Hard coded exceptions\\n      /\\\\bJSON/,\\n      // Float32Array\\n      /\\\\b[A-Z][a-z]+([A-Z][a-z]+|\\\\d)*/,\\n      // CSSFactory\\n      /\\\\b[A-Z]{2,}([A-Z][a-z]+|\\\\d)+/,\\n      // BLAH\\n      // this will be flagged as a UPPER_CASE_CONSTANT instead\\n    ),\\n    className: \\\"title.class\\\",\\n    keywords: {\\n      _: [\\n        // se we still get relevance credit for JS library classes\\n        ...TYPES,\\n        ...ERROR_TYPES\\n      ]\\n    }\\n  };\\n\\n  const USE_STRICT = {\\n    label: \\\"use_strict\\\",\\n    className: 'meta',\\n    relevance: 10,\\n    begin: /^\\\\s*['\\\"]use (strict|asm)['\\\"]/\\n  };\\n\\n  const FUNCTION_DEFINITION = {\\n    variants: [\\n      {\\n        match: [\\n          /function/,\\n          /\\\\s+/,\\n          IDENT_RE$1,\\n          /(?=\\\\s*\\\\()/\\n        ]\\n      },\\n      // anonymous function\\n      {\\n        match: [\\n          /function/,\\n          /\\\\s*(?=\\\\()/\\n        ]\\n      }\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    label: \\\"func.def\\\",\\n    contains: [ PARAMS ],\\n    illegal: /%/\\n  };\\n\\n  const UPPER_CASE_CONSTANT = {\\n    relevance: 0,\\n    match: /\\\\b[A-Z][A-Z_0-9]+\\\\b/,\\n    className: \\\"variable.constant\\\"\\n  };\\n\\n  function noneOf(list) {\\n    return regex.concat(\\\"(?!\\\", list.join(\\\"|\\\"), \\\")\\\");\\n  }\\n\\n  const FUNCTION_CALL = {\\n    match: regex.concat(\\n      /\\\\b/,\\n      noneOf([\\n        ...BUILT_IN_GLOBALS,\\n        \\\"super\\\"\\n      ]),\\n      IDENT_RE$1, regex.lookahead(/\\\\(/)),\\n    className: \\\"title.function\\\",\\n    relevance: 0\\n  };\\n\\n  const PROPERTY_ACCESS = {\\n    begin: regex.concat(/\\\\./, regex.lookahead(\\n      regex.concat(IDENT_RE$1, /(?![0-9A-Za-z$_(])/)\\n    )),\\n    end: IDENT_RE$1,\\n    excludeBegin: true,\\n    keywords: \\\"prototype\\\",\\n    className: \\\"property\\\",\\n    relevance: 0\\n  };\\n\\n  const GETTER_OR_SETTER = {\\n    match: [\\n      /get|set/,\\n      /\\\\s+/,\\n      IDENT_RE$1,\\n      /(?=\\\\()/\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    contains: [\\n      { // eat to avoid empty params\\n        begin: /\\\\(\\\\)/\\n      },\\n      PARAMS\\n    ]\\n  };\\n\\n  const FUNC_LEAD_IN_RE = '(\\\\\\\\(' +\\n    '[^()]*(\\\\\\\\(' +\\n    '[^()]*(\\\\\\\\(' +\\n    '[^()]*' +\\n    '\\\\\\\\)[^()]*)*' +\\n    '\\\\\\\\)[^()]*)*' +\\n    '\\\\\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\\\\\s*=>';\\n\\n  const FUNCTION_VARIABLE = {\\n    match: [\\n      /const|var|let/, /\\\\s+/,\\n      IDENT_RE$1, /\\\\s*/,\\n      /=\\\\s*/,\\n      regex.lookahead(FUNC_LEAD_IN_RE)\\n    ],\\n    className: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    contains: [\\n      PARAMS\\n    ]\\n  };\\n\\n  return {\\n    name: 'Javascript',\\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\\n    keywords: KEYWORDS$1,\\n    // this will be extended by TypeScript\\n    exports: { PARAMS_CONTAINS, CLASS_REFERENCE },\\n    illegal: /#(?![$_A-z])/,\\n    contains: [\\n      hljs.SHEBANG({\\n        label: \\\"shebang\\\",\\n        binary: \\\"node\\\",\\n        relevance: 5\\n      }),\\n      USE_STRICT,\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      HTML_TEMPLATE,\\n      CSS_TEMPLATE,\\n      TEMPLATE_STRING,\\n      COMMENT,\\n      NUMBER,\\n      CLASS_REFERENCE,\\n      {\\n        className: 'attr',\\n        begin: IDENT_RE$1 + regex.lookahead(':'),\\n        relevance: 0\\n      },\\n      FUNCTION_VARIABLE,\\n      { // \\\"value\\\" container\\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\\\\\b(case|return|throw)\\\\\\\\b)\\\\\\\\s*',\\n        keywords: 'return throw case',\\n        relevance: 0,\\n        contains: [\\n          COMMENT,\\n          hljs.REGEXP_MODE,\\n          {\\n            className: 'function',\\n            // we have to count the parens to make sure we actually have the\\n            // correct bounding ( ) before the =>.  There could be any number of\\n            // sub-expressions inside also surrounded by parens.\\n            begin: FUNC_LEAD_IN_RE,\\n            returnBegin: true,\\n            end: '\\\\\\\\s*=>',\\n            contains: [\\n              {\\n                className: 'params',\\n                variants: [\\n                  {\\n                    begin: hljs.UNDERSCORE_IDENT_RE,\\n                    relevance: 0\\n                  },\\n                  {\\n                    className: null,\\n                    begin: /\\\\(\\\\s*\\\\)/,\\n                    skip: true\\n                  },\\n                  {\\n                    begin: /\\\\(/,\\n                    end: /\\\\)/,\\n                    excludeBegin: true,\\n                    excludeEnd: true,\\n                    keywords: KEYWORDS$1,\\n                    contains: PARAMS_CONTAINS\\n                  }\\n                ]\\n              }\\n            ]\\n          },\\n          { // could be a comma delimited list of params to a function call\\n            begin: /,/,\\n            relevance: 0\\n          },\\n          {\\n            match: /\\\\s+/,\\n            relevance: 0\\n          },\\n          { // JSX\\n            variants: [\\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\\n              { match: XML_SELF_CLOSING },\\n              {\\n                begin: XML_TAG.begin,\\n                // we carefully check the opening tag to see if it truly\\n                // is a tag and not a false positive\\n                'on:begin': XML_TAG.isTrulyOpeningTag,\\n                end: XML_TAG.end\\n              }\\n            ],\\n            subLanguage: 'xml',\\n            contains: [\\n              {\\n                begin: XML_TAG.begin,\\n                end: XML_TAG.end,\\n                skip: true,\\n                contains: ['self']\\n              }\\n            ]\\n          }\\n        ],\\n      },\\n      FUNCTION_DEFINITION,\\n      {\\n        // prevent this from getting swallowed up by function\\n        // since they appear \\\"function like\\\"\\n        beginKeywords: \\\"while if switch catch for\\\"\\n      },\\n      {\\n        // we have to count the parens to make sure we actually have the correct\\n        // bounding ( ).  There could be any number of sub-expressions inside\\n        // also surrounded by parens.\\n        begin: '\\\\\\\\b(?!function)' + hljs.UNDERSCORE_IDENT_RE +\\n          '\\\\\\\\(' + // first parens\\n          '[^()]*(\\\\\\\\(' +\\n            '[^()]*(\\\\\\\\(' +\\n              '[^()]*' +\\n            '\\\\\\\\)[^()]*)*' +\\n          '\\\\\\\\)[^()]*)*' +\\n          '\\\\\\\\)\\\\\\\\s*\\\\\\\\{', // end parens\\n        returnBegin:true,\\n        label: \\\"func.def\\\",\\n        contains: [\\n          PARAMS,\\n          hljs.inherit(hljs.TITLE_MODE, { begin: IDENT_RE$1, className: \\\"title.function\\\" })\\n        ]\\n      },\\n      // catch ... so it won't trigger the property rule below\\n      {\\n        match: /\\\\.\\\\.\\\\./,\\n        relevance: 0\\n      },\\n      PROPERTY_ACCESS,\\n      // hack: prevents detection of keywords in some circumstances\\n      // .keyword()\\n      // $keyword = x\\n      {\\n        match: '\\\\\\\\$' + IDENT_RE$1,\\n        relevance: 0\\n      },\\n      {\\n        match: [ /\\\\bconstructor(?=\\\\s*\\\\()/ ],\\n        className: { 1: \\\"title.function\\\" },\\n        contains: [ PARAMS ]\\n      },\\n      FUNCTION_CALL,\\n      UPPER_CASE_CONSTANT,\\n      CLASS_OR_EXTENDS,\\n      GETTER_OR_SETTER,\\n      {\\n        match: /\\\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\\n      }\\n    ]\\n  };\\n}\\n\\n/*\\nLanguage: TypeScript\\nAuthor: Panu Horsmalahti <panu.horsmalahti@iki.fi>\\nContributors: Ike Ku <dempfi@yahoo.com>\\nDescription: TypeScript is a strict superset of JavaScript\\nWebsite: https://www.typescriptlang.org\\nCategory: common, scripting\\n*/\\n\\n/** @type LanguageFn */\\nfunction typescript(hljs) {\\n  const tsLanguage = javascript(hljs);\\n\\n  const IDENT_RE$1 = IDENT_RE;\\n  const TYPES = [\\n    \\\"any\\\",\\n    \\\"void\\\",\\n    \\\"number\\\",\\n    \\\"boolean\\\",\\n    \\\"string\\\",\\n    \\\"object\\\",\\n    \\\"never\\\",\\n    \\\"enum\\\"\\n  ];\\n  const NAMESPACE = {\\n    beginKeywords: 'namespace',\\n    end: /\\\\{/,\\n    excludeEnd: true,\\n    contains: [\\n      tsLanguage.exports.CLASS_REFERENCE\\n    ]\\n  };\\n  const INTERFACE = {\\n    beginKeywords: 'interface',\\n    end: /\\\\{/,\\n    excludeEnd: true,\\n    keywords: {\\n      keyword: 'interface extends',\\n      built_in: TYPES\\n    },\\n    contains: [\\n      tsLanguage.exports.CLASS_REFERENCE\\n    ]\\n  };\\n  const USE_STRICT = {\\n    className: 'meta',\\n    relevance: 10,\\n    begin: /^\\\\s*['\\\"]use strict['\\\"]/\\n  };\\n  const TS_SPECIFIC_KEYWORDS = [\\n    \\\"type\\\",\\n    \\\"namespace\\\",\\n    \\\"typedef\\\",\\n    \\\"interface\\\",\\n    \\\"public\\\",\\n    \\\"private\\\",\\n    \\\"protected\\\",\\n    \\\"implements\\\",\\n    \\\"declare\\\",\\n    \\\"abstract\\\",\\n    \\\"readonly\\\"\\n  ];\\n  const KEYWORDS$1 = {\\n    $pattern: IDENT_RE,\\n    keyword: KEYWORDS.concat(TS_SPECIFIC_KEYWORDS),\\n    literal: LITERALS,\\n    built_in: BUILT_INS.concat(TYPES),\\n    \\\"variable.language\\\": BUILT_IN_VARIABLES\\n  };\\n  const DECORATOR = {\\n    className: 'meta',\\n    begin: '@' + IDENT_RE$1,\\n  };\\n\\n  const swapMode = (mode, label, replacement) => {\\n    const indx = mode.contains.findIndex(m => m.label === label);\\n    if (indx === -1) { throw new Error(\\\"can not find mode to replace\\\"); }\\n    mode.contains.splice(indx, 1, replacement);\\n  };\\n\\n\\n  // this should update anywhere keywords is used since\\n  // it will be the same actual JS object\\n  Object.assign(tsLanguage.keywords, KEYWORDS$1);\\n\\n  tsLanguage.exports.PARAMS_CONTAINS.push(DECORATOR);\\n  tsLanguage.contains = tsLanguage.contains.concat([\\n    DECORATOR,\\n    NAMESPACE,\\n    INTERFACE,\\n  ]);\\n\\n  // TS gets a simpler shebang rule than JS\\n  swapMode(tsLanguage, \\\"shebang\\\", hljs.SHEBANG());\\n  // JS use strict rule purposely excludes `asm` which makes no sense\\n  swapMode(tsLanguage, \\\"use_strict\\\", USE_STRICT);\\n\\n  const functionDeclaration = tsLanguage.contains.find(m => m.label === \\\"func.def\\\");\\n  functionDeclaration.relevance = 0; // () => {} is more typical in TypeScript\\n\\n  Object.assign(tsLanguage, {\\n    name: 'TypeScript',\\n    aliases: ['ts', 'tsx']\\n  });\\n\\n  return tsLanguage;\\n}\\n\\nmodule.exports = typescript;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/typescript.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/vala.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/vala.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Vala\\nAuthor: Antono Vasiljev <antono.vasiljev@gmail.com>\\nDescription: Vala is a new programming language that aims to bring modern programming language features to GNOME developers without imposing any additional runtime requirements and without using a different ABI compared to applications and libraries written in C.\\nWebsite: https://wiki.gnome.org/Projects/Vala\\n*/\\n\\nfunction vala(hljs) {\\n  return {\\n    name: 'Vala',\\n    keywords: {\\n      keyword:\\n        // Value types\\n        'char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 ' +\\n        'uint16 uint32 uint64 float double bool struct enum string void ' +\\n        // Reference types\\n        'weak unowned owned ' +\\n        // Modifiers\\n        'async signal static abstract interface override virtual delegate ' +\\n        // Control Structures\\n        'if while do for foreach else switch case break default return try catch ' +\\n        // Visibility\\n        'public private protected internal ' +\\n        // Other\\n        'using new this get set const stdout stdin stderr var',\\n      built_in:\\n        'DBus GLib CCode Gee Object Gtk Posix',\\n      literal:\\n        'false true null'\\n    },\\n    contains: [\\n      {\\n        className: 'class',\\n        beginKeywords: 'class interface namespace',\\n        end: /\\\\{/,\\n        excludeEnd: true,\\n        illegal: '[^,:\\\\\\\\n\\\\\\\\s\\\\\\\\.]',\\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\\n      },\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      {\\n        className: 'string',\\n        begin: '\\\"\\\"\\\"',\\n        end: '\\\"\\\"\\\"',\\n        relevance: 5\\n      },\\n      hljs.APOS_STRING_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      hljs.C_NUMBER_MODE,\\n      {\\n        className: 'meta',\\n        begin: '^#',\\n        end: '$',\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = vala;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdmFsYS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy92YWxhLmpzP2YxMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkxhbmd1YWdlOiBWYWxhXG5BdXRob3I6IEFudG9ubyBWYXNpbGpldiA8YW50b25vLnZhc2lsamV2QGdtYWlsLmNvbT5cbkRlc2NyaXB0aW9uOiBWYWxhIGlzIGEgbmV3IHByb2dyYW1taW5nIGxhbmd1YWdlIHRoYXQgYWltcyB0byBicmluZyBtb2Rlcm4gcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgZmVhdHVyZXMgdG8gR05PTUUgZGV2ZWxvcGVycyB3aXRob3V0IGltcG9zaW5nIGFueSBhZGRpdGlvbmFsIHJ1bnRpbWUgcmVxdWlyZW1lbnRzIGFuZCB3aXRob3V0IHVzaW5nIGEgZGlmZmVyZW50IEFCSSBjb21wYXJlZCB0byBhcHBsaWNhdGlvbnMgYW5kIGxpYnJhcmllcyB3cml0dGVuIGluIEMuXG5XZWJzaXRlOiBodHRwczovL3dpa2kuZ25vbWUub3JnL1Byb2plY3RzL1ZhbGFcbiovXG5cbmZ1bmN0aW9uIHZhbGEoaGxqcykge1xuICByZXR1cm4ge1xuICAgIG5hbWU6ICdWYWxhJyxcbiAgICBrZXl3b3Jkczoge1xuICAgICAga2V5d29yZDpcbiAgICAgICAgLy8gVmFsdWUgdHlwZXNcbiAgICAgICAgJ2NoYXIgdWNoYXIgdW5pY2hhciBpbnQgdWludCBsb25nIHVsb25nIHNob3J0IHVzaG9ydCBpbnQ4IGludDE2IGludDMyIGludDY0IHVpbnQ4ICcgK1xuICAgICAgICAndWludDE2IHVpbnQzMiB1aW50NjQgZmxvYXQgZG91YmxlIGJvb2wgc3RydWN0IGVudW0gc3RyaW5nIHZvaWQgJyArXG4gICAgICAgIC8vIFJlZmVyZW5jZSB0eXBlc1xuICAgICAgICAnd2VhayB1bm93bmVkIG93bmVkICcgK1xuICAgICAgICAvLyBNb2RpZmllcnNcbiAgICAgICAgJ2FzeW5jIHNpZ25hbCBzdGF0aWMgYWJzdHJhY3QgaW50ZXJmYWNlIG92ZXJyaWRlIHZpcnR1YWwgZGVsZWdhdGUgJyArXG4gICAgICAgIC8vIENvbnRyb2wgU3RydWN0dXJlc1xuICAgICAgICAnaWYgd2hpbGUgZG8gZm9yIGZvcmVhY2ggZWxzZSBzd2l0Y2ggY2FzZSBicmVhayBkZWZhdWx0IHJldHVybiB0cnkgY2F0Y2ggJyArXG4gICAgICAgIC8vIFZpc2liaWxpdHlcbiAgICAgICAgJ3B1YmxpYyBwcml2YXRlIHByb3RlY3RlZCBpbnRlcm5hbCAnICtcbiAgICAgICAgLy8gT3RoZXJcbiAgICAgICAgJ3VzaW5nIG5ldyB0aGlzIGdldCBzZXQgY29uc3Qgc3Rkb3V0IHN0ZGluIHN0ZGVyciB2YXInLFxuICAgICAgYnVpbHRfaW46XG4gICAgICAgICdEQnVzIEdMaWIgQ0NvZGUgR2VlIE9iamVjdCBHdGsgUG9zaXgnLFxuICAgICAgbGl0ZXJhbDpcbiAgICAgICAgJ2ZhbHNlIHRydWUgbnVsbCdcbiAgICB9LFxuICAgIGNvbnRhaW5zOiBbXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2NsYXNzJyxcbiAgICAgICAgYmVnaW5LZXl3b3JkczogJ2NsYXNzIGludGVyZmFjZSBuYW1lc3BhY2UnLFxuICAgICAgICBlbmQ6IC9cXHsvLFxuICAgICAgICBleGNsdWRlRW5kOiB0cnVlLFxuICAgICAgICBpbGxlZ2FsOiAnW14sOlxcXFxuXFxcXHNcXFxcLl0nLFxuICAgICAgICBjb250YWluczogWyBobGpzLlVOREVSU0NPUkVfVElUTEVfTU9ERSBdXG4gICAgICB9LFxuICAgICAgaGxqcy5DX0xJTkVfQ09NTUVOVF9NT0RFLFxuICAgICAgaGxqcy5DX0JMT0NLX0NPTU1FTlRfTU9ERSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiAnc3RyaW5nJyxcbiAgICAgICAgYmVnaW46ICdcIlwiXCInLFxuICAgICAgICBlbmQ6ICdcIlwiXCInLFxuICAgICAgICByZWxldmFuY2U6IDVcbiAgICAgIH0sXG4gICAgICBobGpzLkFQT1NfU1RSSU5HX01PREUsXG4gICAgICBobGpzLlFVT1RFX1NUUklOR19NT0RFLFxuICAgICAgaGxqcy5DX05VTUJFUl9NT0RFLFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICdtZXRhJyxcbiAgICAgICAgYmVnaW46ICdeIycsXG4gICAgICAgIGVuZDogJyQnLFxuICAgICAgfVxuICAgIF1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2YWxhO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/vala.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/vbnet.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/vbnet.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Visual Basic .NET\\nDescription: Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework.\\nAuthors: Poren Chiang <ren.chiang@gmail.com>, Jan Pilzer\\nWebsite: https://docs.microsoft.com/dotnet/visual-basic/getting-started\\nCategory: common\\n*/\\n\\n/** @type LanguageFn */\\nfunction vbnet(hljs) {\\n  const regex = hljs.regex;\\n  /**\\n   * Character Literal\\n   * Either a single character (\\\"a\\\"C) or an escaped double quote (\\\"\\\"\\\"\\\"C).\\n   */\\n  const CHARACTER = {\\n    className: 'string',\\n    begin: /\\\"(\\\"\\\"|[^/n])\\\"C\\\\b/\\n  };\\n\\n  const STRING = {\\n    className: 'string',\\n    begin: /\\\"/,\\n    end: /\\\"/,\\n    illegal: /\\\\n/,\\n    contains: [\\n      {\\n        // double quote escape\\n        begin: /\\\"\\\"/\\n      }\\n    ]\\n  };\\n\\n  /** Date Literals consist of a date, a time, or both separated by whitespace, surrounded by # */\\n  const MM_DD_YYYY = /\\\\d{1,2}\\\\/\\\\d{1,2}\\\\/\\\\d{4}/;\\n  const YYYY_MM_DD = /\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}/;\\n  const TIME_12H = /(\\\\d|1[012])(:\\\\d+){0,2} *(AM|PM)/;\\n  const TIME_24H = /\\\\d{1,2}(:\\\\d{1,2}){1,2}/;\\n  const DATE = {\\n    className: 'literal',\\n    variants: [\\n      {\\n        // #YYYY-MM-DD# (ISO-Date) or #M/D/YYYY# (US-Date)\\n        begin: regex.concat(/# */, regex.either(YYYY_MM_DD, MM_DD_YYYY), / *#/)\\n      },\\n      {\\n        // #H:mm[:ss]# (24h Time)\\n        begin: regex.concat(/# */, TIME_24H, / *#/)\\n      },\\n      {\\n        // #h[:mm[:ss]] A# (12h Time)\\n        begin: regex.concat(/# */, TIME_12H, / *#/)\\n      },\\n      {\\n        // date plus time\\n        begin: regex.concat(\\n          /# */,\\n          regex.either(YYYY_MM_DD, MM_DD_YYYY),\\n          / +/,\\n          regex.either(TIME_12H, TIME_24H),\\n          / *#/\\n        )\\n      }\\n    ]\\n  };\\n\\n  const NUMBER = {\\n    className: 'number',\\n    relevance: 0,\\n    variants: [\\n      {\\n        // Float\\n        begin: /\\\\b\\\\d[\\\\d_]*((\\\\.[\\\\d_]+(E[+-]?[\\\\d_]+)?)|(E[+-]?[\\\\d_]+))[RFD@!#]?/\\n      },\\n      {\\n        // Integer (base 10)\\n        begin: /\\\\b\\\\d[\\\\d_]*((U?[SIL])|[%&])?/\\n      },\\n      {\\n        // Integer (base 16)\\n        begin: /&H[\\\\dA-F_]+((U?[SIL])|[%&])?/\\n      },\\n      {\\n        // Integer (base 8)\\n        begin: /&O[0-7_]+((U?[SIL])|[%&])?/\\n      },\\n      {\\n        // Integer (base 2)\\n        begin: /&B[01_]+((U?[SIL])|[%&])?/\\n      }\\n    ]\\n  };\\n\\n  const LABEL = {\\n    className: 'label',\\n    begin: /^\\\\w+:/\\n  };\\n\\n  const DOC_COMMENT = hljs.COMMENT(/'''/, /$/, {\\n    contains: [\\n      {\\n        className: 'doctag',\\n        begin: /<\\\\/?/,\\n        end: />/\\n      }\\n    ]\\n  });\\n\\n  const COMMENT = hljs.COMMENT(null, /$/, {\\n    variants: [\\n      {\\n        begin: /'/\\n      },\\n      {\\n        // TODO: Use multi-class for leading spaces\\n        begin: /([\\\\t ]|^)REM(?=\\\\s)/\\n      }\\n    ]\\n  });\\n\\n  const DIRECTIVES = {\\n    className: 'meta',\\n    // TODO: Use multi-class for indentation once available\\n    begin: /[\\\\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\\\\b/,\\n    end: /$/,\\n    keywords: {\\n      keyword:\\n        'const disable else elseif enable end externalsource if region then'\\n    },\\n    contains: [ COMMENT ]\\n  };\\n\\n  return {\\n    name: 'Visual Basic .NET',\\n    aliases: [ 'vb' ],\\n    case_insensitive: true,\\n    classNameAliases: {\\n      label: 'symbol'\\n    },\\n    keywords: {\\n      keyword:\\n        'addhandler alias aggregate ansi as async assembly auto binary by byref byval ' + /* a-b */\\n        'call case catch class compare const continue custom declare default delegate dim distinct do ' + /* c-d */\\n        'each equals else elseif end enum erase error event exit explicit finally for friend from function ' + /* e-f */\\n        'get global goto group handles if implements imports in inherits interface into iterator ' + /* g-i */\\n        'join key let lib loop me mid module mustinherit mustoverride mybase myclass ' + /* j-m */\\n        'namespace narrowing new next notinheritable notoverridable ' + /* n */\\n        'of off on operator option optional order overloads overridable overrides ' + /* o */\\n        'paramarray partial preserve private property protected public ' + /* p */\\n        'raiseevent readonly redim removehandler resume return ' + /* r */\\n        'select set shadows shared skip static step stop structure strict sub synclock ' + /* s */\\n        'take text then throw to try unicode until using when where while widening with withevents writeonly yield' /* t-y */,\\n      built_in:\\n        // Operators https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators\\n        'addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor ' +\\n        // Type Conversion Functions https://docs.microsoft.com/dotnet/visual-basic/language-reference/functions/type-conversion-functions\\n        'cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort',\\n      type:\\n        // Data types https://docs.microsoft.com/dotnet/visual-basic/language-reference/data-types\\n        'boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort',\\n      literal: 'true false nothing'\\n    },\\n    illegal:\\n      '//|\\\\\\\\{|\\\\\\\\}|endif|gosub|variant|wend|^\\\\\\\\$ ' /* reserved deprecated keywords */,\\n    contains: [\\n      CHARACTER,\\n      STRING,\\n      DATE,\\n      NUMBER,\\n      LABEL,\\n      DOC_COMMENT,\\n      COMMENT,\\n      DIRECTIVES\\n    ]\\n  };\\n}\\n\\nmodule.exports = vbnet;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/vbnet.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/vbscript-html.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/vbscript-html.js ***!\n  \\******************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: VBScript in HTML\\nRequires: xml.js, vbscript.js\\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\\nDescription: \\\"Bridge\\\" language defining fragments of VBScript in HTML within <% .. %>\\nWebsite: https://en.wikipedia.org/wiki/VBScript\\nCategory: scripting\\n*/\\n\\nfunction vbscriptHtml(hljs) {\\n  return {\\n    name: 'VBScript in HTML',\\n    subLanguage: 'xml',\\n    contains: [\\n      {\\n        begin: '<%',\\n        end: '%>',\\n        subLanguage: 'vbscript'\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = vbscriptHtml;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdmJzY3JpcHQtaHRtbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy92YnNjcmlwdC1odG1sLmpzP2Y0NWEiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkxhbmd1YWdlOiBWQlNjcmlwdCBpbiBIVE1MXG5SZXF1aXJlczogeG1sLmpzLCB2YnNjcmlwdC5qc1xuQXV0aG9yOiBJdmFuIFNhZ2FsYWV2IDxtYW5pYWNAc29mdHdhcmVtYW5pYWNzLm9yZz5cbkRlc2NyaXB0aW9uOiBcIkJyaWRnZVwiIGxhbmd1YWdlIGRlZmluaW5nIGZyYWdtZW50cyBvZiBWQlNjcmlwdCBpbiBIVE1MIHdpdGhpbiA8JSAuLiAlPlxuV2Vic2l0ZTogaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVkJTY3JpcHRcbkNhdGVnb3J5OiBzY3JpcHRpbmdcbiovXG5cbmZ1bmN0aW9uIHZic2NyaXB0SHRtbChobGpzKSB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ1ZCU2NyaXB0IGluIEhUTUwnLFxuICAgIHN1Ykxhbmd1YWdlOiAneG1sJyxcbiAgICBjb250YWluczogW1xuICAgICAge1xuICAgICAgICBiZWdpbjogJzwlJyxcbiAgICAgICAgZW5kOiAnJT4nLFxuICAgICAgICBzdWJMYW5ndWFnZTogJ3Zic2NyaXB0J1xuICAgICAgfVxuICAgIF1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB2YnNjcmlwdEh0bWw7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/vbscript-html.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/vbscript.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/vbscript.js ***!\n  \\*************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: VBScript\\nDescription: VBScript (\\\"Microsoft Visual Basic Scripting Edition\\\") is an Active Scripting language developed by Microsoft that is modeled on Visual Basic.\\nAuthor: Nikita Ledyaev <lenikita@yandex.ru>\\nContributors: Michal Gabrukiewicz <mgabru@gmail.com>\\nWebsite: https://en.wikipedia.org/wiki/VBScript\\nCategory: scripting\\n*/\\n\\n/** @type LanguageFn */\\nfunction vbscript(hljs) {\\n  const regex = hljs.regex;\\n  const BUILT_IN_FUNCTIONS = [\\n    \\\"lcase\\\",\\n    \\\"month\\\",\\n    \\\"vartype\\\",\\n    \\\"instrrev\\\",\\n    \\\"ubound\\\",\\n    \\\"setlocale\\\",\\n    \\\"getobject\\\",\\n    \\\"rgb\\\",\\n    \\\"getref\\\",\\n    \\\"string\\\",\\n    \\\"weekdayname\\\",\\n    \\\"rnd\\\",\\n    \\\"dateadd\\\",\\n    \\\"monthname\\\",\\n    \\\"now\\\",\\n    \\\"day\\\",\\n    \\\"minute\\\",\\n    \\\"isarray\\\",\\n    \\\"cbool\\\",\\n    \\\"round\\\",\\n    \\\"formatcurrency\\\",\\n    \\\"conversions\\\",\\n    \\\"csng\\\",\\n    \\\"timevalue\\\",\\n    \\\"second\\\",\\n    \\\"year\\\",\\n    \\\"space\\\",\\n    \\\"abs\\\",\\n    \\\"clng\\\",\\n    \\\"timeserial\\\",\\n    \\\"fixs\\\",\\n    \\\"len\\\",\\n    \\\"asc\\\",\\n    \\\"isempty\\\",\\n    \\\"maths\\\",\\n    \\\"dateserial\\\",\\n    \\\"atn\\\",\\n    \\\"timer\\\",\\n    \\\"isobject\\\",\\n    \\\"filter\\\",\\n    \\\"weekday\\\",\\n    \\\"datevalue\\\",\\n    \\\"ccur\\\",\\n    \\\"isdate\\\",\\n    \\\"instr\\\",\\n    \\\"datediff\\\",\\n    \\\"formatdatetime\\\",\\n    \\\"replace\\\",\\n    \\\"isnull\\\",\\n    \\\"right\\\",\\n    \\\"sgn\\\",\\n    \\\"array\\\",\\n    \\\"snumeric\\\",\\n    \\\"log\\\",\\n    \\\"cdbl\\\",\\n    \\\"hex\\\",\\n    \\\"chr\\\",\\n    \\\"lbound\\\",\\n    \\\"msgbox\\\",\\n    \\\"ucase\\\",\\n    \\\"getlocale\\\",\\n    \\\"cos\\\",\\n    \\\"cdate\\\",\\n    \\\"cbyte\\\",\\n    \\\"rtrim\\\",\\n    \\\"join\\\",\\n    \\\"hour\\\",\\n    \\\"oct\\\",\\n    \\\"typename\\\",\\n    \\\"trim\\\",\\n    \\\"strcomp\\\",\\n    \\\"int\\\",\\n    \\\"createobject\\\",\\n    \\\"loadpicture\\\",\\n    \\\"tan\\\",\\n    \\\"formatnumber\\\",\\n    \\\"mid\\\",\\n    \\\"split\\\",\\n    \\\"cint\\\",\\n    \\\"sin\\\",\\n    \\\"datepart\\\",\\n    \\\"ltrim\\\",\\n    \\\"sqr\\\",\\n    \\\"time\\\",\\n    \\\"derived\\\",\\n    \\\"eval\\\",\\n    \\\"date\\\",\\n    \\\"formatpercent\\\",\\n    \\\"exp\\\",\\n    \\\"inputbox\\\",\\n    \\\"left\\\",\\n    \\\"ascw\\\",\\n    \\\"chrw\\\",\\n    \\\"regexp\\\",\\n    \\\"cstr\\\",\\n    \\\"err\\\"\\n  ];\\n  const BUILT_IN_OBJECTS = [\\n    \\\"server\\\",\\n    \\\"response\\\",\\n    \\\"request\\\",\\n    // take no arguments so can be called without ()\\n    \\\"scriptengine\\\",\\n    \\\"scriptenginebuildversion\\\",\\n    \\\"scriptengineminorversion\\\",\\n    \\\"scriptenginemajorversion\\\"\\n  ];\\n\\n  const BUILT_IN_CALL = {\\n    begin: regex.concat(regex.either(...BUILT_IN_FUNCTIONS), \\\"\\\\\\\\s*\\\\\\\\(\\\"),\\n    // relevance 0 because this is acting as a beginKeywords really\\n    relevance: 0,\\n    keywords: {\\n      built_in: BUILT_IN_FUNCTIONS\\n    }\\n  };\\n\\n  const LITERALS = [\\n    \\\"true\\\",\\n    \\\"false\\\",\\n    \\\"null\\\",\\n    \\\"nothing\\\",\\n    \\\"empty\\\"\\n  ];\\n\\n  const KEYWORDS = [\\n    \\\"call\\\",\\n    \\\"class\\\",\\n    \\\"const\\\",\\n    \\\"dim\\\",\\n    \\\"do\\\",\\n    \\\"loop\\\",\\n    \\\"erase\\\",\\n    \\\"execute\\\",\\n    \\\"executeglobal\\\",\\n    \\\"exit\\\",\\n    \\\"for\\\",\\n    \\\"each\\\",\\n    \\\"next\\\",\\n    \\\"function\\\",\\n    \\\"if\\\",\\n    \\\"then\\\",\\n    \\\"else\\\",\\n    \\\"on\\\",\\n    \\\"error\\\",\\n    \\\"option\\\",\\n    \\\"explicit\\\",\\n    \\\"new\\\",\\n    \\\"private\\\",\\n    \\\"property\\\",\\n    \\\"let\\\",\\n    \\\"get\\\",\\n    \\\"public\\\",\\n    \\\"randomize\\\",\\n    \\\"redim\\\",\\n    \\\"rem\\\",\\n    \\\"select\\\",\\n    \\\"case\\\",\\n    \\\"set\\\",\\n    \\\"stop\\\",\\n    \\\"sub\\\",\\n    \\\"while\\\",\\n    \\\"wend\\\",\\n    \\\"with\\\",\\n    \\\"end\\\",\\n    \\\"to\\\",\\n    \\\"elseif\\\",\\n    \\\"is\\\",\\n    \\\"or\\\",\\n    \\\"xor\\\",\\n    \\\"and\\\",\\n    \\\"not\\\",\\n    \\\"class_initialize\\\",\\n    \\\"class_terminate\\\",\\n    \\\"default\\\",\\n    \\\"preserve\\\",\\n    \\\"in\\\",\\n    \\\"me\\\",\\n    \\\"byval\\\",\\n    \\\"byref\\\",\\n    \\\"step\\\",\\n    \\\"resume\\\",\\n    \\\"goto\\\"\\n  ];\\n\\n  return {\\n    name: 'VBScript',\\n    aliases: ['vbs'],\\n    case_insensitive: true,\\n    keywords: {\\n      keyword: KEYWORDS,\\n      built_in: BUILT_IN_OBJECTS,\\n      literal: LITERALS\\n    },\\n    illegal: '//',\\n    contains: [\\n      BUILT_IN_CALL,\\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\\\"\\\"'}]}),\\n      hljs.COMMENT(\\n        /'/,\\n        /$/,\\n        {\\n          relevance: 0\\n        }\\n      ),\\n      hljs.C_NUMBER_MODE\\n    ]\\n  };\\n}\\n\\nmodule.exports = vbscript;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdmJzY3JpcHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdmJzY3JpcHQuanM/NWEzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuTGFuZ3VhZ2U6IFZCU2NyaXB0XG5EZXNjcmlwdGlvbjogVkJTY3JpcHQgKFwiTWljcm9zb2Z0IFZpc3VhbCBCYXNpYyBTY3JpcHRpbmcgRWRpdGlvblwiKSBpcyBhbiBBY3RpdmUgU2NyaXB0aW5nIGxhbmd1YWdlIGRldmVsb3BlZCBieSBNaWNyb3NvZnQgdGhhdCBpcyBtb2RlbGVkIG9uIFZpc3VhbCBCYXNpYy5cbkF1dGhvcjogTmlraXRhIExlZHlhZXYgPGxlbmlraXRhQHlhbmRleC5ydT5cbkNvbnRyaWJ1dG9yczogTWljaGFsIEdhYnJ1a2lld2ljeiA8bWdhYnJ1QGdtYWlsLmNvbT5cbldlYnNpdGU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1ZCU2NyaXB0XG5DYXRlZ29yeTogc2NyaXB0aW5nXG4qL1xuXG4vKiogQHR5cGUgTGFuZ3VhZ2VGbiAqL1xuZnVuY3Rpb24gdmJzY3JpcHQoaGxqcykge1xuICBjb25zdCByZWdleCA9IGhsanMucmVnZXg7XG4gIGNvbnN0IEJVSUxUX0lOX0ZVTkNUSU9OUyA9IFtcbiAgICBcImxjYXNlXCIsXG4gICAgXCJtb250aFwiLFxuICAgIFwidmFydHlwZVwiLFxuICAgIFwiaW5zdHJyZXZcIixcbiAgICBcInVib3VuZFwiLFxuICAgIFwic2V0bG9jYWxlXCIsXG4gICAgXCJnZXRvYmplY3RcIixcbiAgICBcInJnYlwiLFxuICAgIFwiZ2V0cmVmXCIsXG4gICAgXCJzdHJpbmdcIixcbiAgICBcIndlZWtkYXluYW1lXCIsXG4gICAgXCJybmRcIixcbiAgICBcImRhdGVhZGRcIixcbiAgICBcIm1vbnRobmFtZVwiLFxuICAgIFwibm93XCIsXG4gICAgXCJkYXlcIixcbiAgICBcIm1pbnV0ZVwiLFxuICAgIFwiaXNhcnJheVwiLFxuICAgIFwiY2Jvb2xcIixcbiAgICBcInJvdW5kXCIsXG4gICAgXCJmb3JtYXRjdXJyZW5jeVwiLFxuICAgIFwiY29udmVyc2lvbnNcIixcbiAgICBcImNzbmdcIixcbiAgICBcInRpbWV2YWx1ZVwiLFxuICAgIFwic2Vjb25kXCIsXG4gICAgXCJ5ZWFyXCIsXG4gICAgXCJzcGFjZVwiLFxuICAgIFwiYWJzXCIsXG4gICAgXCJjbG5nXCIsXG4gICAgXCJ0aW1lc2VyaWFsXCIsXG4gICAgXCJmaXhzXCIsXG4gICAgXCJsZW5cIixcbiAgICBcImFzY1wiLFxuICAgIFwiaXNlbXB0eVwiLFxuICAgIFwibWF0aHNcIixcbiAgICBcImRhdGVzZXJpYWxcIixcbiAgICBcImF0blwiLFxuICAgIFwidGltZXJcIixcbiAgICBcImlzb2JqZWN0XCIsXG4gICAgXCJmaWx0ZXJcIixcbiAgICBcIndlZWtkYXlcIixcbiAgICBcImRhdGV2YWx1ZVwiLFxuICAgIFwiY2N1clwiLFxuICAgIFwiaXNkYXRlXCIsXG4gICAgXCJpbnN0clwiLFxuICAgIFwiZGF0ZWRpZmZcIixcbiAgICBcImZvcm1hdGRhdGV0aW1lXCIsXG4gICAgXCJyZXBsYWNlXCIsXG4gICAgXCJpc251bGxcIixcbiAgICBcInJpZ2h0XCIsXG4gICAgXCJzZ25cIixcbiAgICBcImFycmF5XCIsXG4gICAgXCJzbnVtZXJpY1wiLFxuICAgIFwibG9nXCIsXG4gICAgXCJjZGJsXCIsXG4gICAgXCJoZXhcIixcbiAgICBcImNoclwiLFxuICAgIFwibGJvdW5kXCIsXG4gICAgXCJtc2dib3hcIixcbiAgICBcInVjYXNlXCIsXG4gICAgXCJnZXRsb2NhbGVcIixcbiAgICBcImNvc1wiLFxuICAgIFwiY2RhdGVcIixcbiAgICBcImNieXRlXCIsXG4gICAgXCJydHJpbVwiLFxuICAgIFwiam9pblwiLFxuICAgIFwiaG91clwiLFxuICAgIFwib2N0XCIsXG4gICAgXCJ0eXBlbmFtZVwiLFxuICAgIFwidHJpbVwiLFxuICAgIFwic3RyY29tcFwiLFxuICAgIFwiaW50XCIsXG4gICAgXCJjcmVhdGVvYmplY3RcIixcbiAgICBcImxvYWRwaWN0dXJlXCIsXG4gICAgXCJ0YW5cIixcbiAgICBcImZvcm1hdG51bWJlclwiLFxuICAgIFwibWlkXCIsXG4gICAgXCJzcGxpdFwiLFxuICAgIFwiY2ludFwiLFxuICAgIFwic2luXCIsXG4gICAgXCJkYXRlcGFydFwiLFxuICAgIFwibHRyaW1cIixcbiAgICBcInNxclwiLFxuICAgIFwidGltZVwiLFxuICAgIFwiZGVyaXZlZFwiLFxuICAgIFwiZXZhbFwiLFxuICAgIFwiZGF0ZVwiLFxuICAgIFwiZm9ybWF0cGVyY2VudFwiLFxuICAgIFwiZXhwXCIsXG4gICAgXCJpbnB1dGJveFwiLFxuICAgIFwibGVmdFwiLFxuICAgIFwiYXNjd1wiLFxuICAgIFwiY2hyd1wiLFxuICAgIFwicmVnZXhwXCIsXG4gICAgXCJjc3RyXCIsXG4gICAgXCJlcnJcIlxuICBdO1xuICBjb25zdCBCVUlMVF9JTl9PQkpFQ1RTID0gW1xuICAgIFwic2VydmVyXCIsXG4gICAgXCJyZXNwb25zZVwiLFxuICAgIFwicmVxdWVzdFwiLFxuICAgIC8vIHRha2Ugbm8gYXJndW1lbnRzIHNvIGNhbiBiZSBjYWxsZWQgd2l0aG91dCAoKVxuICAgIFwic2NyaXB0ZW5naW5lXCIsXG4gICAgXCJzY3JpcHRlbmdpbmVidWlsZHZlcnNpb25cIixcbiAgICBcInNjcmlwdGVuZ2luZW1pbm9ydmVyc2lvblwiLFxuICAgIFwic2NyaXB0ZW5naW5lbWFqb3J2ZXJzaW9uXCJcbiAgXTtcblxuICBjb25zdCBCVUlMVF9JTl9DQUxMID0ge1xuICAgIGJlZ2luOiByZWdleC5jb25jYXQocmVnZXguZWl0aGVyKC4uLkJVSUxUX0lOX0ZVTkNUSU9OUyksIFwiXFxcXHMqXFxcXChcIiksXG4gICAgLy8gcmVsZXZhbmNlIDAgYmVjYXVzZSB0aGlzIGlzIGFjdGluZyBhcyBhIGJlZ2luS2V5d29yZHMgcmVhbGx5XG4gICAgcmVsZXZhbmNlOiAwLFxuICAgIGtleXdvcmRzOiB7XG4gICAgICBidWlsdF9pbjogQlVJTFRfSU5fRlVOQ1RJT05TXG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IExJVEVSQUxTID0gW1xuICAgIFwidHJ1ZVwiLFxuICAgIFwiZmFsc2VcIixcbiAgICBcIm51bGxcIixcbiAgICBcIm5vdGhpbmdcIixcbiAgICBcImVtcHR5XCJcbiAgXTtcblxuICBjb25zdCBLRVlXT1JEUyA9IFtcbiAgICBcImNhbGxcIixcbiAgICBcImNsYXNzXCIsXG4gICAgXCJjb25zdFwiLFxuICAgIFwiZGltXCIsXG4gICAgXCJkb1wiLFxuICAgIFwibG9vcFwiLFxuICAgIFwiZXJhc2VcIixcbiAgICBcImV4ZWN1dGVcIixcbiAgICBcImV4ZWN1dGVnbG9iYWxcIixcbiAgICBcImV4aXRcIixcbiAgICBcImZvclwiLFxuICAgIFwiZWFjaFwiLFxuICAgIFwibmV4dFwiLFxuICAgIFwiZnVuY3Rpb25cIixcbiAgICBcImlmXCIsXG4gICAgXCJ0aGVuXCIsXG4gICAgXCJlbHNlXCIsXG4gICAgXCJvblwiLFxuICAgIFwiZXJyb3JcIixcbiAgICBcIm9wdGlvblwiLFxuICAgIFwiZXhwbGljaXRcIixcbiAgICBcIm5ld1wiLFxuICAgIFwicHJpdmF0ZVwiLFxuICAgIFwicHJvcGVydHlcIixcbiAgICBcImxldFwiLFxuICAgIFwiZ2V0XCIsXG4gICAgXCJwdWJsaWNcIixcbiAgICBcInJhbmRvbWl6ZVwiLFxuICAgIFwicmVkaW1cIixcbiAgICBcInJlbVwiLFxuICAgIFwic2VsZWN0XCIsXG4gICAgXCJjYXNlXCIsXG4gICAgXCJzZXRcIixcbiAgICBcInN0b3BcIixcbiAgICBcInN1YlwiLFxuICAgIFwid2hpbGVcIixcbiAgICBcIndlbmRcIixcbiAgICBcIndpdGhcIixcbiAgICBcImVuZFwiLFxuICAgIFwidG9cIixcbiAgICBcImVsc2VpZlwiLFxuICAgIFwiaXNcIixcbiAgICBcIm9yXCIsXG4gICAgXCJ4b3JcIixcbiAgICBcImFuZFwiLFxuICAgIFwibm90XCIsXG4gICAgXCJjbGFzc19pbml0aWFsaXplXCIsXG4gICAgXCJjbGFzc190ZXJtaW5hdGVcIixcbiAgICBcImRlZmF1bHRcIixcbiAgICBcInByZXNlcnZlXCIsXG4gICAgXCJpblwiLFxuICAgIFwibWVcIixcbiAgICBcImJ5dmFsXCIsXG4gICAgXCJieXJlZlwiLFxuICAgIFwic3RlcFwiLFxuICAgIFwicmVzdW1lXCIsXG4gICAgXCJnb3RvXCJcbiAgXTtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6ICdWQlNjcmlwdCcsXG4gICAgYWxpYXNlczogWyd2YnMnXSxcbiAgICBjYXNlX2luc2Vuc2l0aXZlOiB0cnVlLFxuICAgIGtleXdvcmRzOiB7XG4gICAgICBrZXl3b3JkOiBLRVlXT1JEUyxcbiAgICAgIGJ1aWx0X2luOiBCVUlMVF9JTl9PQkpFQ1RTLFxuICAgICAgbGl0ZXJhbDogTElURVJBTFNcbiAgICB9LFxuICAgIGlsbGVnYWw6ICcvLycsXG4gICAgY29udGFpbnM6IFtcbiAgICAgIEJVSUxUX0lOX0NBTEwsXG4gICAgICBobGpzLmluaGVyaXQoaGxqcy5RVU9URV9TVFJJTkdfTU9ERSwge2NvbnRhaW5zOiBbe2JlZ2luOiAnXCJcIid9XX0pLFxuICAgICAgaGxqcy5DT01NRU5UKFxuICAgICAgICAvJy8sXG4gICAgICAgIC8kLyxcbiAgICAgICAge1xuICAgICAgICAgIHJlbGV2YW5jZTogMFxuICAgICAgICB9XG4gICAgICApLFxuICAgICAgaGxqcy5DX05VTUJFUl9NT0RFXG4gICAgXVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHZic2NyaXB0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./node_modules/highlight.js/lib/languages/vbscript.js\\n\");\n\n/***/ }),\n\n/***/ \"./node_modules/highlight.js/lib/languages/verilog.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/highlight.js/lib/languages/verilog.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"/*\\nLanguage: Verilog\\nAuthor: Jon Evans <jon@craftyjon.com>\\nContributors: Boone Severson <boone.severson@gmail.com>\\nDescription: Verilog is a hardware description language used in electronic design automation to describe digital and mixed-signal systems. This highlighter supports Verilog and SystemVerilog through IEEE 1800-2012.\\nWebsite: http://www.verilog.com\\n*/\\n\\nfunction verilog(hljs) {\\n  const regex = hljs.regex;\\n  const KEYWORDS = {\\n    $pattern: /\\\\$?[\\\\w]+(\\\\$[\\\\w]+)*/,\\n    keyword: [\\n      \\\"accept_on\\\",\\n      \\\"alias\\\",\\n      \\\"always\\\",\\n      \\\"always_comb\\\",\\n      \\\"always_ff\\\",\\n      \\\"always_latch\\\",\\n      \\\"and\\\",\\n      \\\"assert\\\",\\n      \\\"assign\\\",\\n      \\\"assume\\\",\\n      \\\"automatic\\\",\\n      \\\"before\\\",\\n      \\\"begin\\\",\\n      \\\"bind\\\",\\n      \\\"bins\\\",\\n      \\\"binsof\\\",\\n      \\\"bit\\\",\\n      \\\"break\\\",\\n      \\\"buf|0\\\",\\n      \\\"bufif0\\\",\\n      \\\"bufif1\\\",\\n      \\\"byte\\\",\\n      \\\"case\\\",\\n      \\\"casex\\\",\\n      \\\"casez\\\",\\n      \\\"cell\\\",\\n      \\\"chandle\\\",\\n      \\\"checker\\\",\\n      \\\"class\\\",\\n      \\\"clocking\\\",\\n      \\\"cmos\\\",\\n      \\\"config\\\",\\n      \\\"const\\\",\\n      \\\"constraint\\\",\\n      \\\"context\\\",\\n      \\\"continue\\\",\\n      \\\"cover\\\",\\n      \\\"covergroup\\\",\\n      \\\"coverpoint\\\",\\n      \\\"cross\\\",\\n      \\\"deassign\\\",\\n      \\\"default\\\",\\n      \\\"defparam\\\",\\n      \\\"design\\\",\\n      \\\"disable\\\",\\n      \\\"dist\\\",\\n      \\\"do\\\",\\n      \\\"edge\\\",\\n      \\\"else\\\",\\n      \\\"end\\\",\\n      \\\"endcase\\\",\\n      \\\"endchecker\\\",\\n      \\\"endclass\\\",\\n      \\\"endclocking\\\",\\n      \\\"endconfig\\\",\\n      \\\"endfunction\\\",\\n      \\\"endgenerate\\\",\\n      \\\"endgroup\\\",\\n      \\\"endinterface\\\",\\n      \\\"endmodule\\\",\\n      \\\"endpackage\\\",\\n      \\\"endprimitive\\\",\\n      \\\"endprogram\\\",\\n      \\\"endproperty\\\",\\n      \\\"endspecify\\\",\\n      \\\"endsequence\\\",\\n      \\\"endtable\\\",\\n      \\\"endtask\\\",\\n      \\\"enum\\\",\\n      \\\"event\\\",\\n      \\\"eventually\\\",\\n      \\\"expect\\\",\\n      \\\"export\\\",\\n      \\\"extends\\\",\\n      \\\"extern\\\",\\n      \\\"final\\\",\\n      \\\"first_match\\\",\\n      \\\"for\\\",\\n      \\\"force\\\",\\n      \\\"foreach\\\",\\n      \\\"forever\\\",\\n      \\\"fork\\\",\\n      \\\"forkjoin\\\",\\n      \\\"function\\\",\\n      \\\"generate|5\\\",\\n      \\\"genvar\\\",\\n      \\\"global\\\",\\n      \\\"highz0\\\",\\n      \\\"highz1\\\",\\n      \\\"if\\\",\\n      \\\"iff\\\",\\n      \\\"ifnone\\\",\\n      \\\"ignore_bins\\\",\\n      \\\"illegal_bins\\\",\\n      \\\"implements\\\",\\n      \\\"implies\\\",\\n      \\\"import\\\",\\n      \\\"incdir\\\",\\n      \\\"include\\\",\\n      \\\"initial\\\",\\n      \\\"inout\\\",\\n      \\\"input\\\",\\n      \\\"inside\\\",\\n      \\\"instance\\\",\\n      \\\"int\\\",\\n      \\\"integer\\\",\\n      \\\"interconnect\\\",\\n      \\\"interface\\\",\\n      \\\"intersect\\\",\\n      \\\"join\\\",\\n      \\\"join_any\\\",\\n      \\\"join_none\\\",\\n      \\\"large\\\",\\n      \\\"let\\\",\\n      \\\"liblist\\\",\\n      \\\"library\\\",\\n      \\\"local\\\",\\n      \\\"localparam\\\",\\n      \\\"logic\\\",\\n      \\\"longint\\\",\\n      \\\"macromodule\\\",\\n      \\\"matches\\\",\\n      \\\"medium\\\",\\n      \\\"modport\\\",\\n      \\\"module\\\",\\n      \\\"nand\\\",\\n      \\\"negedge\\\",\\n      \\\"nettype\\\",\\n      \\\"new\\\",\\n      \\\"nexttime\\\",\\n      \\\"nmos\\\",\\n      \\\"nor\\\",\\n      \\\"noshowcancelled\\\",\\n      \\\"not\\\",\\n      \\\"notif0\\\",\\n      \\\"notif1\\\",\\n      \\\"or\\\",\\n      \\\"output\\\",\\n      \\\"package\\\",\\n      \\\"packed\\\",\\n      \\\"parameter\\\",\\n      \\\"pmos\\\",\\n      \\\"posedge\\\",\\n      \\\"primitive\\\",\\n      \\\"priority\\\",\\n      \\\"program\\\",\\n      \\\"property\\\",\\n      \\\"protected\\\",\\n      \\\"pull0\\\",\\n      \\\"pull1\\\",\\n      \\\"pulldown\\\",\\n      \\\"pullup\\\",\\n      \\\"pulsestyle_ondetect\\\",\\n      \\\"pulsestyle_onevent\\\",\\n      \\\"pure\\\",\\n      \\\"rand\\\",\\n      \\\"randc\\\",\\n      \\\"randcase\\\",\\n      \\\"randsequence\\\",\\n      \\\"rcmos\\\",\\n      \\\"real\\\",\\n      \\\"realtime\\\",\\n      \\\"ref\\\",\\n      \\\"reg\\\",\\n      \\\"reject_on\\\",\\n      \\\"release\\\",\\n      \\\"repeat\\\",\\n      \\\"restrict\\\",\\n      \\\"return\\\",\\n      \\\"rnmos\\\",\\n      \\\"rpmos\\\",\\n      \\\"rtran\\\",\\n      \\\"rtranif0\\\",\\n      \\\"rtranif1\\\",\\n      \\\"s_always\\\",\\n      \\\"s_eventually\\\",\\n      \\\"s_nexttime\\\",\\n      \\\"s_until\\\",\\n      \\\"s_until_with\\\",\\n      \\\"scalared\\\",\\n      \\\"sequence\\\",\\n      \\\"shortint\\\",\\n      \\\"shortreal\\\",\\n      \\\"showcancelled\\\",\\n      \\\"signed\\\",\\n      \\\"small\\\",\\n      \\\"soft\\\",\\n      \\\"solve\\\",\\n      \\\"specify\\\",\\n      \\\"specparam\\\",\\n      \\\"static\\\",\\n      \\\"string\\\",\\n      \\\"strong\\\",\\n      \\\"strong0\\\",\\n      \\\"strong1\\\",\\n      \\\"struct\\\",\\n      \\\"super\\\",\\n      \\\"supply0\\\",\\n      \\\"supply1\\\",\\n      \\\"sync_accept_on\\\",\\n      \\\"sync_reject_on\\\",\\n      \\\"table\\\",\\n      \\\"tagged\\\",\\n      \\\"task\\\",\\n      \\\"this\\\",\\n      \\\"throughout\\\",\\n      \\\"time\\\",\\n      \\\"timeprecision\\\",\\n      \\\"timeunit\\\",\\n      \\\"tran\\\",\\n      \\\"tranif0\\\",\\n      \\\"tranif1\\\",\\n      \\\"tri\\\",\\n      \\\"tri0\\\",\\n      \\\"tri1\\\",\\n      \\\"triand\\\",\\n      \\\"trior\\\",\\n      \\\"trireg\\\",\\n      \\\"type\\\",\\n      \\\"typedef\\\",\\n      \\\"union\\\",\\n      \\\"unique\\\",\\n      \\\"unique0\\\",\\n      \\\"unsigned\\\",\\n      \\\"until\\\",\\n      \\\"until_with\\\",\\n      \\\"untyped\\\",\\n      \\\"use\\\",\\n      \\\"uwire\\\",\\n      \\\"var\\\",\\n      \\\"vectored\\\",\\n      \\\"virtual\\\",\\n      \\\"void\\\",\\n      \\\"wait\\\",\\n      \\\"wait_order\\\",\\n      \\\"wand\\\",\\n      \\\"weak\\\",\\n      \\\"weak0\\\",\\n      \\\"weak1\\\",\\n      \\\"while\\\",\\n      \\\"wildcard\\\",\\n      \\\"wire\\\",\\n      \\\"with\\\",\\n      \\\"within\\\",\\n      \\\"wor\\\",\\n      \\\"xnor\\\",\\n      \\\"xor\\\"\\n    ],\\n    literal: [ 'null' ],\\n    built_in: [\\n      \\\"$finish\\\",\\n      \\\"$stop\\\",\\n      \\\"$exit\\\",\\n      \\\"$fatal\\\",\\n      \\\"$error\\\",\\n      \\\"$warning\\\",\\n      \\\"$info\\\",\\n      \\\"$realtime\\\",\\n      \\\"$time\\\",\\n      \\\"$printtimescale\\\",\\n      \\\"$bitstoreal\\\",\\n      \\\"$bitstoshortreal\\\",\\n      \\\"$itor\\\",\\n      \\\"$signed\\\",\\n      \\\"$cast\\\",\\n      \\\"$bits\\\",\\n      \\\"$stime\\\",\\n      \\\"$timeformat\\\",\\n      \\\"$realtobits\\\",\\n      \\\"$shortrealtobits\\\",\\n      \\\"$rtoi\\\",\\n      \\\"$unsigned\\\",\\n      \\\"$asserton\\\",\\n      \\\"$assertkill\\\",\\n      \\\"$assertpasson\\\",\\n      \\\"$assertfailon\\\",\\n      \\\"$assertnonvacuouson\\\",\\n      \\\"$assertoff\\\",\\n      \\\"$assertcontrol\\\",\\n      \\\"$assertpassoff\\\",\\n      \\\"$assertfailoff\\\",\\n      \\\"$assertvacuousoff\\\",\\n      \\\"$isunbounded\\\",\\n      \\\"$sampled\\\",\\n      \\\"$fell\\\",\\n      \\\"$changed\\\",\\n      \\\"$past_gclk\\\",\\n      \\\"$fell_gclk\\\",\\n      \\\"$changed_gclk\\\",\\n      \\\"$rising_gclk\\\",\\n      \\\"$steady_gclk\\\",\\n      \\\"$coverage_control\\\",\\n      \\\"$coverage_get\\\",\\n      \\\"$coverage_save\\\",\\n      \\\"$set_coverage_db_name\\\",\\n      \\\"$rose\\\",\\n      \\\"$stable\\\",\\n      \\\"$past\\\",\\n      \\\"$rose_gclk\\\",\\n      \\\"$stable_gclk\\\",\\n      \\\"$future_gclk\\\",\\n      \\\"$falling_gclk\\\",\\n      \\\"$changing_gclk\\\",\\n      \\\"$display\\\",\\n      \\\"$coverage_get_max\\\",\\n      \\\"$coverage_merge\\\",\\n      \\\"$get_coverage\\\",\\n      \\\"$load_coverage_db\\\",\\n      \\\"$typename\\\",\\n      \\\"$unpacked_dimensions\\\",\\n      \\\"$left\\\",\\n      \\\"$low\\\",\\n      \\\"$increment\\\",\\n      \\\"$clog2\\\",\\n      \\\"$ln\\\",\\n      \\\"$log10\\\",\\n      \\\"$exp\\\",\\n      \\\"$sqrt\\\",\\n      \\\"$pow\\\",\\n      \\\"$floor\\\",\\n      \\\"$ceil\\\",\\n      \\\"$sin\\\",\\n      \\\"$cos\\\",\\n      \\\"$tan\\\",\\n      \\\"$countbits\\\",\\n      \\\"$onehot\\\",\\n      \\\"$isunknown\\\",\\n      \\\"$fatal\\\",\\n      \\\"$warning\\\",\\n      \\\"$dimensions\\\",\\n      \\\"$right\\\",\\n      \\\"$high\\\",\\n      \\\"$size\\\",\\n      \\\"$asin\\\",\\n      \\\"$acos\\\",\\n      \\\"$atan\\\",\\n      \\\"$atan2\\\",\\n      \\\"$hypot\\\",\\n      \\\"$sinh\\\",\\n      \\\"$cosh\\\",\\n      \\\"$tanh\\\",\\n      \\\"$asinh\\\",\\n      \\\"$acosh\\\",\\n      \\\"$atanh\\\",\\n      \\\"$countones\\\",\\n      \\\"$onehot0\\\",\\n      \\\"$error\\\",\\n      \\\"$info\\\",\\n      \\\"$random\\\",\\n      \\\"$dist_chi_square\\\",\\n      \\\"$dist_erlang\\\",\\n      \\\"$dist_exponential\\\",\\n      \\\"$dist_normal\\\",\\n      \\\"$dist_poisson\\\",\\n      \\\"$dist_t\\\",\\n      \\\"$dist_uniform\\\",\\n      \\\"$q_initialize\\\",\\n      \\\"$q_remove\\\",\\n      \\\"$q_exam\\\",\\n      \\\"$async$and$array\\\",\\n      \\\"$async$nand$array\\\",\\n      \\\"$async$or$array\\\",\\n      \\\"$async$nor$array\\\",\\n      \\\"$sync$and$array\\\",\\n      \\\"$sync$nand$array\\\",\\n      \\\"$sync$or$array\\\",\\n      \\\"$sync$nor$array\\\",\\n      \\\"$q_add\\\",\\n      \\\"$q_full\\\",\\n      \\\"$psprintf\\\",\\n      \\\"$async$and$plane\\\",\\n      \\\"$async$nand$plane\\\",\\n      \\\"$async$or$plane\\\",\\n      \\\"$async$nor$plane\\\",\\n      \\\"$sync$and$plane\\\",\\n      \\\"$sync$nand$plane\\\",\\n      \\\"$sync$or$plane\\\",\\n      \\\"$sync$nor$plane\\\",\\n      \\\"$system\\\",\\n      \\\"$display\\\",\\n      \\\"$displayb\\\",\\n      \\\"$displayh\\\",\\n      \\\"$displayo\\\",\\n      \\\"$strobe\\\",\\n      \\\"$strobeb\\\",\\n      \\\"$strobeh\\\",\\n      \\\"$strobeo\\\",\\n      \\\"$write\\\",\\n      \\\"$readmemb\\\",\\n      \\\"$readmemh\\\",\\n      \\\"$writememh\\\",\\n      \\\"$value$plusargs\\\",\\n      \\\"$dumpvars\\\",\\n      \\\"$dumpon\\\",\\n      \\\"$dumplimit\\\",\\n      \\\"$dumpports\\\",\\n      \\\"$dumpportson\\\",\\n      \\\"$dumpportslimit\\\",\\n      \\\"$writeb\\\",\\n      \\\"$writeh\\\",\\n      \\\"$writeo\\\",\\n      \\\"$monitor\\\",\\n      \\\"$monitorb\\\",\\n      \\\"$monitorh\\\",\\n      \\\"$monitoro\\\",\\n      \\\"$writememb\\\",\\n      \\\"$dumpfile\\\",\\n      \\\"$dumpoff\\\",\\n      \\\"$dumpall\\\",\\n      \\\"$dumpflush\\\",\\n      \\\"$dumpportsoff\\\",\\n      \\\"$dumpportsall\\\",\\n      \\\"$dumpportsflush\\\",\\n      \\\"$fclose\\\",\\n      \\\"$fdisplay\\\",\\n      \\\"$fdisplayb\\\",\\n      \\\"$fdisplayh\\\",\\n      \\\"$fdisplayo\\\",\\n      \\\"$fstrobe\\\",\\n      \\\"$fstrobeb\\\",\\n      \\\"$fstrobeh\\\",\\n      \\\"$fstrobeo\\\",\\n      \\\"$swrite\\\",\\n      \\\"$swriteb\\\",\\n      \\\"$swriteh\\\",\\n      \\\"$swriteo\\\",\\n      \\\"$fscanf\\\",\\n      \\\"$fread\\\",\\n      \\\"$fseek\\\",\\n      \\\"$fflush\\\",\\n      \\\"$feof\\\",\\n      \\\"$fopen\\\",\\n      \\\"$fwrite\\\",\\n      \\\"$fwriteb\\\",\\n      \\\"$fwriteh\\\",\\n      \\\"$fwriteo\\\",\\n      \\\"$fmonitor\\\",\\n      \\\"$fmonitorb\\\",\\n      \\\"$fmonitorh\\\",\\n      \\\"$fmonitoro\\\",\\n      \\\"$sformat\\\",\\n      \\\"$sformatf\\\",\\n      \\\"$fgetc\\\",\\n      \\\"$ungetc\\\",\\n      \\\"$fgets\\\",\\n      \\\"$sscanf\\\",\\n      \\\"$rewind\\\",\\n      \\\"$ftell\\\",\\n      \\\"$ferror\\\"\\n    ]\\n  };\\n  const BUILT_IN_CONSTANTS = [\\n    \\\"__FILE__\\\",\\n    \\\"__LINE__\\\"\\n  ];\\n  const DIRECTIVES = [\\n    \\\"begin_keywords\\\",\\n    \\\"celldefine\\\",\\n    \\\"default_nettype\\\",\\n    \\\"default_decay_time\\\",\\n    \\\"default_trireg_strength\\\",\\n    \\\"define\\\",\\n    \\\"delay_mode_distributed\\\",\\n    \\\"delay_mode_path\\\",\\n    \\\"delay_mode_unit\\\",\\n    \\\"delay_mode_zero\\\",\\n    \\\"else\\\",\\n    \\\"elsif\\\",\\n    \\\"end_keywords\\\",\\n    \\\"endcelldefine\\\",\\n    \\\"endif\\\",\\n    \\\"ifdef\\\",\\n    \\\"ifndef\\\",\\n    \\\"include\\\",\\n    \\\"line\\\",\\n    \\\"nounconnected_drive\\\",\\n    \\\"pragma\\\",\\n    \\\"resetall\\\",\\n    \\\"timescale\\\",\\n    \\\"unconnected_drive\\\",\\n    \\\"undef\\\",\\n    \\\"undefineall\\\"\\n  ];\\n\\n  return {\\n    name: 'Verilog',\\n    aliases: [\\n      'v',\\n      'sv',\\n      'svh'\\n    ],\\n    case_insensitive: false,\\n    keywords: KEYWORDS,\\n    contains: [\\n      hljs.C_BLOCK_COMMENT_MODE,\\n      hljs.C_LINE_COMMENT_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      {\\n        scope: 'number',\\n        contains: [ hljs.BACKSLASH_ESCAPE ],\\n        variants: [\\n          {\\n            begin: /\\\\b((\\\\d+'([bhodBHOD]))[0-9xzXZa-fA-F_]+)/\\n          },\\n          {\\n            begin: /\\\\B(('([bhodBHOD]))[0-9xzXZa-fA-F_]+)/\\n          },\\n          { // decimal\\n            begin: /\\\\b[0-9][0-9_]*/,\\n            relevance: 0\\n          }\\n        ]\\n      },\\n      /* parameters to instances */\\n      {\\n        scope: 'variable',\\n        variants: [\\n          {\\n            begin: '#\\\\\\\\((?!parameter).+\\\\\\\\)'\\n          },\\n          {\\n            begin: '\\\\\\\\.\\\\\\\\w+',\\n            relevance: 0\\n          }\\n        ]\\n      },\\n      {\\n        scope: 'variable.constant',\\n        match: regex.concat(/`/, regex.either(...BUILT_IN_CONSTANTS)),\\n      },\\n      {\\n        scope: 'meta',\\n        begin: regex.concat(/`/, regex.either(...DIRECTIVES)),\\n        end: /$|\\\\/\\\\/|\\\\/\\\\*/,\\n        returnEnd: true,\\n        keywords: DIRECTIVES\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = verilog;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaGlnaGxpZ2h0LmpzL2xpYi9sYW5ndWFnZXMvdmVyaWxvZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaWdobGlnaHQuanMvbGliL2xhbmd1YWdlcy92ZXJpbG9nLmpzP2UxMGYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkxhbmd1YWdlOiBWZXJpbG9nXG5BdXRob3I6IEpvbiBFdmFucyA8am9uQGNyYWZ0eWpvbi5jb20+XG5Db250cmlidXRvcnM6IEJvb25lIFNldmVyc29uIDxib29uZS5zZXZlcnNvbkBnbWFpbC5jb20+XG5EZXNjcmlwdGlvbjogVmVyaWxvZyBpcyBhIGhhcmR3YXJlIGRlc2NyaXB0aW9uIGxhbmd1YWdlIHVzZWQgaW4gZWxlY3Ryb25pYyBkZXNpZ24gYXV0b21hdGlvbiB0byBkZXNjcmliZSBkaWdpdGFsIGFuZCBtaXhlZC1zaWduYWwgc3lzdGVtcy4gVGhpcyBoaWdobGlnaHRlciBzdXBwb3J0cyBWZXJpbG9nIGFuZCBTeXN0ZW1WZXJpbG9nIHRocm91Z2ggSUVFRSAxODAwLTIwMTIuXG5XZWJzaXRlOiBodHRwOi8vd3d3LnZlcmlsb2cuY29tXG4qL1xuXG5mdW5jdGlvbiB2ZXJpbG9nKGhsanMpIHtcbiAgY29uc3QgcmVnZXggPSBobGpzLnJlZ2V4O1xuICBjb25zdCBLRVlXT1JEUyA9IHtcbiAgICAkcGF0dGVybjogL1xcJD9bXFx3XSsoXFwkW1xcd10rKSovLFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIFwiYWNjZXB0X29uXCIsXG4gICAgICBcImFsaWFzXCIsXG4gICAgICBcImFsd2F5c1wiLFxuICAgICAgXCJhbHdheXNfY29tYlwiLFxuICAgICAgXCJhbHdheXNfZmZcIixcbiAgICAgIFwiYWx3YXlzX2xhdGNoXCIsXG4gICAgICBcImFuZFwiLFxuICAgICAgXCJhc3NlcnRcIixcbiAgICAgIFwiYXNzaWduXCIsXG4gICAgICBcImFzc3VtZVwiLFxuICAgICAgXCJhdXRvbWF0aWNcIixcbiAgICAgIFwiYmVmb3JlXCIsXG4gICAgICBcImJlZ2luXCIsXG4gICAgICBcImJpbmRcIixcbiAgICAgIFwiYmluc1wiLFxuICAgICAgXCJiaW5zb2ZcIixcbiAgICAgIFwiYml0XCIsXG4gICAgICBcImJyZWFrXCIsXG4gICAgICBcImJ1ZnwwXCIsXG4gICAgICBcImJ1ZmlmMFwiLFxuICAgICAgXCJidWZpZjFcIixcbiAgICAgIFwiYnl0ZVwiLFxuICAgICAgXCJjYXNlXCIsXG4gICAgICBcImNhc2V4XCIsXG4gICAgICBcImNhc2V6XCIsXG4gICAgICBcImNlbGxcIixcbiAgICAgIFwiY2hhbmRsZVwiLFxuICAgICAgXCJjaGVja2VyXCIsXG4gICAgICBcImNsYXNzXCIsXG4gICAgICBcImNsb2NraW5nXCIsXG4gICAgICBcImNtb3NcIixcbiAgICAgIFwiY29uZmlnXCIsXG4gICAgICBcImNvbnN0XCIsXG4gICAgICBcImNvbnN0cmFpbnRcIixcbiAgICAgIFwiY29udGV4dFwiLFxuICAgICAgXCJjb250aW51ZVwiLFxuICAgICAgXCJjb3ZlclwiLFxuICAgICAgXCJjb3Zlcmdyb3VwXCIsXG4gICAgICBcImNvdmVycG9pbnRcIixcbiAgICAgIFwiY3Jvc3NcIixcbiAgICAgIFwiZGVhc3NpZ25cIixcbiAgICAgIFwiZGVmYXVsdFwiLFxuICAgICAgXCJkZWZwYXJhbVwiLFxuICAgICAgXCJkZXNpZ25cIixcbiAgICAgIFwiZGlzYWJsZVwiLFxuICAgICAgXCJkaXN0XCIsXG4gICAgICBcImRvXCIsXG4gICAgICBcImVkZ2VcIixcbiAgICAgIFwiZWxzZVwiLFxuICAgICAgXCJlbmRcIixcbiAgICAgIFwiZW5kY2FzZVwiLFxuICAgICAgXCJlbmRjaGVja2VyXCIsXG4gICAgICBcImVuZGNsYXNzXCIsXG4gICAgICBcImVuZGNsb2NraW5nXCIsXG4gICAgICBcImVuZGNvbmZpZ1wiLFxuICAgICAgXCJlbmRmdW5jdGlvblwiLFxuICAgICAgXCJlbmRnZW5lcmF0ZVwiLFxuICAgICAgXCJlbmRncm91cFwiLFxuICAgICAgXCJlbmRpbnRlcmZhY2VcIixcbiAgICAgIFwiZW5kbW9kdWxlXCIsXG4gICAgICBcImVuZHBhY2thZ2VcIixcbiAgICAgIFwiZW5kcHJpbWl0aXZlXCIsXG4gICAgICBcImVuZHByb2dyYW1cIixcbiAgICAgIFwiZW5kcHJvcGVydHlcIixcbiAgICAgIFwiZW5kc3BlY2lmeVwiLFxuICAgICAgXCJlbmRzZXF1ZW5jZVwiLFxuICAgICAgXCJlbmR0YWJsZVwiLFxuICAgICAgXCJlbmR0YXNrXCIsXG4gICAgICBcImVudW1cIixcbiAgICAgIFwiZXZlbnRcIixcbiAgICAgIFwiZXZlbnR1YWxseVwiLFxuICAgICAgXCJleHBlY3RcIixcbiAgICAgIFwiZXhwb3J0XCIsXG4gICAgICBcImV4dGVuZHNcIixcbiAgICAgIFwiZXh0ZXJuXCIsXG4gICAgICBcImZpbmFsXCIsXG4gICAgICBcImZpcnN0X21hdGNoXCIsXG4gICAgICBcImZvclwiLFxuICAgICAgXCJmb3JjZVwiLFxuICAgICAgXCJmb3JlYWNoXCIsXG4gICAgICBcImZvcmV2ZXJcIixcbiAgICAgIFwiZm9ya1wiLFxuICAgICAgXCJmb3Jram9pblwiLFxuICAgICAgXCJmdW5jdGlvblwiLFxuICAgICAgXCJnZW5lcmF0ZXw1XCIsXG4gICAgICBcImdlbnZhclwiLFxuICAgICAgXCJnbG9iYWxcIixcbiAgICAgIFwiaGlnaHowXCIsXG4gICAgICBcImhpZ2h6MVwiLFxuICAgICAgXCJpZlwiLFxuICAgICAgXCJpZmZcIixcbiAgICAgIFwiaWZub25lXCIsXG4gICAgICBcImlnbm9yZV9iaW5zXCIsXG4gICAgICBcImlsbGVnYWxfYmluc1wiLFxuICAgICAgXCJpbXBsZW1lbnRzXCIsXG4gICAgICBcImltcGxpZXNcIixcbiAgICAgIFwiaW1wb3J0XCIsXG4gICAgICBcImluY2RpclwiLFxuICAgICAgXCJpbmNsdWRlXCIsXG4gICAgICBcImluaXRpYWxcIixcbiAgICAgIFwiaW5vdXRcIixcbiAgICAgIFwiaW5wdXRcIixcbiAgICAgIFwiaW5zaWRlXCIsXG4gICAgICBcImluc3RhbmNlXCIsXG4gICAgICBcImludFwiLFxuICAgICAgXCJpbnRlZ2VyXCIsXG4gICAgICBcImludGVyY29ubmVjdFwiLFxuICAgICAgXCJpbnRlcmZhY2VcIixcbiAgICAgIFwiaW50ZXJzZWN0XCIsXG4gICAgICBcImpvaW5cIixcbiAgICAgIFwiam9pbl9hbnlcIixcbiAgICAgIFwiam9pbl9ub25lXCIsXG4gICAgICBcImxhcmdlXCIsXG4gICAgICBcImxldFwiLFxuICAgICAgXCJsaWJsaXN0XCIsXG4gICAgICBcImxpYnJhcnlcIixcbiAgICAgIFwibG9jYWxcIixcbiAgICAgIFwibG9jYWxwYXJhbVwiLFxuICAgICAgXCJsb2dpY1wiLFxuICAgICAgXCJsb25naW50XCIsXG4gICAgICBcIm1hY3JvbW9kdWxlXCIsXG4gICAgICBcIm1hdGNoZXNcIixcbiAgICAgIFwibWVkaXVtXCIsXG4gICAgICBcIm1vZHBvcnRcIixcbiAgICAgIFwibW9kdWxlXCIsXG4gICAgICBcIm5hbmRcIixcbiAgICAgIFwibmVnZWRnZVwiLFxuICAgICAgXCJuZXR0eXBlXCIsXG4gICAgICBcIm5ld1wiLFxuICAgICAgXCJuZXh0dGltZVwiLFxuICAgICAgXCJubW9zXCIsXG4gICAgICBcIm5vclwiLFxuICAgICAgXCJub3Nob3djYW5jZWxsZWRcIixcbiAgICAgIFwibm90XCIsXG4gICAgICBcIm5vdGlmMFwiLFxuICAgICAgXCJub3RpZjFcIixcbiAgICAgIFwib3JcIixcbiAgICAgIFwib3V0cHV0XCIsXG4gICAgICBcInBhY2thZ2VcIixcbiAgICAgIFwicGFja2VkXCIsXG4gICAgICBcInBhcmFtZXRlclwiLFxuICAgICAgXCJwbW9zXCIsXG4gICAgICBcInBvc2VkZ2VcIixcbiAgICAgIFwicHJpbWl0aXZlXCIsXG4gICAgICBcInByaW9yaXR5XCIsXG4gICAgICBcInByb2dyYW1cIixcbiAgICAgIFwicHJvcGVydHlcIixcbiAgICAgIFwicHJvdGVjdGVkXCIsXG4gICAgICBcInB1bGwwXCIsXG4gICAgICBcInB1bGwxXCIsXG4gICAgICBcInB1bGxkb3duXCIsXG4gICAgICBcInB1bGx1cFwiLFxuICAgICAgXCJwdWxzZXN0eWxlX29uZGV0ZWN0XCIsXG4gICAgICBcInB1bHNlc3R5bGVfb25ldmVudFwiLFxuICAgICAgXCJwdXJlXCIsXG4gICAgICBcInJhbmRcIixcbiAgICAgIFwicmFuZGNcIixcbiAgICAgIFwicmFuZGNhc2VcIixcbiAgICAgIFwicmFuZHNlcXVlbmNlXCIsXG4gICAgICBcInJjbW9zXCIsXG4gICAgICBcInJlYWxcIixcbiAgICAgIFwicmVhbHRpbWVcIixcbiAgICAgIFwicmVmXCIsXG4gICAgICBcInJlZ1wiLFxuICAgICAgXCJyZWplY3Rfb25cIixcb